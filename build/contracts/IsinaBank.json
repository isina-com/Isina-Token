{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "TIME_AFTER_12_MONTHS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "queries",
      "outputs": [
        {
          "name": "seller",
          "type": "address"
        },
        {
          "name": "tokens",
          "type": "uint256"
        },
        {
          "name": "time",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token_address",
          "type": "address"
        }
      ],
      "name": "set_token_address",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "send_ether",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "sell_tokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "STOP_SELL_TIME",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens_for_sell",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "allSourcePaths": [
    "contracts/IsinaBank.sol",
    "contracts/open-zeppelin/contracts/math/SafeMath.sol",
    "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
    "contracts/provable/oraclize_api.sol"
  ],
  "ast": {
    "absolutePath": "contracts/IsinaBank.sol",
    "exportedSymbols": {
      "IsinaBank": [
        370
      ]
    },
    "id": 371,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:0"
      },
      {
        "absolutePath": "contracts/provable/oraclize_api.sol",
        "file": "contracts/provable/oraclize_api.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 371,
        "sourceUnit": 9421,
        "src": "332:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
        "file": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 371,
        "sourceUnit": 3125,
        "src": "378:65:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
        "file": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 371,
        "sourceUnit": 3014,
        "src": "444:61:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IsinaToken.sol",
        "file": "./IsinaToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 371,
        "sourceUnit": 2881,
        "src": "506:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9420,
              "src": "556:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$9420",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "556:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3124,
              "src": "571:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3124",
                "typeString": "contract Ownable"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "571:7:0"
          }
        ],
        "contractDependencies": [
          3124,
          9420
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 370,
        "linearizedBaseContracts": [
          370,
          3124,
          9420
        ],
        "name": "IsinaBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3013,
              "src": "591:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3013",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "585:27:0",
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "604:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 15,
            "name": "TIME_AFTER_12_MONTHS",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "618:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "618:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "665:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 18,
            "name": "STOP_SELL_TIME",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "686:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3939393939393939393939393939",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "727:14:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_99999999999999_by_1",
                "typeString": "int_const 99999999999999"
              },
              "value": "99999999999999"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 20,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "748:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IsinaToken_$2880",
              "typeString": "contract IsinaToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 19,
              "name": "IsinaToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2880,
              "src": "748:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IsinaToken_$2880",
                "typeString": "contract IsinaToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "IsinaBank.Queries",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 22,
                "name": "seller",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "803:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 21,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "803:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "name": "tokens",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "835:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "835:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "time",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "859:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "859:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Queries",
            "nodeType": "StructDefinition",
            "scope": 370,
            "src": "778:100:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 31,
            "name": "queries",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "883:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
              "typeString": "mapping(bytes32 => struct IsinaBank.Queries)"
            },
            "typeName": {
              "id": 30,
              "keyType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "891:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "883:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                "typeString": "mapping(bytes32 => struct IsinaBank.Queries)"
              },
              "valueType": {
                "contractScope": null,
                "id": 29,
                "name": "Queries",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 27,
                "src": "902:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Queries_$27_storage_ptr",
                  "typeString": "struct IsinaBank.Queries"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 35,
            "name": "tokens_for_sell",
            "nodeType": "VariableDeclaration",
            "scope": 370,
            "src": "931:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "939:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "931:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 33,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "950:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "1017:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 39,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:2:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1017:0:0"
            },
            "scope": 370,
            "src": "988:31:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "1057:198:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 43,
                            "name": "tokens_for_sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "1075:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 46,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 44,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9959,
                              "src": "1091:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 45,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1091:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1075:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1105:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1075:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9962,
                      "src": "1067:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1067:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:40:0"
                },
                {
                  "assignments": [
                    52
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 52,
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "1117:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1117:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 57,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 53,
                      "name": "tokens_for_sell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1134:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 56,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 54,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9959,
                        "src": "1150:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1150:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1134:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1117:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "tokens_for_sell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1171:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 59,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "1187:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1187:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1171:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1201:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1171:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1171:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 66,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "1229:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1229:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1241:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 65,
                      "name": "get_ethusd_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "1212:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address payable,uint256) returns (bool)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:36:0"
                }
              ]
            },
            "documentation": null,
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sell_tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:2:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:0"
            },
            "scope": 370,
            "src": "1025:230:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "1330:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1340:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IsinaToken_$2880",
                        "typeString": "contract IsinaToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "token_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "1359:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 80,
                        "name": "IsinaToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2880,
                        "src": "1348:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IsinaToken_$2880_$",
                          "typeString": "type(contract IsinaToken)"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1348:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IsinaToken_$2880",
                        "typeString": "contract IsinaToken"
                      }
                    },
                    "src": "1340:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IsinaToken_$2880",
                      "typeString": "contract IsinaToken"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 77,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 76,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3057,
                  "src": "1320:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1320:9:0"
              }
            ],
            "name": "set_token_address",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "token_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "1288:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1287:23:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:0:0"
            },
            "scope": 370,
            "src": "1261:119:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1513:120:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 96,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9959,
                            "src": "1531:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1531:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 99,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "1553:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IsinaToken_$2880",
                                "typeString": "contract IsinaToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IsinaToken_$2880",
                                "typeString": "contract IsinaToken"
                              }
                            ],
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1545:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1545:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1531:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9962,
                      "src": "1523:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 105,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1587:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "1598:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 104,
                      "name": "get_ethusd_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "1570:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address payable,uint256) returns (bool)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1622:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 94,
                  "id": 110,
                  "nodeType": "Return",
                  "src": "1615:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send_ether",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1415:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1415:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 90,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1450:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1405:65:0"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1503:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1502:6:0"
            },
            "scope": 370,
            "src": "1386:247:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "1738:590:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9959,
                            "src": "1756:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1756:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 122,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7243,
                            "src": "1770:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1756:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9962,
                      "src": "1748:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1748:43:0"
                },
                {
                  "assignments": [
                    128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 128,
                      "name": "ethusd_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "1801:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1801:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 132,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116,
                        "src": "1839:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 129,
                      "name": "string_to_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 369,
                      "src": "1824:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) pure returns (uint256)"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1801:46:0"
                },
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "name": "eth_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "1857:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1857:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "queries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1905:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                              "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                            }
                          },
                          "id": 138,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 137,
                            "name": "_myid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "1913:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1905:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Queries_$27_storage",
                            "typeString": "struct IsinaBank.Queries storage ref"
                          }
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "1905:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "ethusd_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1940:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 141,
                            "name": "queries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "1966:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                              "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                            }
                          },
                          "id": 143,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 142,
                            "name": "_myid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 114,
                            "src": "1974:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1966:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Queries_$27_storage",
                            "typeString": "struct IsinaBank.Queries storage ref"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "time",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "1966:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 135,
                      "name": "get_eth_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "1878:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:117:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1857:138:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "eth_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2009:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2022:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2009:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 151,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9997,
                              "src": "2035:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IsinaBank_$370",
                                "typeString": "contract IsinaBank"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IsinaBank_$370",
                                "typeString": "contract IsinaBank"
                              }
                            ],
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2027:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2027:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2027:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "eth_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2052:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2027:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2009:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "2137:185:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 166,
                              "name": "tokens_for_sell",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "2151:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 171,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 167,
                                  "name": "queries",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "2167:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                                    "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                                  }
                                },
                                "id": 169,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 168,
                                  "name": "_myid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 114,
                                  "src": "2175:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2167:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Queries_$27_storage",
                                  "typeString": "struct IsinaBank.Queries storage ref"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "2167:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2151:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 179,
                                    "name": "queries",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31,
                                    "src": "2272:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                                      "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                                    }
                                  },
                                  "id": 181,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 180,
                                    "name": "_myid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 114,
                                    "src": "2280:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2272:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Queries_$27_storage",
                                    "typeString": "struct IsinaBank.Queries storage ref"
                                  }
                                },
                                "id": 182,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokens",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24,
                                "src": "2272:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 172,
                                  "name": "tokens_for_sell",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "2208:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 177,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 173,
                                      "name": "queries",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31,
                                      "src": "2224:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                                        "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                                      }
                                    },
                                    "id": 175,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 174,
                                      "name": "_myid",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 114,
                                      "src": "2232:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2224:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Queries_$27_storage",
                                      "typeString": "struct IsinaBank.Queries storage ref"
                                    }
                                  },
                                  "id": 176,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "seller",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 22,
                                  "src": "2224:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2208:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2907,
                              "src": "2208:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2208:103:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2151:160:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "2151:160:0"
                      }
                    ]
                  },
                  "id": 187,
                  "nodeType": "IfStatement",
                  "src": "2005:317:0",
                  "trueBody": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "2064:67:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 162,
                              "name": "eth_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 134,
                              "src": "2109:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 157,
                                  "name": "queries",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31,
                                  "src": "2078:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                                    "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                                  }
                                },
                                "id": 159,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 158,
                                  "name": "_myid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 114,
                                  "src": "2086:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2078:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Queries_$27_storage",
                                  "typeString": "struct IsinaBank.Queries storage ref"
                                }
                              },
                              "id": 160,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22,
                              "src": "2078:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2078:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2078:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "2078:42:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "name": "_myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1668:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "1691:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1658:60:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1738:0:0"
            },
            "scope": 370,
            "src": "1639:689:0",
            "stateMutability": "nonpayable",
            "superFunction": 4147,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "2518:353:0",
              "statements": [
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "name": "usd_buy_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "2528:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2528:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2571:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2577:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2571:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "33",
                            "id": 204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2564:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 202,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "2553:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2966,
                          "src": "2553:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2553:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2991,
                      "src": "2553:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2528:51:0"
                },
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "name": "sell_usd_price",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "2589:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2589:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 214,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2589:22:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 215,
                      "name": "time",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "2625:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 216,
                      "name": "TIME_AFTER_12_MONTHS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2632:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2625:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "2743:63:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 229,
                            "name": "sell_usd_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "2757:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2793:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 230,
                                "name": "usd_buy_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "2774:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2966,
                              "src": "2774:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2774:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2757:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 235,
                        "nodeType": "ExpressionStatement",
                        "src": "2757:38:0"
                      }
                    ]
                  },
                  "id": 237,
                  "nodeType": "IfStatement",
                  "src": "2621:185:0",
                  "trueBody": {
                    "id": 228,
                    "nodeType": "Block",
                    "src": "2654:83:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 218,
                            "name": "sell_usd_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "2668:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 224,
                                "name": "usd_buy_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "2711:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "32",
                                    "id": 221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2704:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 219,
                                    "name": "usd_buy_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 201,
                                    "src": "2685:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2991,
                                  "src": "2685:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2685:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2907,
                              "src": "2685:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2685:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2668:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "2668:58:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 238,
                      "name": "sell_eth_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "2815:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 241,
                          "name": "ethusd_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 193,
                          "src": "2851:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "sell_usd_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2832:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2991,
                        "src": "2832:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2832:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2815:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:49:0"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_eth_value",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2371:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2371:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "name": "ethusd_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2395:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2395:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2425:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2361:82:0"
            },
            "returnParameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "name": "sell_eth_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2490:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2490:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2489:24:0"
            },
            "scope": 370,
            "src": "2334:537:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "3016:416:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 257,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9997,
                                "src": "3042:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IsinaBank_$370",
                                  "typeString": "contract IsinaBank"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IsinaBank_$370",
                                  "typeString": "contract IsinaBank"
                                }
                              ],
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3034:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3034:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3034:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3076:5:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              }
                            ],
                            "id": 260,
                            "name": "oraclize_getPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4188,
                              4206
                            ],
                            "referencedDeclaration": 4188,
                            "src": "3058:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (string memory) returns (uint256)"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3058:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3034:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9962,
                      "src": "3026:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3026:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3026:57:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 267,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "3101:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3101:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 269,
                          "name": "STOP_SELL_TIME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "3119:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3101:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9962,
                      "src": "3093:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3093:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "3093:41:0"
                },
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "name": "query_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 302,
                      "src": "3144:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3144:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3191:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4554482d5553442f7469636b6572292e7072696365",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3210:66:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e55baa631f447cda815800145fbb5f2039aa2d2170415b6fb5c678671318580b",
                          "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price\""
                        },
                        "value": "json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e55baa631f447cda815800145fbb5f2039aa2d2170415b6fb5c678671318580b",
                          "typeString": "literal_string \"json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price\""
                        }
                      ],
                      "id": 275,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4247,
                        4290,
                        4337,
                        4382,
                        4426,
                        4472,
                        4522,
                        4570,
                        4618,
                        4668,
                        4722,
                        4774,
                        4811,
                        4851,
                        4894,
                        4934,
                        4979,
                        5027,
                        5078,
                        5126,
                        5179,
                        5235,
                        5294,
                        5350,
                        5411,
                        5475,
                        5542,
                        5606,
                        5675,
                        5747,
                        5822,
                        5894,
                        5942,
                        5992,
                        6046,
                        6098,
                        6135,
                        6175,
                        6218,
                        6258,
                        6303,
                        6351,
                        6402,
                        6450,
                        6503,
                        6559,
                        6618,
                        6674,
                        6735,
                        6799,
                        6866,
                        6930,
                        6999,
                        7071,
                        7146,
                        7218
                      ],
                      "referencedDeclaration": 4247,
                      "src": "3163:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3163:123:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3144:142:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 280,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "3296:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                            "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                          }
                        },
                        "id": 282,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 281,
                          "name": "query_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "3304:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3296:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Queries_$27_storage",
                          "typeString": "struct IsinaBank.Queries storage ref"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "seller",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22,
                      "src": "3296:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 284,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "3323:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3296:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 286,
                  "nodeType": "ExpressionStatement",
                  "src": "3296:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "3342:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                            "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "query_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "3350:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3342:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Queries_$27_storage",
                          "typeString": "struct IsinaBank.Queries storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3342:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 291,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "3369:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3342:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "3342:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 294,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "3385:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Queries_$27_storage_$",
                            "typeString": "mapping(bytes32 => struct IsinaBank.Queries storage ref)"
                          }
                        },
                        "id": 296,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 295,
                          "name": "query_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "3393:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3385:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Queries_$27_storage",
                          "typeString": "struct IsinaBank.Queries storage ref"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "time",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3385:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "3410:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3410:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3385:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3385:40:0"
                }
              ]
            },
            "documentation": null,
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_ethusd_price",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 248,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "2917:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2917:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "2952:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2952:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2907:65:0"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3006:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3006:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3005:6:0"
            },
            "scope": 370,
            "src": "2877:555:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 368,
              "nodeType": "Block",
              "src": "3564:323:0",
              "statements": [
                {
                  "assignments": [
                    311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 311,
                      "name": "b",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "3574:14:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 310,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3574:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 313,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "3597:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3591:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": "bytes"
                    },
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3591:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3574:25:0"
                },
                {
                  "assignments": [
                    317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 317,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 368,
                      "src": "3609:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3609:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 318,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3609:9:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 319,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "3628:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3637:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3628:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:10:0"
                },
                {
                  "body": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "3679:202:0",
                    "statements": [
                      {
                        "assignments": [
                          335
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 335,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 366,
                            "src": "3693:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 334,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3693:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 343,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 338,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 311,
                                    "src": "3719:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 340,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 339,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 317,
                                    "src": "3721:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3719:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                ],
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3713:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": "uint8"
                              },
                              "id": 341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3713:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3705:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint256"
                          },
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3705:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3693:32:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 344,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 335,
                              "src": "3743:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3438",
                              "id": 345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3748:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_48_by_1",
                                "typeString": "int_const 48"
                              },
                              "value": "48"
                            },
                            "src": "3743:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 347,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 335,
                              "src": "3754:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3537",
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3759:2:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_57_by_1",
                                "typeString": "int_const 57"
                              },
                              "value": "57"
                            },
                            "src": "3754:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3743:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 364,
                          "nodeType": "Block",
                          "src": "3833:38:0",
                          "statements": [
                            {
                              "id": 363,
                              "nodeType": "Break",
                              "src": "3851:5:0"
                            }
                          ]
                        },
                        "id": 365,
                        "nodeType": "IfStatement",
                        "src": "3739:132:0",
                        "trueBody": {
                          "id": 362,
                          "nodeType": "Block",
                          "src": "3763:64:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 351,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "3781:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 352,
                                      "name": "result",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 308,
                                      "src": "3790:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 353,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3799:2:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "3790:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 357,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "id": 355,
                                          "name": "c",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 335,
                                          "src": "3805:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "3438",
                                          "id": 356,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3809:2:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_48_by_1",
                                            "typeString": "int_const 48"
                                          },
                                          "value": "48"
                                        },
                                        "src": "3805:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 358,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3804:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3790:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3781:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 361,
                              "nodeType": "ExpressionStatement",
                              "src": "3781:31:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 317,
                      "src": "3660:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 328,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "3664:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3664:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3660:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 367,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 323,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "3653:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3657:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3653:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 326,
                    "nodeType": "ExpressionStatement",
                    "src": "3653:5:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3674:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 331,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 317,
                        "src": "3674:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 333,
                    "nodeType": "ExpressionStatement",
                    "src": "3674:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3648:233:0"
                }
              ]
            },
            "documentation": null,
            "id": 369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "string_to_uint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 369,
                  "src": "3476:15:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3476:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3466:31:0"
            },
            "returnParameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 369,
                  "src": "3544:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3543:16:0"
            },
            "scope": 370,
            "src": "3438:449:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 371,
        "src": "534:3355:0"
      }
    ],
    "src": "0:3890:0"
  },
  "bytecode": "60806040819052600580546001600160a01b0319163317908190556001600160a01b0316906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36118f98061005b6000396000f3fe6080604052600436106100dd5760003560e01c8063715018a61161007f5780638f32d59b116100595780638f32d59b14610443578063b22683fa14610458578063f2fde38b1461048b578063fc0c546a146104be576100dd565b8063715018a6146103e857806385cde77f146103fd5780638da5cb5b14610412576100dd565b806338bbfa50116100bb57806338bbfa501461021257806342263aa2146103535780634a225898146103865780634ea63394146103d3576100dd565b806312ba5b75146100df57806321dfb6001461010657806327dc297e14610158575b005b3480156100eb57600080fd5b506100f46104d3565b60408051918252519081900360200190f35b34801561011257600080fd5b506101306004803603602081101561012957600080fd5b50356104d8565b604080516001600160a01b039094168452602084019290925282820152519081900360600190f35b34801561016457600080fd5b506100dd6004803603604081101561017b57600080fd5b8135919081019060408101602082013564010000000081111561019d57600080fd5b8201836020820111156101af57600080fd5b803590602001918460018302840111640100000000831117156101d157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610503945050505050565b34801561021e57600080fd5b506100dd6004803603606081101561023557600080fd5b8135919081019060408101602082013564010000000081111561025757600080fd5b82018360208201111561026957600080fd5b8035906020019184600183028401116401000000008311171561028b57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102de57600080fd5b8201836020820111156102f057600080fd5b8035906020019184600183028401116401000000008311171561031257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610626945050505050565b34801561035f57600080fd5b506100dd6004803603602081101561037657600080fd5b50356001600160a01b0316610657565b34801561039257600080fd5b506103bf600480360360408110156103a957600080fd5b506001600160a01b0381351690602001356106d5565b604080519115158252519081900360200190f35b3480156103df57600080fd5b506100dd610705565b3480156103f457600080fd5b506100dd610741565b34801561040957600080fd5b506100f46107e7565b34801561041e57600080fd5b506104276107f1565b604080516001600160a01b039092168252519081900360200190f35b34801561044f57600080fd5b506103bf610801565b34801561046457600080fd5b506100f46004803603602081101561047b57600080fd5b50356001600160a01b0316610812565b34801561049757600080fd5b506100dd600480360360208110156104ae57600080fd5b50356001600160a01b0316610824565b3480156104ca57600080fd5b5061042761088c565b600181565b6007602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b61050b61089b565b6001600160a01b0316336001600160a01b03161461052857600080fd5b600061053382610a84565b60008481526007602052604081206001810154600290910154929350909161055d91908490610af0565b9050600081118015610570575030318111155b156105bf576000848152600760205260408082205490516001600160a01b039091169183156108fc02918491818181858888f193505050501580156105b9573d6000803e3d6000fd5b50610620565b6000848152600760209081526040808320600181015490546001600160a01b031684526008909252909120546105fa9163ffffffff610b7816565b6000858152600760209081526040808320546001600160a01b0316835260089091529020555b50505050565b5050600080805260036020527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5550565b61065f610801565b6106b35760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6006546000906001600160a01b031633146106ef57600080fd5b6106f98383610bdc565b50600190505b92915050565b3360009081526008602052604090205461071e57600080fd5b33600081815260086020526040812080549190559061073d9082610bdc565b5050565b610749610801565b61079d5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b655af3107a3fff81565b6005546001600160a01b03165b90565b6005546001600160a01b0316331490565b60086020526000908152604090205481565b61082c610801565b6108805760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61088981610ca7565b50565b6006546001600160a01b031681565b6001546000906001600160a01b031615806108c857506001546108c6906001600160a01b0316610d4b565b155b156108d9576108d76000610d4f565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050506040513d602081101561095357600080fd5b50516000546001600160a01b03908116911614610a0657600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109ba57600080fd5b505af11580156109ce573d6000803e3d6000fd5b505050506040513d60208110156109e457600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b6000809054906101000a90046001600160a01b03166001600160a01b031663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5357600080fd5b505afa158015610a67573d6000803e3d6000fd5b505050506040513d6020811015610a7d57600080fd5b5051905090565b600081815b8151811015610ae9576000828281518110610aa057fe5b602001015160f81c60f81b60f81c60ff16905060308110158015610ac5575060398111155b15610ada576030810384600a02019350610ae0565b50610ae9565b50600101610a89565b5050919050565b600080610b156064610b0987600363ffffffff610d5916565b9063ffffffff610db516565b905060006001841015610b4a57610b4382610b3781600263ffffffff610db516565b9063ffffffff610b7816565b9050610b5e565b610b5b82600263ffffffff610d5916565b90505b610b6e818663ffffffff610db516565b9695505050505050565b600082820183811015610bd55760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6000610c05604051806040016040528060038152602001600160ea1b6215549302815250610e22565b303111610c1157600080fd5b655af3107a3fff4210610c2357600080fd5b6000610c65604051806040016040528060038152602001600160ea1b621554930281525060405180606001604052806040815260200161188e60409139611071565b600090815260076020526040902080546001600160a01b0319166001600160a01b03959095169490941784555060018301919091554260029092019190915590565b6001600160a01b038116610cef57604051600160e51b62461bcd0281526004018080602001828103825260268152602001806118476026913960400191505060405180910390fd5b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b3b90565b60006106ff611435565b600082610d68575060006106ff565b82820282848281610d7557fe5b0414610bd557604051600160e51b62461bcd02815260040180806020018281038252602181526020018061186d6021913960400191505060405180910390fd5b6000808211610e0e5760408051600160e51b62461bcd02815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610e1957fe5b04949350505050565b6001546000906001600160a01b03161580610e4f5750600154610e4d906001600160a01b0316610d4b565b155b15610e6057610e5e6000610d4f565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610eb057600080fd5b505af1158015610ec4573d6000803e3d6000fd5b505050506040513d6020811015610eda57600080fd5b50516000546001600160a01b03908116911614610f8d57600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f4157600080fd5b505af1158015610f55573d6000803e3d6000fd5b505050506040513d6020811015610f6b57600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b60008054604051600160e01b63524f38890281526020600482018181528651602484015286516001600160a01b039094169463524f3889948894929384936044019290860191908190849084905b83811015610ff3578181015183820152602001610fdb565b50505050905090810190601f1680156110205780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561103f57600080fd5b505af1158015611053573d6000803e3d6000fd5b505050506040513d602081101561106957600080fd5b505192915050565b6001546000906001600160a01b0316158061109e575060015461109c906001600160a01b0316610d4b565b155b156110af576110ad6000610d4f565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110ff57600080fd5b505af1158015611113573d6000803e3d6000fd5b505050506040513d602081101561112957600080fd5b50516000546001600160a01b039081169116146111dc57600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561119057600080fd5b505af11580156111a4573d6000803e3d6000fd5b505050506040513d60208110156111ba57600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b60008054604051600160e01b63524f38890281526020600482018181528751602484015287516001600160a01b039094169363524f38899389938392604490920191908501908083838b5b8381101561123f578181015183820152602001611227565b50505050905090810190601f16801561126c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561128b57600080fd5b505af115801561129f573d6000803e3d6000fd5b505050506040513d60208110156112b557600080fd5b50519050670de0b6b3a764000062030d403a02018111156112da5750600090506106ff565b60008054604051600160e01b63adf59f99028152600481018381526060602483019081528851606484015288516001600160a01b039094169463adf59f9994879491938b938b9391929091604481019160849091019060208701908083838b5b8381101561135257818101518382015260200161133a565b50505050905090810190601f16801561137f5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156113b257818101518382015260200161139a565b50505050905090810190601f1680156113df5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561140057600080fd5b505af1158015611414573d6000803e3d6000fd5b50505050506040513d602081101561142b57600080fd5b5051949350505050565b600080611455731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610d4b565b11156114b757600180546001600160a01b031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b8152600160aa1b6a195d1a17db585a5b9b995d0260208201526114af906117a0565b5060016107fe565b60006114d673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610d4b565b111561153f57600180546001600160a01b03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e33000000000000000000000000000000000000000060208201526114af906117a0565b600061155e73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610d4b565b11156115b657600180546001600160a01b03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e1790556040805180820190915260098152600160b91b6832ba342fb5b7bb30b70260208201526114af906117a0565b60006115d573146500cfd35b22e4a392fe0adc06de1a1368ed48610d4b565b111561162f57600180546001600160a01b03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b8152600160a81b6a6574685f72696e6b6562790260208201526114af906117a0565b600061164e73a2998efd205fb9d4b4963afb70778d6354ad3a41610d4b565b11156116a757600180546001600160a01b03191673a2998efd205fb9d4b4963afb70778d6354ad3a4117905560408051808201909152600a8152600160b01b696574685f676f65726c690260208201526114af906117a0565b60006116c6736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610d4b565b11156116f85750600180546001600160a01b031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751781556107fe565b60006117177320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610d4b565b11156117495750600180546001600160a01b0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1781556107fe565b60006117687351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610d4b565b111561179a5750600180546001600160a01b0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1781556107fe565b50600090565b805161073d906002906020840190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106117ef57805160ff191683800117855561181c565b8280016001018555821561181c579182015b8281111561181c578251825591602001919060010190611801565b5061182892915061182c565b5090565b6107fe91905b80821115611828576000815560010161183256fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4554482d5553442f7469636b6572292e7072696365a165627a7a72305820f3013ba405662eac8abe7ba31aa0205d95c0c18ee94a1653857773a5070be9680029",
  "bytecodeSha1": "1b9c03ce51d179afde58b5e481b3c5973670be8a",
  "compiler": {
    "minify_source": false,
    "optimize": true,
    "runs": 200,
    "version": "Version: 0.5.7+commit.6da8b019.Darwin.appleclang"
  },
  "contractName": "IsinaBank",
  "coverageMap": {
    "branches": {
      "contracts/IsinaBank.sol": {
        "IsinaBank.__callback": {
          "69": [
            1756,
            1790,
            true
          ],
          "70": [
            2009,
            2023,
            false
          ],
          "71": [
            2027,
            2062,
            false
          ]
        },
        "IsinaBank.get_eth_value": {
          "75": [
            2625,
            2652,
            false
          ]
        },
        "IsinaBank.get_ethusd_price": {
          "76": [
            3034,
            3082,
            true
          ],
          "77": [
            3101,
            3133,
            true
          ]
        },
        "IsinaBank.send_ether": {
          "72": [
            1531,
            1559,
            true
          ]
        },
        "IsinaBank.string_to_uint": {
          "73": [
            3743,
            3750,
            false
          ],
          "74": [
            3754,
            3761,
            false
          ]
        }
      },
      "contracts/open-zeppelin/contracts/math/SafeMath.sol": {
        "SafeMath.add": {
          "79": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "82": [
            2757,
            2762,
            true
          ]
        },
        "SafeMath.mul": {
          "80": [
            1991,
            1997,
            false
          ],
          "81": [
            2077,
            2087,
            true
          ]
        }
      },
      "contracts/open-zeppelin/contracts/ownership/Ownable.sol": {
        "Ownable._transferOwnership": {
          "78": [
            2167,
            2189,
            true
          ]
        }
      },
      "contracts/provable/oraclize_api.sol": {
        "usingOraclize.oraclize_query": {
          "83": [
            16138,
            16176,
            false
          ]
        },
        "usingOraclize.oraclize_setNetwork": {
          "84": [
            13090,
            13149,
            false
          ],
          "85": [
            13347,
            13406,
            false
          ],
          "86": [
            13613,
            13672,
            false
          ],
          "87": [
            13874,
            13933,
            false
          ],
          "88": [
            14139,
            14198,
            false
          ],
          "89": [
            14402,
            14461,
            false
          ],
          "90": [
            14615,
            14674,
            false
          ],
          "91": [
            14827,
            14886,
            false
          ]
        }
      }
    },
    "statements": {
      "contracts/IsinaBank.sol": {
        "IsinaBank.__callback": {
          "0": [
            1748,
            1791
          ],
          "1": [
            1801,
            1847
          ],
          "2": [
            1857,
            1995
          ],
          "3": [
            2078,
            2120
          ],
          "4": [
            2151,
            2311
          ]
        },
        "IsinaBank.get_eth_value": {
          "25": [
            2528,
            2579
          ],
          "26": [
            2589,
            2611
          ],
          "27": [
            2668,
            2726
          ],
          "28": [
            2757,
            2795
          ],
          "29": [
            2815,
            2864
          ]
        },
        "IsinaBank.get_ethusd_price": {
          "33": [
            3026,
            3083
          ],
          "34": [
            3093,
            3134
          ],
          "35": [
            3144,
            3286
          ],
          "36": [
            3296,
            3332
          ],
          "37": [
            3342,
            3375
          ],
          "38": [
            3385,
            3425
          ]
        },
        "IsinaBank.sell_tokens": {
          "10": [
            1067,
            1107
          ],
          "11": [
            1117,
            1161
          ],
          "12": [
            1171,
            1202
          ],
          "13": [
            1212,
            1248
          ]
        },
        "IsinaBank.send_ether": {
          "7": [
            1523,
            1560
          ],
          "8": [
            1570,
            1605
          ],
          "9": [
            1622,
            1626
          ]
        },
        "IsinaBank.set_token_address": {
          "6": [
            1340,
            1373
          ]
        },
        "IsinaBank.string_to_uint": {
          "20": [
            3574,
            3599
          ],
          "21": [
            3693,
            3725
          ],
          "22": [
            3781,
            3812
          ],
          "23": [
            3851,
            3856
          ],
          "24": [
            3674,
            3677
          ]
        }
      },
      "contracts/open-zeppelin/contracts/math/SafeMath.sol": {
        "SafeMath.add": {
          "30": [
            911,
            928
          ],
          "31": [
            938,
            984
          ],
          "32": [
            1002,
            1003
          ]
        },
        "SafeMath.div": {
          "47": [
            2749,
            2793
          ],
          "48": [
            2803,
            2820
          ]
        },
        "SafeMath.mul": {
          "44": [
            2020,
            2021
          ],
          "45": [
            2042,
            2059
          ],
          "46": [
            2069,
            2125
          ]
        }
      },
      "contracts/open-zeppelin/contracts/ownership/Ownable.sol": {
        "Ownable._transferOwnership": {
          "39": [
            2159,
            2232
          ],
          "40": [
            2242,
            2285
          ],
          "41": [
            2295,
            2312
          ]
        },
        "Ownable.isOwner": {
          "17": [
            1229,
            1249
          ]
        },
        "Ownable.owner": {
          "16": [
            879,
            885
          ]
        },
        "Ownable.renounceOwnership": {
          "14": [
            1656,
            1701
          ],
          "15": [
            1711,
            1730
          ]
        },
        "Ownable.transferOwnership": {
          "18": [
            1958,
            1986
          ]
        }
      },
      "contracts/provable/oraclize_api.sol": {
        "usingOraclize.__callback": {
          "5": [
            15546,
            15593
          ]
        },
        "usingOraclize.getCodeSize": {
          "42": [
            37371,
            37437
          ]
        },
        "usingOraclize.oraclize_cbAddress": {
          "19": [
            37257,
            37277
          ]
        },
        "usingOraclize.oraclize_getPrice": {
          "49": [
            15725,
            15755
          ]
        },
        "usingOraclize.oraclize_query": {
          "50": [
            16081,
            16124
          ],
          "51": [
            16199,
            16200
          ],
          "52": [
            16254,
            16303
          ]
        },
        "usingOraclize.oraclize_setNetwork": {
          "43": [
            12707,
            12728
          ],
          "53": [
            13175,
            13246
          ],
          "54": [
            13260,
            13298
          ],
          "55": [
            13319,
            13323
          ],
          "56": [
            13440,
            13511
          ],
          "57": [
            13525,
            13564
          ],
          "58": [
            13704,
            13775
          ],
          "59": [
            13789,
            13825
          ],
          "60": [
            13967,
            14038
          ],
          "61": [
            14052,
            14090
          ],
          "62": [
            14231,
            14302
          ],
          "63": [
            14316,
            14353
          ],
          "64": [
            14495,
            14566
          ],
          "65": [
            14707,
            14778
          ],
          "66": [
            14921,
            14992
          ],
          "67": [
            15044,
            15049
          ]
        },
        "usingOraclize.oraclize_setNetworkName": {
          "68": [
            12822,
            12859
          ]
        }
      }
    }
  },
  "dependencies": [
    "Buffer",
    "CBOR",
    "Ownable",
    "SafeMath",
    "usingOraclize"
  ],
  "deployedBytecode": "6080604052600436106100dd5760003560e01c8063715018a61161007f5780638f32d59b116100595780638f32d59b14610443578063b22683fa14610458578063f2fde38b1461048b578063fc0c546a146104be576100dd565b8063715018a6146103e857806385cde77f146103fd5780638da5cb5b14610412576100dd565b806338bbfa50116100bb57806338bbfa501461021257806342263aa2146103535780634a225898146103865780634ea63394146103d3576100dd565b806312ba5b75146100df57806321dfb6001461010657806327dc297e14610158575b005b3480156100eb57600080fd5b506100f46104d3565b60408051918252519081900360200190f35b34801561011257600080fd5b506101306004803603602081101561012957600080fd5b50356104d8565b604080516001600160a01b039094168452602084019290925282820152519081900360600190f35b34801561016457600080fd5b506100dd6004803603604081101561017b57600080fd5b8135919081019060408101602082013564010000000081111561019d57600080fd5b8201836020820111156101af57600080fd5b803590602001918460018302840111640100000000831117156101d157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610503945050505050565b34801561021e57600080fd5b506100dd6004803603606081101561023557600080fd5b8135919081019060408101602082013564010000000081111561025757600080fd5b82018360208201111561026957600080fd5b8035906020019184600183028401116401000000008311171561028b57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102de57600080fd5b8201836020820111156102f057600080fd5b8035906020019184600183028401116401000000008311171561031257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610626945050505050565b34801561035f57600080fd5b506100dd6004803603602081101561037657600080fd5b50356001600160a01b0316610657565b34801561039257600080fd5b506103bf600480360360408110156103a957600080fd5b506001600160a01b0381351690602001356106d5565b604080519115158252519081900360200190f35b3480156103df57600080fd5b506100dd610705565b3480156103f457600080fd5b506100dd610741565b34801561040957600080fd5b506100f46107e7565b34801561041e57600080fd5b506104276107f1565b604080516001600160a01b039092168252519081900360200190f35b34801561044f57600080fd5b506103bf610801565b34801561046457600080fd5b506100f46004803603602081101561047b57600080fd5b50356001600160a01b0316610812565b34801561049757600080fd5b506100dd600480360360208110156104ae57600080fd5b50356001600160a01b0316610824565b3480156104ca57600080fd5b5061042761088c565b600181565b6007602052600090815260409020805460018201546002909201546001600160a01b03909116919083565b61050b61089b565b6001600160a01b0316336001600160a01b03161461052857600080fd5b600061053382610a84565b60008481526007602052604081206001810154600290910154929350909161055d91908490610af0565b9050600081118015610570575030318111155b156105bf576000848152600760205260408082205490516001600160a01b039091169183156108fc02918491818181858888f193505050501580156105b9573d6000803e3d6000fd5b50610620565b6000848152600760209081526040808320600181015490546001600160a01b031684526008909252909120546105fa9163ffffffff610b7816565b6000858152600760209081526040808320546001600160a01b0316835260089091529020555b50505050565b5050600080805260036020527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5550565b61065f610801565b6106b35760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6006546000906001600160a01b031633146106ef57600080fd5b6106f98383610bdc565b50600190505b92915050565b3360009081526008602052604090205461071e57600080fd5b33600081815260086020526040812080549190559061073d9082610bdc565b5050565b610749610801565b61079d5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b655af3107a3fff81565b6005546001600160a01b03165b90565b6005546001600160a01b0316331490565b60086020526000908152604090205481565b61082c610801565b6108805760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61088981610ca7565b50565b6006546001600160a01b031681565b6001546000906001600160a01b031615806108c857506001546108c6906001600160a01b0316610d4b565b155b156108d9576108d76000610d4f565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050506040513d602081101561095357600080fd5b50516000546001600160a01b03908116911614610a0657600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109ba57600080fd5b505af11580156109ce573d6000803e3d6000fd5b505050506040513d60208110156109e457600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b6000809054906101000a90046001600160a01b03166001600160a01b031663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a5357600080fd5b505afa158015610a67573d6000803e3d6000fd5b505050506040513d6020811015610a7d57600080fd5b5051905090565b600081815b8151811015610ae9576000828281518110610aa057fe5b602001015160f81c60f81b60f81c60ff16905060308110158015610ac5575060398111155b15610ada576030810384600a02019350610ae0565b50610ae9565b50600101610a89565b5050919050565b600080610b156064610b0987600363ffffffff610d5916565b9063ffffffff610db516565b905060006001841015610b4a57610b4382610b3781600263ffffffff610db516565b9063ffffffff610b7816565b9050610b5e565b610b5b82600263ffffffff610d5916565b90505b610b6e818663ffffffff610db516565b9695505050505050565b600082820183811015610bd55760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6000610c05604051806040016040528060038152602001600160ea1b6215549302815250610e22565b303111610c1157600080fd5b655af3107a3fff4210610c2357600080fd5b6000610c65604051806040016040528060038152602001600160ea1b621554930281525060405180606001604052806040815260200161188e60409139611071565b600090815260076020526040902080546001600160a01b0319166001600160a01b03959095169490941784555060018301919091554260029092019190915590565b6001600160a01b038116610cef57604051600160e51b62461bcd0281526004018080602001828103825260268152602001806118476026913960400191505060405180910390fd5b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b3b90565b60006106ff611435565b600082610d68575060006106ff565b82820282848281610d7557fe5b0414610bd557604051600160e51b62461bcd02815260040180806020018281038252602181526020018061186d6021913960400191505060405180910390fd5b6000808211610e0e5760408051600160e51b62461bcd02815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610e1957fe5b04949350505050565b6001546000906001600160a01b03161580610e4f5750600154610e4d906001600160a01b0316610d4b565b155b15610e6057610e5e6000610d4f565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610eb057600080fd5b505af1158015610ec4573d6000803e3d6000fd5b505050506040513d6020811015610eda57600080fd5b50516000546001600160a01b03908116911614610f8d57600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610f4157600080fd5b505af1158015610f55573d6000803e3d6000fd5b505050506040513d6020811015610f6b57600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b60008054604051600160e01b63524f38890281526020600482018181528651602484015286516001600160a01b039094169463524f3889948894929384936044019290860191908190849084905b83811015610ff3578181015183820152602001610fdb565b50505050905090810190601f1680156110205780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561103f57600080fd5b505af1158015611053573d6000803e3d6000fd5b505050506040513d602081101561106957600080fd5b505192915050565b6001546000906001600160a01b0316158061109e575060015461109c906001600160a01b0316610d4b565b155b156110af576110ad6000610d4f565b505b600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156110ff57600080fd5b505af1158015611113573d6000803e3d6000fd5b505050506040513d602081101561112957600080fd5b50516000546001600160a01b039081169116146111dc57600160009054906101000a90046001600160a01b03166001600160a01b03166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561119057600080fd5b505af11580156111a4573d6000803e3d6000fd5b505050506040513d60208110156111ba57600080fd5b5051600080546001600160a01b0319166001600160a01b039092169190911790555b60008054604051600160e01b63524f38890281526020600482018181528751602484015287516001600160a01b039094169363524f38899389938392604490920191908501908083838b5b8381101561123f578181015183820152602001611227565b50505050905090810190601f16801561126c5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561128b57600080fd5b505af115801561129f573d6000803e3d6000fd5b505050506040513d60208110156112b557600080fd5b50519050670de0b6b3a764000062030d403a02018111156112da5750600090506106ff565b60008054604051600160e01b63adf59f99028152600481018381526060602483019081528851606484015288516001600160a01b039094169463adf59f9994879491938b938b9391929091604481019160849091019060208701908083838b5b8381101561135257818101518382015260200161133a565b50505050905090810190601f16801561137f5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156113b257818101518382015260200161139a565b50505050905090810190601f1680156113df5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561140057600080fd5b505af1158015611414573d6000803e3d6000fd5b50505050506040513d602081101561142b57600080fd5b5051949350505050565b600080611455731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610d4b565b11156114b757600180546001600160a01b031916731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed17905560408051808201909152600b8152600160aa1b6a195d1a17db585a5b9b995d0260208201526114af906117a0565b5060016107fe565b60006114d673c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610d4b565b111561153f57600180546001600160a01b03191673c03a2615d5efaf5f49f60b7bb6583eaec212fdf117905560408051808201909152600c81527f6574685f726f707374656e33000000000000000000000000000000000000000060208201526114af906117a0565b600061155e73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610d4b565b11156115b657600180546001600160a01b03191673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e1790556040805180820190915260098152600160b91b6832ba342fb5b7bb30b70260208201526114af906117a0565b60006115d573146500cfd35b22e4a392fe0adc06de1a1368ed48610d4b565b111561162f57600180546001600160a01b03191673146500cfd35b22e4a392fe0adc06de1a1368ed4817905560408051808201909152600b8152600160a81b6a6574685f72696e6b6562790260208201526114af906117a0565b600061164e73a2998efd205fb9d4b4963afb70778d6354ad3a41610d4b565b11156116a757600180546001600160a01b03191673a2998efd205fb9d4b4963afb70778d6354ad3a4117905560408051808201909152600a8152600160b01b696574685f676f65726c690260208201526114af906117a0565b60006116c6736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610d4b565b11156116f85750600180546001600160a01b031916736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4751781556107fe565b60006117177320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610d4b565b11156117495750600180546001600160a01b0319167320e12a1f859b3feae5fb2a0a32c18f5a65555bbf1781556107fe565b60006117687351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610d4b565b111561179a5750600180546001600160a01b0319167351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa1781556107fe565b50600090565b805161073d906002906020840190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106117ef57805160ff191683800117855561181c565b8280016001018555821561181c579182015b8281111561181c578251825591602001919060010190611801565b5061182892915061182c565b5090565b6107fe91905b80821115611828576000815560010161183256fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776a736f6e2868747470733a2f2f6170692e70726f2e636f696e626173652e636f6d2f70726f64756374732f4554482d5553442f7469636b6572292e7072696365a165627a7a72305820f3013ba405662eac8abe7ba31aa0205d95c0c18ee94a1653857773a5070be9680029",
  "deployedSourceMap": "534:3355:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:48:0;;;:::i;:::-;;;;;;;;;;;;;;;;883:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;883:42:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;883:42:0;;:::i;:::-;;;;-1:-1:-1;;;;;883:42:0;;;;;;;;;;;;;;;;;;;;;;;;;1639:689;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1639:689:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1639:689:0;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1639:689:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1639:689:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1639:689:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1639:689:0;;-1:-1:-1;1639:689:0;;-1:-1:-1;;;;;1639:689:0:i;15422:178:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15422:178:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15422:178:7;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;15422:178:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15422:178:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15422:178:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;15422:178:7;;;;;;;;-1:-1:-1;15422:178:7;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;15422:178:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15422:178:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15422:178:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;15422:178:7;;-1:-1:-1;15422:178:7;;-1:-1:-1;;;;;15422:178:7:i;1261:119:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1261:119:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1261:119:0;-1:-1:-1;;;;;1261:119:0;;:::i;1386:247::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1386:247:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1386:247:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1025:230;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1025:230:0;;;:::i;1600:137:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1600:137:3;;;:::i;686:55:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;686:55:0;;;:::i;815:77:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;815:77:3;;;:::i;:::-;;;;-1:-1:-1;;;;;815:77:3;;;;;;;;;;;;;;1166:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1166:90:3;;;:::i;931:50:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;931:50:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;931:50:0;-1:-1:-1;;;;;931:50:0;;:::i;1886:107:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1886:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1886:107:3;-1:-1:-1;;;;;1886:107:3;;:::i;748:23:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;748:23:0;;;:::i;618:48::-;665:1;618:48;:::o;883:42::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;883:42:0;;;;;;:::o;1639:689::-;1770:20;:18;:20::i;:::-;-1:-1:-1;;;;;1756:34:0;:10;-1:-1:-1;;;;;1756:34:0;;1748:43;;;;;;1801:20;1824:23;1839:7;1824:14;:23::i;:::-;1857:18;1905:14;;;:7;:14;;;;;:21;;;;1966:19;;;;;1801:46;;-1:-1:-1;1857:18:0;;1878:117;;1905:21;1801:46;;1878:13;:117::i;:::-;1857:138;;2022:1;2009:10;:14;:53;;;;-1:-1:-1;2035:4:0;2027:21;:35;-1:-1:-1;2027:35:0;2009:53;2005:317;;;2078:14;;;;:7;:14;;;;;;:21;:42;;-1:-1:-1;;;;;2078:21:0;;;;:42;;;;;2109:10;;2078:42;:14;:42;2109:10;2078:21;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2078:42:0;2005:317;;;2272:14;;;;:7;:14;;;;;;;;:21;;;;2224;;-1:-1:-1;;;;;2224:21:0;2208:38;;:15;:38;;;;;;;:103;;;:42;:103;:::i;:::-;2151:38;2167:14;;;:7;:14;;;;;;;;:21;-1:-1:-1;;;;;2167:21:0;2151:38;;:15;:38;;;;;:160;2005:317;1639:689;;;;:::o;15422:178:7:-;-1:-1:-1;;15591:1:7;15546:34;;;:22;:34;;;:47;-1:-1:-1;15422:178:7:o;1261:119:0:-;1019:9:3;:7;:9::i;:::-;1011:54;;;;;-1:-1:-1;;;;;1011:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:5:0;:33;;-1:-1:-1;;;;;;1340:33:0;-1:-1:-1;;;;;1340:33:0;;;;;;;;;;1261:119::o;1386:247::-;1553:5;;1503:4;;-1:-1:-1;;;;;1553:5:0;1531:10;:28;1523:37;;;;;;1570:35;1587:9;1598:6;1570:16;:35::i;:::-;;1622:4;1615:11;;1386:247;;;;;:::o;1025:230::-;1091:10;1105:1;1075:27;;;:15;:27;;;;;;1067:40;;;;;;1150:10;1117:14;1134:27;;;:15;:27;;;;;;;1171:31;;;1134:27;1212:36;;1134:27;1212:16;:36::i;:::-;;1025:230;:::o;1600:137:3:-;1019:9;:7;:9::i;:::-;1011:54;;;;;-1:-1:-1;;;;;1011:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1682:6;;1661:40;;1698:1;;-1:-1:-1;;;;;1682:6:3;;1661:40;;1698:1;;1661:40;1711:6;:19;;-1:-1:-1;;;;;;1711:19:3;;;1600:137::o;686:55:0:-;727:14;686:55;:::o;815:77:3:-;879:6;;-1:-1:-1;;;;;879:6:3;815:77;;:::o;1166:90::-;1243:6;;-1:-1:-1;;;;;1243:6:3;1229:10;:20;;1166:90::o;931:50:0:-;;;;;;;;;;;;;:::o;1886:107:3:-;1019:9;:7;:9::i;:::-;1011:54;;;;;-1:-1:-1;;;;;1011:54:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1958:28;1977:8;1958:18;:28::i;:::-;1886:107;:::o;748:23:0:-;;;-1:-1:-1;;;;;748:23:0;;:::o;37154:130:7:-;11806:3;;37214:24;;-1:-1:-1;;;;;11806:3:7;11798:26;;11797:64;;-1:-1:-1;11850:3:7;;11830:25;;-1:-1:-1;;;;;11850:3:7;11830:11;:25::i;:::-;:30;11797:64;11793:130;;;11877:35;11454:1;11877:19;:35::i;:::-;;11793:130;11957:3;;;;;;;;;-1:-1:-1;;;;;11957:3:7;-1:-1:-1;;;;;11957:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11957:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11957:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11957:16:7;11944:8;;-1:-1:-1;;;;;11944:8:7;;;11936:37;;;11932:106;;12010:3;;;;;;;;;-1:-1:-1;;;;;12010:3:7;-1:-1:-1;;;;;12010:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12010:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12010:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12010:16:7;11989:8;:38;;-1:-1:-1;;;;;;11989:38:7;-1:-1:-1;;;;;11989:38:7;;;;;;;;;11932:106;37257:8;;;;;;;;;-1:-1:-1;;;;;37257:8:7;-1:-1:-1;;;;;37257:18:7;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37257:20:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37257:20:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;37257:20:7;;-1:-1:-1;37154:130:7;:::o;3438:449:0:-;3544:14;3597:1;3544:14;3648:233;3664:1;:8;3660:1;:12;3648:233;;;3693:9;3719:1;3721;3719:4;;;;;;;;;;;;;;;;3713:11;;3705:20;;3693:32;;3748:2;3743:1;:7;;:18;;;;;3759:2;3754:1;:7;;3743:18;3739:132;;;3809:2;3805:1;:6;3790;3799:2;3790:11;:22;3781:31;;3739:132;;;3851:5;;;3739:132;-1:-1:-1;3674:3:0;;3648:233;;;3438:449;;;;;:::o;2334:537::-;2490:22;;2553:26;2571:7;2553:13;:6;2564:1;2553:13;:10;:13;:::i;:::-;:17;:26;:17;:26;:::i;:::-;2528:51;;2589:22;665:1;2625:4;:27;2621:185;;;2685:41;2711:14;2685:21;2711:14;2704:1;2685:21;:18;:21;:::i;:::-;:25;:41;:25;:41;:::i;:::-;2668:58;;2621:185;;;2774:21;:14;2793:1;2774:21;:18;:21;:::i;:::-;2757:38;;2621:185;2832:32;:14;2851:12;2832:32;:18;:32;:::i;:::-;2815:49;2334:537;-1:-1:-1;;;;;;2334:537:0:o;834:176:2:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:2:o;2877:555:0:-;3006:4;3058:24;;;;;;;;;;;;;;-1:-1:-1;;;;;3058:24:0;;;:17;:24::i;:::-;3042:4;3034:21;:48;3026:57;;;;;;727:14;3101:15;:32;3093:41;;;;;;3144:16;3163:123;;;;;;;;;;;;;;-1:-1:-1;;;;;3163:123:0;;;;;;;;;;;;;;;;;;;;:14;:123::i;:::-;3296:17;;;;:7;:17;;;;;:36;;-1:-1:-1;;;;;;3296:36:0;-1:-1:-1;;;;;3296:36:0;;;;;;;;;;-1:-1:-1;;3342:24:0;;:33;;;;3410:15;3385:22;;;;:40;;;;3342:33;2877:555::o;2094:225:3:-;-1:-1:-1;;;;;2167:22:3;;2159:73;;;;-1:-1:-1;;;;;2159:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2268:6;;2247:38;;-1:-1:-1;;;;;2247:38:3;;;;2268:6;;2247:38;;2268:6;;2247:38;2295:6;:17;;-1:-1:-1;;;;;;2295:17:3;-1:-1:-1;;;;;2295:17:3;;;;;;;;;;2094:225::o;37290:147:7:-;37403:18;;37380:51::o;12530:205::-;12595:16;12707:21;:19;:21::i;1693:458:2:-;1751:7;1991:6;1987:45;;-1:-1:-1;2020:1:2;2013:8;;1987:45;2054:5;;;2058:1;2054;:5;:1;2077:5;;;;;:10;2069:56;;;;-1:-1:-1;;;;;2069:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:326;2664:7;2761:1;2757;:5;2749:44;;;;;-1:-1:-1;;;;;2749:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;;2606:326;-1:-1:-1;;;;2606:326:2:o;15606:156:7:-;11806:3;;15690:16;;-1:-1:-1;;;;;11806:3:7;11798:26;;11797:64;;-1:-1:-1;11850:3:7;;11830:25;;-1:-1:-1;;;;;11850:3:7;11830:11;:25::i;:::-;:30;11797:64;11793:130;;;11877:35;11454:1;11877:19;:35::i;:::-;;11793:130;11957:3;;;;;;;;;-1:-1:-1;;;;;11957:3:7;-1:-1:-1;;;;;11957:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11957:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11957:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11957:16:7;11944:8;;-1:-1:-1;;;;;11944:8:7;;;11936:37;;;11932:106;;12010:3;;;;;;;;;-1:-1:-1;;;;;12010:3:7;-1:-1:-1;;;;;12010:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12010:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12010:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12010:16:7;11989:8;:38;;-1:-1:-1;;;;;;11989:38:7;-1:-1:-1;;;;;11989:38:7;;;;;;;;;11932:106;15725:8;;;:30;;-1:-1:-1;;;;;15725:30:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15725:8:7;;;;:17;;15743:11;;15725:30;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15725:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15725:30:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15725:30:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15725:30:7;;15606:156;-1:-1:-1;;15606:156:7:o;15957:353::-;11806:3;;16058:11;;-1:-1:-1;;;;;11806:3:7;11798:26;;11797:64;;-1:-1:-1;11850:3:7;;11830:25;;-1:-1:-1;;;;;11850:3:7;11830:11;:25::i;:::-;:30;11797:64;11793:130;;;11877:35;11454:1;11877:19;:35::i;:::-;;11793:130;11957:3;;;;;;;;;-1:-1:-1;;;;;11957:3:7;-1:-1:-1;;;;;11957:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11957:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11957:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11957:16:7;11944:8;;-1:-1:-1;;;;;11944:8:7;;;11936:37;;;11932:106;;12010:3;;;;;;;;;-1:-1:-1;;;;;12010:3:7;-1:-1:-1;;;;;12010:14:7;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12010:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12010:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12010:16:7;11989:8;:38;;-1:-1:-1;;;;;;11989:38:7;-1:-1:-1;;;;;11989:38:7;;;;;;;;;11932:106;16081:10;16094:8;;:30;;-1:-1:-1;;;;;16094:30:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16094:8:7;;;;:17;;16112:11;;16094:30;;;;;;;;;;;;;;16081:10;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16094:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16094:30:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16094:30:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16094:30:7;;-1:-1:-1;16146:7:7;16170:6;16156:11;:20;16146:30;16138:38;;16134:104;;;-1:-1:-1;16199:1:7;;-1:-1:-1;16192:8:7;;16134:104;16254:8;;;:49;;-1:-1:-1;;;;;16254:49:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16254:8:7;;;;:14;;16275:5;;16254:8;;16285:11;;16298:4;;16254:49;;;;;;;;;;;;;;;;;;;;:8;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16254:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16254:49:7;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16254:49:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16254:49:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16254:49:7;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16254:49:7;;15957:353;-1:-1:-1;;;;15957:353:7:o;13009:2047::-;13058:16;13148:1;13090:55;13102:42;13090:11;:55::i;:::-;:59;13086:248;;;13175:3;:71;;-1:-1:-1;;;;;;13175:71:7;13203:42;13175:71;;;13260:38;;;;;;;;;;;;-1:-1:-1;;;;;13260:38:7;;;;;;:23;:38::i;:::-;-1:-1:-1;13319:4:7;13312:11;;13086:248;13405:1;13347:55;13359:42;13347:11;:55::i;:::-;:59;13343:257;;;13440:3;:71;;-1:-1:-1;;;;;;13440:71:7;13468:42;13440:71;;;13525:39;;;;;;;;;;;;;;;;;;;:23;:39::i;13343:257::-;13671:1;13613:55;13625:42;13613:11;:55::i;:::-;:59;13609:252;;;13704:3;:71;;-1:-1:-1;;;;;;13704:71:7;13732:42;13704:71;;;13789:36;;;;;;;;;;;;-1:-1:-1;;;;;13789:36:7;;;;;;:23;:36::i;13609:252::-;13932:1;13874:55;13886:42;13874:11;:55::i;:::-;:59;13870:256;;;13967:3;:71;;-1:-1:-1;;;;;;13967:71:7;13995:42;13967:71;;;14052:38;;;;;;;;;;;;-1:-1:-1;;;;;14052:38:7;;;;;;:23;:38::i;13870:256::-;14197:1;14139:55;14151:42;14139:11;:55::i;:::-;:59;14135:254;;;14231:3;:71;;-1:-1:-1;;;;;;14231:71:7;14259:42;14231:71;;;14316:37;;;;;;;;;;;;-1:-1:-1;;;;;14316:37:7;;;;;;:23;:37::i;14135:254::-;14460:1;14402:55;14414:42;14402:11;:55::i;:::-;:59;14398:204;;;-1:-1:-1;14495:3:7;:71;;-1:-1:-1;;;;;;14495:71:7;14523:42;14495:71;;;14580:11;;14398:204;14673:1;14615:55;14627:42;14615:11;:55::i;:::-;:59;14611:203;;;-1:-1:-1;14707:3:7;:71;;-1:-1:-1;;;;;;14707:71:7;14735:42;14707:71;;;14792:11;;14611:203;14885:1;14827:55;14839:42;14827:11;:55::i;:::-;:59;14823:205;;;-1:-1:-1;14921:3:7;:71;;-1:-1:-1;;;;;;14921:71:7;14949:42;14921:71;;;15006:11;;14823:205;-1:-1:-1;15044:5:7;13009:2047;:::o;12741:125::-;12822:37;;;;:21;;:37;;;;534:3355:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;534:3355:0;;;-1:-1:-1;534:3355:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "offset": [
    534,
    3889
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x8F32D59B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xB22683FA EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x4BE JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x85CDE77F EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x412 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x38BBFA50 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x38BBFA50 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x42263AA2 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x4A225898 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x4EA63394 EQ PUSH2 0x3D3 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x12BA5B75 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x21DFB600 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x27DC297E EQ PUSH2 0x158 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x503 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x626 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x657 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x705 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x741 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x7E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x427 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BF PUSH2 0x801 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x824 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x427 PUSH2 0x88C JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x50B PUSH2 0x89B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x533 DUP3 PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH2 0x55D SWAP2 SWAP1 DUP5 SWAP1 PUSH2 0xAF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x570 JUMPI POP ADDRESS BALANCE DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0x5BF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x8 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x5FA SWAP2 PUSH4 0xFFFFFFFF PUSH2 0xB78 AND JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SSTORE POP JUMP JUMPDEST PUSH2 0x65F PUSH2 0x801 JUMP JUMPDEST PUSH2 0x6B3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F9 DUP4 DUP4 PUSH2 0xBDC JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SSTORE SWAP1 PUSH2 0x73D SWAP1 DUP3 PUSH2 0xBDC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x749 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x79D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH6 0x5AF3107A3FFF DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x82C PUSH2 0x801 JUMP JUMPDEST PUSH2 0x880 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x889 DUP2 PUSH2 0xCA7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x8C8 JUMPI POP PUSH1 0x1 SLOAD PUSH2 0x8C6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD4B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8D7 PUSH1 0x0 PUSH2 0xD4F JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38CC4831 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA06 JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38CC4831 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC281D19E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAA0 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP1 POP PUSH1 0x30 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0xAC5 JUMPI POP PUSH1 0x39 DUP2 GT ISZERO JUMPDEST ISZERO PUSH2 0xADA JUMPI PUSH1 0x30 DUP2 SUB DUP5 PUSH1 0xA MUL ADD SWAP4 POP PUSH2 0xAE0 JUMP JUMPDEST POP PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xA89 JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB15 PUSH1 0x64 PUSH2 0xB09 DUP8 PUSH1 0x3 PUSH4 0xFFFFFFFF PUSH2 0xD59 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDB5 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP5 LT ISZERO PUSH2 0xB4A JUMPI PUSH2 0xB43 DUP3 PUSH2 0xB37 DUP2 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xDB5 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB78 AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB5E JUMP JUMPDEST PUSH2 0xB5B DUP3 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0xD59 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xB6E DUP2 DUP7 PUSH4 0xFFFFFFFF PUSH2 0xDB5 AND JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC05 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xEA SHL PUSH3 0x155493 MUL DUP2 MSTORE POP PUSH2 0xE22 JUMP JUMPDEST ADDRESS BALANCE GT PUSH2 0xC11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH6 0x5AF3107A3FFF TIMESTAMP LT PUSH2 0xC23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC65 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xEA SHL PUSH3 0x155493 MUL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188E PUSH1 0x40 SWAP2 CODECOPY PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE POP PUSH1 0x1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE TIMESTAMP PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCEF JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1847 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST EXTCODESIZE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FF PUSH2 0x1435 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD68 JUMPI POP PUSH1 0x0 PUSH2 0x6FF JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xD75 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x186D PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xE0E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xE19 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0xE4F JUMPI POP PUSH1 0x1 SLOAD PUSH2 0xE4D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD4B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE60 JUMPI PUSH2 0xE5E PUSH1 0x0 PUSH2 0xD4F JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38CC4831 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xF8D JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38CC4831 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF55 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0x524F3889 MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP5 PUSH4 0x524F3889 SWAP5 DUP9 SWAP5 SWAP3 SWAP4 DUP5 SWAP4 PUSH1 0x44 ADD SWAP3 SWAP1 DUP7 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFF3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1020 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x103F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1053 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x109E JUMPI POP PUSH1 0x1 SLOAD PUSH2 0x109C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD4B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AD PUSH1 0x0 PUSH2 0xD4F JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38CC4831 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1113 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x11DC JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38CC4831 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0x524F3889 MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP8 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 PUSH4 0x524F3889 SWAP4 DUP10 SWAP4 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x123F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1227 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x126C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x128B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x129F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH3 0x30D40 GASPRICE MUL ADD DUP2 GT ISZERO PUSH2 0x12DA JUMPI POP PUSH1 0x0 SWAP1 POP PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE0 SHL PUSH4 0xADF59F99 MUL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x24 DUP4 ADD SWAP1 DUP2 MSTORE DUP9 MLOAD PUSH1 0x64 DUP5 ADD MSTORE DUP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP5 PUSH4 0xADF59F99 SWAP5 DUP8 SWAP5 SWAP2 SWAP4 DUP12 SWAP4 DUP12 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x44 DUP2 ADD SWAP2 PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1352 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x133A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x137F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x139A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1414 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1455 PUSH20 0x1D3B2638A7CC9F2CB3D298A3DA7A90B67E5506ED PUSH2 0xD4B JUMP JUMPDEST GT ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x1D3B2638A7CC9F2CB3D298A3DA7A90B67E5506ED OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x1 PUSH1 0xAA SHL PUSH11 0x195D1A17DB585A5B9B995D MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14AF SWAP1 PUSH2 0x17A0 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D6 PUSH20 0xC03A2615D5EFAF5F49F60B7BB6583EAEC212FDF1 PUSH2 0xD4B JUMP JUMPDEST GT ISZERO PUSH2 0x153F JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xC03A2615D5EFAF5F49F60B7BB6583EAEC212FDF1 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH32 0x6574685F726F707374656E330000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14AF SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155E PUSH20 0xB7A07BCF2BA2F2703B24C0691B5278999C59AC7E PUSH2 0xD4B JUMP JUMPDEST GT ISZERO PUSH2 0x15B6 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xB7A07BCF2BA2F2703B24C0691B5278999C59AC7E OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x1 PUSH1 0xB9 SHL PUSH9 0x32BA342FB5B7BB30B7 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14AF SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D5 PUSH20 0x146500CFD35B22E4A392FE0ADC06DE1A1368ED48 PUSH2 0xD4B JUMP JUMPDEST GT ISZERO PUSH2 0x162F JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x146500CFD35B22E4A392FE0ADC06DE1A1368ED48 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL PUSH11 0x6574685F72696E6B656279 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14AF SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164E PUSH20 0xA2998EFD205FB9D4B4963AFB70778D6354AD3A41 PUSH2 0xD4B JUMP JUMPDEST GT ISZERO PUSH2 0x16A7 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xA2998EFD205FB9D4B4963AFB70778D6354AD3A41 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x1 PUSH1 0xB0 SHL PUSH10 0x6574685F676F65726C69 MUL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x14AF SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C6 PUSH20 0x6F485C8BF6FC43EA212E93BBF8CE046C7F1CB475 PUSH2 0xD4B JUMP JUMPDEST GT ISZERO PUSH2 0x16F8 JUMPI POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x6F485C8BF6FC43EA212E93BBF8CE046C7F1CB475 OR DUP2 SSTORE PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1717 PUSH20 0x20E12A1F859B3FEAE5FB2A0A32C18F5A65555BBF PUSH2 0xD4B JUMP JUMPDEST GT ISZERO PUSH2 0x1749 JUMPI POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x20E12A1F859B3FEAE5FB2A0A32C18F5A65555BBF OR DUP2 SSTORE PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1768 PUSH20 0x51EFAF4C8B3C9AFBD5AB9F4BBC82784AB6EF8FAA PUSH2 0xD4B JUMP JUMPDEST GT ISZERO PUSH2 0x179A JUMPI POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x51EFAF4C8B3C9AFBD5AB9F4BBC82784AB6EF8FAA OR DUP2 SSTORE PUSH2 0x7FE JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x73D SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x17EF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x181C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x181C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x181C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1801 JUMP JUMPDEST POP PUSH2 0x1828 SWAP3 SWAP2 POP PUSH2 0x182C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x7FE SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1828 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1832 JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F776A736F6E2868747470733A 0x2f 0x2f PUSH2 0x7069 0x2e PUSH17 0x726F2E636F696E626173652E636F6D2F70 PUSH19 0x6F64756374732F4554482D5553442F7469636B PUSH6 0x72292E707269 PUSH4 0x65A16562 PUSH27 0x7A72305820F3013BA405662EAC8ABE7BA31AA0205D95C0C18EE94A AND MSTORE8 DUP6 PUSH24 0x73A5070BE968002900000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x80"
    },
    "2": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "4": {
      "offset": [
        534,
        3889
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "5": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4"
    },
    "7": {
      "offset": [
        534,
        3889
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaBank.sol"
    },
    "8": {
      "offset": [
        534,
        3889
      ],
      "op": "LT",
      "path": "contracts/IsinaBank.sol"
    },
    "9": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDD"
    },
    "12": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "13": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "15": {
      "offset": [
        534,
        3889
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "16": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0xE0"
    },
    "18": {
      "offset": [
        534,
        3889
      ],
      "op": "SHR",
      "path": "contracts/IsinaBank.sol"
    },
    "19": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "20": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x715018A6"
    },
    "25": {
      "offset": [
        534,
        3889
      ],
      "op": "GT",
      "path": "contracts/IsinaBank.sol"
    },
    "26": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7F"
    },
    "29": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "30": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "31": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8F32D59B"
    },
    "36": {
      "offset": [
        534,
        3889
      ],
      "op": "GT",
      "path": "contracts/IsinaBank.sol"
    },
    "37": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x59"
    },
    "40": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "41": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "42": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8F32D59B"
    },
    "47": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "48": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x443"
    },
    "51": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "52": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "53": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xB22683FA"
    },
    "58": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "59": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x458"
    },
    "62": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "63": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "64": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xF2FDE38B"
    },
    "69": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "70": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x48B"
    },
    "73": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "74": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "75": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFC0C546A"
    },
    "80": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "81": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4BE"
    },
    "84": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "85": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDD"
    },
    "88": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "89": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "90": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "91": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x715018A6"
    },
    "96": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "97": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x3E8"
    },
    "100": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "101": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "102": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x85CDE77F"
    },
    "107": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "108": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x3FD"
    },
    "111": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "112": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "113": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8DA5CB5B"
    },
    "118": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "119": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x412"
    },
    "122": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "123": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDD"
    },
    "126": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "127": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "128": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "129": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x38BBFA50"
    },
    "134": {
      "offset": [
        534,
        3889
      ],
      "op": "GT",
      "path": "contracts/IsinaBank.sol"
    },
    "135": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xBB"
    },
    "138": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "139": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "140": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x38BBFA50"
    },
    "145": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "146": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x212"
    },
    "149": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "150": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "151": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x42263AA2"
    },
    "156": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "157": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x353"
    },
    "160": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "161": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "162": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4A225898"
    },
    "167": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "168": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x386"
    },
    "171": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "172": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "173": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4EA63394"
    },
    "178": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "179": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x3D3"
    },
    "182": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "183": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDD"
    },
    "186": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "187": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "188": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "189": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x12BA5B75"
    },
    "194": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "195": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDF"
    },
    "198": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "199": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "200": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x21DFB600"
    },
    "205": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "206": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x106"
    },
    "209": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "210": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "211": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0x27DC297E"
    },
    "216": {
      "offset": [
        534,
        3889
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "217": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x158"
    },
    "220": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "221": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "222": {
      "offset": [
        534,
        3889
      ],
      "op": "STOP",
      "path": "contracts/IsinaBank.sol"
    },
    "223": {
      "offset": [
        618,
        666
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "224": {
      "offset": [
        618,
        666
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "225": {
      "op": "DUP1"
    },
    "226": {
      "op": "ISZERO"
    },
    "227": {
      "op": "PUSH2",
      "value": "0xEB"
    },
    "230": {
      "op": "JUMPI"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "233": {
      "op": "DUP1"
    },
    "234": {
      "op": "REVERT"
    },
    "235": {
      "op": "JUMPDEST"
    },
    "236": {
      "offset": [
        618,
        666
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "237": {
      "offset": [
        618,
        666
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xF4"
    },
    "240": {
      "offset": [
        618,
        666
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4D3"
    },
    "243": {
      "jump": "i",
      "offset": [
        618,
        666
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "244": {
      "offset": [
        618,
        666
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "245": {
      "offset": [
        618,
        666
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "247": {
      "offset": [
        618,
        666
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "248": {
      "offset": [
        618,
        666
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "249": {
      "offset": [
        618,
        666
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "250": {
      "offset": [
        618,
        666
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "251": {
      "offset": [
        618,
        666
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "252": {
      "offset": [
        618,
        666
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "253": {
      "offset": [
        618,
        666
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "254": {
      "offset": [
        618,
        666
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "255": {
      "offset": [
        618,
        666
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "256": {
      "offset": [
        618,
        666
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "257": {
      "offset": [
        618,
        666
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "259": {
      "offset": [
        618,
        666
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "260": {
      "offset": [
        618,
        666
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "261": {
      "offset": [
        618,
        666
      ],
      "op": "RETURN",
      "path": "contracts/IsinaBank.sol"
    },
    "262": {
      "offset": [
        883,
        925
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "263": {
      "offset": [
        883,
        925
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "264": {
      "op": "DUP1"
    },
    "265": {
      "op": "ISZERO"
    },
    "266": {
      "op": "PUSH2",
      "value": "0x112"
    },
    "269": {
      "op": "JUMPI"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "272": {
      "op": "DUP1"
    },
    "273": {
      "op": "REVERT"
    },
    "274": {
      "op": "JUMPDEST"
    },
    "275": {
      "offset": [
        883,
        925
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "276": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x130"
    },
    "279": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4"
    },
    "281": {
      "offset": [
        883,
        925
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "282": {
      "offset": [
        883,
        925
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaBank.sol"
    },
    "283": {
      "offset": [
        883,
        925
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "286": {
      "op": "DUP2"
    },
    "287": {
      "op": "LT"
    },
    "288": {
      "op": "ISZERO"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x129"
    },
    "292": {
      "op": "JUMPI"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "295": {
      "op": "DUP1"
    },
    "296": {
      "op": "REVERT"
    },
    "297": {
      "op": "JUMPDEST"
    },
    "298": {
      "op": "POP"
    },
    "299": {
      "offset": [
        883,
        925
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "300": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4D8"
    },
    "303": {
      "jump": "i",
      "offset": [
        883,
        925
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "304": {
      "offset": [
        883,
        925
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "305": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "307": {
      "offset": [
        883,
        925
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "308": {
      "offset": [
        883,
        925
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "315": {
      "op": "SHL"
    },
    "316": {
      "op": "SUB"
    },
    "317": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "318": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaBank.sol"
    },
    "319": {
      "offset": [
        883,
        925
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "320": {
      "offset": [
        883,
        925
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "321": {
      "offset": [
        883,
        925
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "322": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "324": {
      "offset": [
        883,
        925
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "325": {
      "offset": [
        883,
        925
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "326": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "327": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "328": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "329": {
      "offset": [
        883,
        925
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "330": {
      "offset": [
        883,
        925
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "331": {
      "offset": [
        883,
        925
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "332": {
      "offset": [
        883,
        925
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "333": {
      "offset": [
        883,
        925
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "334": {
      "offset": [
        883,
        925
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "335": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "336": {
      "offset": [
        883,
        925
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "337": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "338": {
      "offset": [
        883,
        925
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "339": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x60"
    },
    "341": {
      "offset": [
        883,
        925
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "342": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "343": {
      "offset": [
        883,
        925
      ],
      "op": "RETURN",
      "path": "contracts/IsinaBank.sol"
    },
    "344": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "345": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "346": {
      "op": "DUP1"
    },
    "347": {
      "op": "ISZERO"
    },
    "348": {
      "op": "PUSH2",
      "value": "0x164"
    },
    "351": {
      "op": "JUMPI"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "354": {
      "op": "DUP1"
    },
    "355": {
      "op": "REVERT"
    },
    "356": {
      "op": "JUMPDEST"
    },
    "357": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "358": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDD"
    },
    "361": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4"
    },
    "363": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "364": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaBank.sol"
    },
    "365": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "368": {
      "op": "DUP2"
    },
    "369": {
      "op": "LT"
    },
    "370": {
      "op": "ISZERO"
    },
    "371": {
      "op": "PUSH2",
      "value": "0x17B"
    },
    "374": {
      "op": "JUMPI"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "377": {
      "op": "DUP1"
    },
    "378": {
      "op": "REVERT"
    },
    "379": {
      "op": "JUMPDEST"
    },
    "380": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "381": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "382": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "383": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "384": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "385": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "386": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "387": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "389": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "390": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "391": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "393": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "394": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "395": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "396": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "402": {
      "op": "DUP2"
    },
    "403": {
      "op": "GT"
    },
    "404": {
      "op": "ISZERO"
    },
    "405": {
      "op": "PUSH2",
      "value": "0x19D"
    },
    "408": {
      "op": "JUMPI"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "411": {
      "op": "DUP1"
    },
    "412": {
      "op": "REVERT"
    },
    "413": {
      "op": "JUMPDEST"
    },
    "414": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "415": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "416": {
      "op": "DUP4"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "419": {
      "op": "DUP3"
    },
    "420": {
      "op": "ADD"
    },
    "421": {
      "op": "GT"
    },
    "422": {
      "op": "ISZERO"
    },
    "423": {
      "op": "PUSH2",
      "value": "0x1AF"
    },
    "426": {
      "op": "JUMPI"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "429": {
      "op": "DUP1"
    },
    "430": {
      "op": "REVERT"
    },
    "431": {
      "op": "JUMPDEST"
    },
    "432": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "433": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "434": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "435": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "437": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "438": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "439": {
      "op": "DUP5"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "442": {
      "op": "DUP4"
    },
    "443": {
      "op": "MUL"
    },
    "444": {
      "op": "DUP5"
    },
    "445": {
      "op": "ADD"
    },
    "446": {
      "op": "GT"
    },
    "447": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "453": {
      "op": "DUP4"
    },
    "454": {
      "op": "GT"
    },
    "455": {
      "op": "OR"
    },
    "456": {
      "op": "ISZERO"
    },
    "457": {
      "op": "PUSH2",
      "value": "0x1D1"
    },
    "460": {
      "op": "JUMPI"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "463": {
      "op": "DUP1"
    },
    "464": {
      "op": "REVERT"
    },
    "465": {
      "op": "JUMPDEST"
    },
    "466": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "467": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "468": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "469": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "470": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1F"
    },
    "472": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "473": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "475": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "476": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "477": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DIV",
      "path": "contracts/IsinaBank.sol"
    },
    "478": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "MUL",
      "path": "contracts/IsinaBank.sol"
    },
    "479": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "481": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "482": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "484": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "485": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "486": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "487": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "488": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "490": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "491": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "492": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaBank.sol"
    },
    "493": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "494": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "495": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "496": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "497": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "498": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "499": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "501": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "502": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "503": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "504": {
      "op": "DUP1"
    },
    "505": {
      "op": "DUP3"
    },
    "506": {
      "op": "DUP5"
    },
    "507": {
      "op": "CALLDATACOPY"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "510": {
      "op": "SWAP3"
    },
    "511": {
      "op": "ADD"
    },
    "512": {
      "op": "SWAP2"
    },
    "513": {
      "op": "SWAP1"
    },
    "514": {
      "op": "SWAP2"
    },
    "515": {
      "op": "MSTORE"
    },
    "516": {
      "op": "POP"
    },
    "517": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "518": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP6",
      "path": "contracts/IsinaBank.sol"
    },
    "519": {
      "op": "POP"
    },
    "520": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x503"
    },
    "523": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaBank.sol"
    },
    "524": {
      "op": "POP"
    },
    "525": {
      "op": "POP"
    },
    "526": {
      "op": "POP"
    },
    "527": {
      "op": "POP"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "IsinaBank.__callback",
      "jump": "i",
      "offset": [
        1639,
        2328
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "530": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "531": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "CALLVALUE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "532": {
      "op": "DUP1"
    },
    "533": {
      "op": "ISZERO"
    },
    "534": {
      "op": "PUSH2",
      "value": "0x21E"
    },
    "537": {
      "op": "JUMPI"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "540": {
      "op": "DUP1"
    },
    "541": {
      "op": "REVERT"
    },
    "542": {
      "op": "JUMPDEST"
    },
    "543": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "544": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xDD"
    },
    "547": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "549": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "550": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "551": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "554": {
      "op": "DUP2"
    },
    "555": {
      "op": "LT"
    },
    "556": {
      "op": "ISZERO"
    },
    "557": {
      "op": "PUSH2",
      "value": "0x235"
    },
    "560": {
      "op": "JUMPI"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "563": {
      "op": "DUP1"
    },
    "564": {
      "op": "REVERT"
    },
    "565": {
      "op": "JUMPDEST"
    },
    "566": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "567": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "568": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "569": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "570": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "571": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "572": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "573": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "575": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "576": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "577": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "579": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "580": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "581": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "582": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "588": {
      "op": "DUP2"
    },
    "589": {
      "op": "GT"
    },
    "590": {
      "op": "ISZERO"
    },
    "591": {
      "op": "PUSH2",
      "value": "0x257"
    },
    "594": {
      "op": "JUMPI"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "597": {
      "op": "DUP1"
    },
    "598": {
      "op": "REVERT"
    },
    "599": {
      "op": "JUMPDEST"
    },
    "600": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "601": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "602": {
      "op": "DUP4"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "605": {
      "op": "DUP3"
    },
    "606": {
      "op": "ADD"
    },
    "607": {
      "op": "GT"
    },
    "608": {
      "op": "ISZERO"
    },
    "609": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "612": {
      "op": "JUMPI"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "615": {
      "op": "DUP1"
    },
    "616": {
      "op": "REVERT"
    },
    "617": {
      "op": "JUMPDEST"
    },
    "618": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "619": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "620": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "621": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "623": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "624": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "625": {
      "op": "DUP5"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "628": {
      "op": "DUP4"
    },
    "629": {
      "op": "MUL"
    },
    "630": {
      "op": "DUP5"
    },
    "631": {
      "op": "ADD"
    },
    "632": {
      "op": "GT"
    },
    "633": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "639": {
      "op": "DUP4"
    },
    "640": {
      "op": "GT"
    },
    "641": {
      "op": "OR"
    },
    "642": {
      "op": "ISZERO"
    },
    "643": {
      "op": "PUSH2",
      "value": "0x28B"
    },
    "646": {
      "op": "JUMPI"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "649": {
      "op": "DUP1"
    },
    "650": {
      "op": "REVERT"
    },
    "651": {
      "op": "JUMPDEST"
    },
    "652": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "653": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "654": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "655": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "656": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1F"
    },
    "658": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "659": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "661": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "662": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "663": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "664": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "MUL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "665": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "667": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "668": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "670": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "671": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "672": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "673": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "674": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "676": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "677": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "678": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "679": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "680": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "681": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "682": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "683": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "684": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "685": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "687": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "688": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "689": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "690": {
      "op": "DUP1"
    },
    "691": {
      "op": "DUP3"
    },
    "692": {
      "op": "DUP5"
    },
    "693": {
      "op": "CALLDATACOPY"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "696": {
      "op": "SWAP3"
    },
    "697": {
      "op": "ADD"
    },
    "698": {
      "op": "SWAP2"
    },
    "699": {
      "op": "SWAP1"
    },
    "700": {
      "op": "SWAP2"
    },
    "701": {
      "op": "MSTORE"
    },
    "702": {
      "op": "POP"
    },
    "703": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "704": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP6",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "705": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "706": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "707": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "709": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "710": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "711": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "712": {
      "op": "POP"
    },
    "713": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "714": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "715": {
      "op": "POP"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "723": {
      "op": "DUP2"
    },
    "724": {
      "op": "GT"
    },
    "725": {
      "op": "ISZERO"
    },
    "726": {
      "op": "PUSH2",
      "value": "0x2DE"
    },
    "729": {
      "op": "JUMPI"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "732": {
      "op": "DUP1"
    },
    "733": {
      "op": "REVERT"
    },
    "734": {
      "op": "JUMPDEST"
    },
    "735": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "736": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "737": {
      "op": "DUP4"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "740": {
      "op": "DUP3"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "op": "GT"
    },
    "743": {
      "op": "ISZERO"
    },
    "744": {
      "op": "PUSH2",
      "value": "0x2F0"
    },
    "747": {
      "op": "JUMPI"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "750": {
      "op": "DUP1"
    },
    "751": {
      "op": "REVERT"
    },
    "752": {
      "op": "JUMPDEST"
    },
    "753": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "754": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "755": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "756": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "758": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "759": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "760": {
      "op": "DUP5"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "DUP4"
    },
    "764": {
      "op": "MUL"
    },
    "765": {
      "op": "DUP5"
    },
    "766": {
      "op": "ADD"
    },
    "767": {
      "op": "GT"
    },
    "768": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "774": {
      "op": "DUP4"
    },
    "775": {
      "op": "GT"
    },
    "776": {
      "op": "OR"
    },
    "777": {
      "op": "ISZERO"
    },
    "778": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "781": {
      "op": "JUMPI"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "784": {
      "op": "DUP1"
    },
    "785": {
      "op": "REVERT"
    },
    "786": {
      "op": "JUMPDEST"
    },
    "787": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "788": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "789": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "790": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "791": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1F"
    },
    "793": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "794": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "796": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "797": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "798": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "799": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "MUL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "800": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "802": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "803": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "805": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "806": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "807": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "808": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "809": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "811": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "812": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "813": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "814": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "815": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "816": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "817": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "818": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "819": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "820": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "822": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "823": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "824": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "825": {
      "op": "DUP1"
    },
    "826": {
      "op": "DUP3"
    },
    "827": {
      "op": "DUP5"
    },
    "828": {
      "op": "CALLDATACOPY"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "831": {
      "op": "SWAP3"
    },
    "832": {
      "op": "ADD"
    },
    "833": {
      "op": "SWAP2"
    },
    "834": {
      "op": "SWAP1"
    },
    "835": {
      "op": "SWAP2"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "839": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP6",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "840": {
      "op": "POP"
    },
    "841": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x626"
    },
    "844": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "fn": "usingOraclize.__callback",
      "jump": "i",
      "offset": [
        15422,
        15600
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "851": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "852": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "853": {
      "op": "DUP1"
    },
    "854": {
      "op": "ISZERO"
    },
    "855": {
      "op": "PUSH2",
      "value": "0x35F"
    },
    "858": {
      "op": "JUMPI"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "861": {
      "op": "DUP1"
    },
    "862": {
      "op": "REVERT"
    },
    "863": {
      "op": "JUMPDEST"
    },
    "864": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "865": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDD"
    },
    "868": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4"
    },
    "870": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "871": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaBank.sol"
    },
    "872": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "875": {
      "op": "DUP2"
    },
    "876": {
      "op": "LT"
    },
    "877": {
      "op": "ISZERO"
    },
    "878": {
      "op": "PUSH2",
      "value": "0x376"
    },
    "881": {
      "op": "JUMPI"
    },
    "882": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "884": {
      "op": "DUP1"
    },
    "885": {
      "op": "REVERT"
    },
    "886": {
      "op": "JUMPDEST"
    },
    "887": {
      "op": "POP"
    },
    "888": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "898": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x657"
    },
    "901": {
      "fn": "IsinaBank.set_token_address",
      "jump": "i",
      "offset": [
        1261,
        1380
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "902": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "903": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "904": {
      "op": "DUP1"
    },
    "905": {
      "op": "ISZERO"
    },
    "906": {
      "op": "PUSH2",
      "value": "0x392"
    },
    "909": {
      "op": "JUMPI"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "912": {
      "op": "DUP1"
    },
    "913": {
      "op": "REVERT"
    },
    "914": {
      "op": "JUMPDEST"
    },
    "915": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "916": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x3BF"
    },
    "919": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4"
    },
    "921": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "922": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaBank.sol"
    },
    "923": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "926": {
      "op": "DUP2"
    },
    "927": {
      "op": "LT"
    },
    "928": {
      "op": "ISZERO"
    },
    "929": {
      "op": "PUSH2",
      "value": "0x3A9"
    },
    "932": {
      "op": "JUMPI"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "935": {
      "op": "DUP1"
    },
    "936": {
      "op": "REVERT"
    },
    "937": {
      "op": "JUMPDEST"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "op": "SUB"
    },
    "947": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "948": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "949": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "950": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "951": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "953": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "954": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "955": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x6D5"
    },
    "958": {
      "fn": "IsinaBank.send_ether",
      "jump": "i",
      "offset": [
        1386,
        1633
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "959": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "960": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "962": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "963": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "964": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "965": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "966": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "967": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "968": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "969": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "970": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "971": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "972": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "973": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "974": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "976": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "977": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "978": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "RETURN",
      "path": "contracts/IsinaBank.sol"
    },
    "979": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1025,
        1255
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "980": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1025,
        1255
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "981": {
      "op": "DUP1"
    },
    "982": {
      "op": "ISZERO"
    },
    "983": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "986": {
      "op": "JUMPI"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "989": {
      "op": "DUP1"
    },
    "990": {
      "op": "REVERT"
    },
    "991": {
      "op": "JUMPDEST"
    },
    "992": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1025,
        1255
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "993": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1025,
        1255
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDD"
    },
    "996": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1025,
        1255
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x705"
    },
    "999": {
      "fn": "IsinaBank.sell_tokens",
      "jump": "i",
      "offset": [
        1025,
        1255
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1000": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1001": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "CALLVALUE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1002": {
      "op": "DUP1"
    },
    "1003": {
      "op": "ISZERO"
    },
    "1004": {
      "op": "PUSH2",
      "value": "0x3F4"
    },
    "1007": {
      "op": "JUMPI"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1010": {
      "op": "DUP1"
    },
    "1011": {
      "op": "REVERT"
    },
    "1012": {
      "op": "JUMPDEST"
    },
    "1013": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1014": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0xDD"
    },
    "1017": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x741"
    },
    "1020": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1600,
        1737
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1021": {
      "offset": [
        686,
        741
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1022": {
      "offset": [
        686,
        741
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "1023": {
      "op": "DUP1"
    },
    "1024": {
      "op": "ISZERO"
    },
    "1025": {
      "op": "PUSH2",
      "value": "0x409"
    },
    "1028": {
      "op": "JUMPI"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1031": {
      "op": "DUP1"
    },
    "1032": {
      "op": "REVERT"
    },
    "1033": {
      "op": "JUMPDEST"
    },
    "1034": {
      "offset": [
        686,
        741
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1035": {
      "offset": [
        686,
        741
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xF4"
    },
    "1038": {
      "offset": [
        686,
        741
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7E7"
    },
    "1041": {
      "jump": "i",
      "offset": [
        686,
        741
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1042": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1043": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "CALLVALUE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1044": {
      "op": "DUP1"
    },
    "1045": {
      "op": "ISZERO"
    },
    "1046": {
      "op": "PUSH2",
      "value": "0x41E"
    },
    "1049": {
      "op": "JUMPI"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1052": {
      "op": "DUP1"
    },
    "1053": {
      "op": "REVERT"
    },
    "1054": {
      "op": "JUMPDEST"
    },
    "1055": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1056": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x427"
    },
    "1059": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x7F1"
    },
    "1062": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        815,
        892
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1063": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1064": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "1066": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1067": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1074": {
      "op": "SHL"
    },
    "1075": {
      "op": "SUB"
    },
    "1076": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1077": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1078": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1079": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1080": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1081": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1082": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1083": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1084": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1085": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1086": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "1088": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1089": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1090": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "RETURN",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1091": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1092": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "CALLVALUE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1093": {
      "op": "DUP1"
    },
    "1094": {
      "op": "ISZERO"
    },
    "1095": {
      "op": "PUSH2",
      "value": "0x44F"
    },
    "1098": {
      "op": "JUMPI"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1101": {
      "op": "DUP1"
    },
    "1102": {
      "op": "REVERT"
    },
    "1103": {
      "op": "JUMPDEST"
    },
    "1104": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1105": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x3BF"
    },
    "1108": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x801"
    },
    "1111": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1112": {
      "offset": [
        931,
        981
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1113": {
      "offset": [
        931,
        981
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "1114": {
      "op": "DUP1"
    },
    "1115": {
      "op": "ISZERO"
    },
    "1116": {
      "op": "PUSH2",
      "value": "0x464"
    },
    "1119": {
      "op": "JUMPI"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1122": {
      "op": "DUP1"
    },
    "1123": {
      "op": "REVERT"
    },
    "1124": {
      "op": "JUMPDEST"
    },
    "1125": {
      "offset": [
        931,
        981
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1126": {
      "offset": [
        931,
        981
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xF4"
    },
    "1129": {
      "offset": [
        931,
        981
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x4"
    },
    "1131": {
      "offset": [
        931,
        981
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1132": {
      "offset": [
        931,
        981
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaBank.sol"
    },
    "1133": {
      "offset": [
        931,
        981
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1136": {
      "op": "DUP2"
    },
    "1137": {
      "op": "LT"
    },
    "1138": {
      "op": "ISZERO"
    },
    "1139": {
      "op": "PUSH2",
      "value": "0x47B"
    },
    "1142": {
      "op": "JUMPI"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1145": {
      "op": "DUP1"
    },
    "1146": {
      "op": "REVERT"
    },
    "1147": {
      "op": "JUMPDEST"
    },
    "1148": {
      "op": "POP"
    },
    "1149": {
      "offset": [
        931,
        981
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1156": {
      "op": "SHL"
    },
    "1157": {
      "op": "SUB"
    },
    "1158": {
      "offset": [
        931,
        981
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1159": {
      "offset": [
        931,
        981
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x812"
    },
    "1162": {
      "jump": "i",
      "offset": [
        931,
        981
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1163": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1164": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "CALLVALUE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1165": {
      "op": "DUP1"
    },
    "1166": {
      "op": "ISZERO"
    },
    "1167": {
      "op": "PUSH2",
      "value": "0x497"
    },
    "1170": {
      "op": "JUMPI"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1173": {
      "op": "DUP1"
    },
    "1174": {
      "op": "REVERT"
    },
    "1175": {
      "op": "JUMPDEST"
    },
    "1176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1177": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0xDD"
    },
    "1180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "1182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1183": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1187": {
      "op": "DUP2"
    },
    "1188": {
      "op": "LT"
    },
    "1189": {
      "op": "ISZERO"
    },
    "1190": {
      "op": "PUSH2",
      "value": "0x4AE"
    },
    "1193": {
      "op": "JUMPI"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1196": {
      "op": "DUP1"
    },
    "1197": {
      "op": "REVERT"
    },
    "1198": {
      "op": "JUMPDEST"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1207": {
      "op": "SHL"
    },
    "1208": {
      "op": "SUB"
    },
    "1209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x824"
    },
    "1213": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1886,
        1993
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1214": {
      "offset": [
        748,
        771
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1215": {
      "offset": [
        748,
        771
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaBank.sol"
    },
    "1216": {
      "op": "DUP1"
    },
    "1217": {
      "op": "ISZERO"
    },
    "1218": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "1221": {
      "op": "JUMPI"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1224": {
      "op": "DUP1"
    },
    "1225": {
      "op": "REVERT"
    },
    "1226": {
      "op": "JUMPDEST"
    },
    "1227": {
      "offset": [
        748,
        771
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1228": {
      "offset": [
        748,
        771
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x427"
    },
    "1231": {
      "offset": [
        748,
        771
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x88C"
    },
    "1234": {
      "jump": "i",
      "offset": [
        748,
        771
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1235": {
      "offset": [
        618,
        666
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1236": {
      "offset": [
        665,
        666
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "1238": {
      "offset": [
        618,
        666
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1239": {
      "jump": "o",
      "offset": [
        618,
        666
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1240": {
      "offset": [
        883,
        925
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1241": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7"
    },
    "1243": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "1245": {
      "offset": [
        883,
        925
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1246": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1248": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1249": {
      "offset": [
        883,
        925
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1250": {
      "offset": [
        883,
        925
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1251": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "1253": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1254": {
      "offset": [
        883,
        925
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1255": {
      "offset": [
        883,
        925
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1256": {
      "offset": [
        883,
        925
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1257": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "1259": {
      "offset": [
        883,
        925
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1260": {
      "offset": [
        883,
        925
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "1261": {
      "offset": [
        883,
        925
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1262": {
      "offset": [
        883,
        925
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x2"
    },
    "1264": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1265": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1266": {
      "offset": [
        883,
        925
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "1267": {
      "offset": [
        883,
        925
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1274": {
      "op": "SHL"
    },
    "1275": {
      "op": "SUB"
    },
    "1276": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1277": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1278": {
      "offset": [
        883,
        925
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1279": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1280": {
      "offset": [
        883,
        925
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1281": {
      "offset": [
        883,
        925
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1282": {
      "jump": "o",
      "offset": [
        883,
        925
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1283": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1284": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1770,
        1790
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "statement": 0,
      "value": "0x50B"
    },
    "1287": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1770,
        1788
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x89B"
    },
    "1290": {
      "fn": "IsinaBank.__callback",
      "jump": "i",
      "offset": [
        1770,
        1790
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1291": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1770,
        1790
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1298": {
      "op": "SHL"
    },
    "1299": {
      "op": "SUB"
    },
    "1300": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1756,
        1790
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1301": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1756,
        1766
      ],
      "op": "CALLER",
      "path": "contracts/IsinaBank.sol"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1308": {
      "op": "SHL"
    },
    "1309": {
      "op": "SUB"
    },
    "1310": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1756,
        1790
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1311": {
      "branch": 69,
      "fn": "IsinaBank.__callback",
      "offset": [
        1756,
        1790
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "1312": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1748,
        1791
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x528"
    },
    "1315": {
      "branch": 69,
      "fn": "IsinaBank.__callback",
      "offset": [
        1748,
        1791
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "1316": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1748,
        1791
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1318": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1748,
        1791
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1319": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1748,
        1791
      ],
      "op": "REVERT",
      "path": "contracts/IsinaBank.sol"
    },
    "1320": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1748,
        1791
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1321": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1801,
        1821
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 1,
      "value": "0x0"
    },
    "1323": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1824,
        1847
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x533"
    },
    "1326": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1839,
        1846
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1327": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1824,
        1838
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xA84"
    },
    "1330": {
      "fn": "IsinaBank.__callback",
      "jump": "i",
      "offset": [
        1824,
        1847
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1331": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1824,
        1847
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1332": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1857,
        1875
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 2,
      "value": "0x0"
    },
    "1334": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1919
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "1335": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1919
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1336": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1919
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1337": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1912
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7"
    },
    "1339": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1919
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "1341": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1919
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1342": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1919
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "1344": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1919
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1345": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1919
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1346": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1926
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "1348": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1926
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1349": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1926
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "1350": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1926
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1351": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1966,
        1985
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x2"
    },
    "1353": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1966,
        1985
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1354": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1966,
        1985
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1355": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1966,
        1985
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "1356": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1966,
        1985
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1357": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1801,
        1847
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1358": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1801,
        1847
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1359": {
      "op": "POP"
    },
    "1360": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1857,
        1875
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1361": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1857,
        1875
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1362": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1878,
        1995
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x55D"
    },
    "1365": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1878,
        1995
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1366": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1905,
        1926
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1367": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1801,
        1847
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "1368": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1801,
        1847
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1369": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1878,
        1891
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xAF0"
    },
    "1372": {
      "fn": "IsinaBank.__callback",
      "jump": "i",
      "offset": [
        1878,
        1995
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1373": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1878,
        1995
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1374": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1857,
        1995
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1375": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1857,
        1995
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1376": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2022,
        2023
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1378": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2009,
        2019
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1379": {
      "branch": 70,
      "fn": "IsinaBank.__callback",
      "offset": [
        2009,
        2023
      ],
      "op": "GT",
      "path": "contracts/IsinaBank.sol"
    },
    "1380": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2009,
        2062
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1381": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2009,
        2062
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "1382": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2009,
        2062
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x570"
    },
    "1385": {
      "branch": 70,
      "fn": "IsinaBank.__callback",
      "offset": [
        2009,
        2062
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2035,
        2039
      ],
      "op": "ADDRESS",
      "path": "contracts/IsinaBank.sol"
    },
    "1388": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2027,
        2048
      ],
      "op": "BALANCE",
      "path": "contracts/IsinaBank.sol"
    },
    "1389": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2027,
        2062
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1390": {
      "op": "GT"
    },
    "1391": {
      "branch": 71,
      "fn": "IsinaBank.__callback",
      "offset": [
        2027,
        2062
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "1392": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2009,
        2062
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1393": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2005,
        2322
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "1394": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2005,
        2322
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x5BF"
    },
    "1397": {
      "branch": 71,
      "fn": "IsinaBank.__callback",
      "offset": [
        2005,
        2322
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "1398": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 3,
      "value": "0x0"
    },
    "1400": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "1401": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1402": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1403": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2085
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7"
    },
    "1405": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "1407": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1408": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "1410": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1411": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1412": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1413": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2099
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1414": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1415": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1422": {
      "op": "SHL"
    },
    "1423": {
      "op": "SUB"
    },
    "1424": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2099
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1425": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2099
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1426": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2099
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1427": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2099
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1428": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1429": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "1430": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8FC"
    },
    "1433": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "MUL",
      "path": "contracts/IsinaBank.sol"
    },
    "1434": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1435": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2109,
        2119
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "1436": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2109,
        2119
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1437": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1438": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2092
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1439": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1440": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2109,
        2119
      ],
      "op": "DUP6",
      "path": "contracts/IsinaBank.sol"
    },
    "1441": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2099
      ],
      "op": "DUP9",
      "path": "contracts/IsinaBank.sol"
    },
    "1442": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "DUP9",
      "path": "contracts/IsinaBank.sol"
    },
    "1443": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "CALL",
      "path": "contracts/IsinaBank.sol"
    },
    "1444": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1445": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1446": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1447": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1448": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1449": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "1450": {
      "op": "DUP1"
    },
    "1451": {
      "op": "ISZERO"
    },
    "1452": {
      "op": "PUSH2",
      "value": "0x5B9"
    },
    "1455": {
      "op": "JUMPI"
    },
    "1456": {
      "op": "RETURNDATASIZE"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1459": {
      "op": "DUP1"
    },
    "1460": {
      "op": "RETURNDATACOPY"
    },
    "1461": {
      "op": "RETURNDATASIZE"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1464": {
      "op": "REVERT"
    },
    "1465": {
      "op": "JUMPDEST"
    },
    "1466": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2078,
        2120
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1467": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2005,
        2322
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x620"
    },
    "1470": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2005,
        2322
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1471": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2005,
        2322
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1472": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 4,
      "value": "0x0"
    },
    "1474": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "1475": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1476": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1477": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2279
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7"
    },
    "1479": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "1481": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1482": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1483": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1484": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "1486": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1487": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1488": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2286
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1489": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2293
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "1491": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2293
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1492": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2293
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "1493": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2272,
        2293
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1494": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2224,
        2245
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1495": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2224,
        2245
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1502": {
      "op": "SHL"
    },
    "1503": {
      "op": "SUB"
    },
    "1504": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2224,
        2245
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1505": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "1506": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1507": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2223
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8"
    },
    "1509": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1510": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1511": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1512": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1513": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1514": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1515": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2246
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1516": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2311
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x5FA"
    },
    "1519": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2311
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1520": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2311
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFFFFFFFF"
    },
    "1525": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2250
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xB78"
    },
    "1528": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2311
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1529": {
      "fn": "IsinaBank.__callback",
      "jump": "i",
      "offset": [
        2208,
        2311
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1530": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2208,
        2311
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1531": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2189
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1533": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "DUP6",
      "path": "contracts/IsinaBank.sol"
    },
    "1534": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1535": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1536": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2174
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7"
    },
    "1538": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "1540": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1541": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1542": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1543": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "1545": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1546": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1547": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2181
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1548": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2188
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2167,
        2188
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1558": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2189
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1559": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2189
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1560": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2166
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8"
    },
    "1562": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2189
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1563": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2189
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1564": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2189
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1565": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2189
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1566": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2189
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1567": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2151,
        2311
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1568": {
      "fn": "IsinaBank.__callback",
      "offset": [
        2005,
        2322
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1569": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1570": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1571": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1572": {
      "fn": "IsinaBank.__callback",
      "offset": [
        1639,
        2328
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1573": {
      "fn": "IsinaBank.__callback",
      "jump": "o",
      "offset": [
        1639,
        2328
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1574": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15422,
        15600
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "op": "POP"
    },
    "1577": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15591,
        15592
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 5,
      "value": "0x0"
    },
    "1579": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15546,
        15580
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "1580": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15546,
        15580
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "1581": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15546,
        15580
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "1582": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15546,
        15568
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x3"
    },
    "1584": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15546,
        15580
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "1586": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15546,
        15580
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "1587": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15546,
        15580
      ],
      "op": "PUSH32",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF"
    },
    "1620": {
      "fn": "usingOraclize.__callback",
      "offset": [
        15546,
        15593
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "1621": {
      "op": "POP"
    },
    "1622": {
      "fn": "usingOraclize.__callback",
      "jump": "o",
      "offset": [
        15422,
        15600
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "1623": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1261,
        1380
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1624": {
      "offset": [
        1019,
        1028
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x65F"
    },
    "1627": {
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x801"
    },
    "1630": {
      "jump": "i",
      "offset": [
        1019,
        1028
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1631": {
      "offset": [
        1019,
        1028
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1632": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x6B3"
    },
    "1635": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1636": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "1638": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1639": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1644": {
      "op": "SHL"
    },
    "1645": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1649": {
      "op": "MUL"
    },
    "1650": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1651": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1652": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "1654": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "1656": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1657": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1658": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1659": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1660": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1661": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x24"
    },
    "1663": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1664": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1665": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1666": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1699": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x44"
    },
    "1701": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1702": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1703": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1704": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1705": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1706": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1707": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1708": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1709": {
      "offset": [
        1011,
        1065
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1710": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x64"
    },
    "1712": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1713": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1714": {
      "offset": [
        1011,
        1065
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1715": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1716": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 6,
      "value": "0x6"
    },
    "1718": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1719": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "op": "SUB"
    },
    "1728": {
      "op": "NOT"
    },
    "1729": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "SUB"
    },
    "1738": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1739": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1740": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1741": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1742": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1743": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1744": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1745": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "OR",
      "path": "contracts/IsinaBank.sol"
    },
    "1746": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1747": {
      "fn": "IsinaBank.set_token_address",
      "offset": [
        1340,
        1373
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1748": {
      "fn": "IsinaBank.set_token_address",
      "jump": "o",
      "offset": [
        1261,
        1380
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1749": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1750": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1553,
        1558
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 7,
      "value": "0x6"
    },
    "1752": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1553,
        1558
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1753": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1503,
        1507
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1755": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1503,
        1507
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1762": {
      "op": "SHL"
    },
    "1763": {
      "op": "SUB"
    },
    "1764": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1553,
        1558
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "1765": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1531,
        1541
      ],
      "op": "CALLER",
      "path": "contracts/IsinaBank.sol"
    },
    "1766": {
      "branch": 72,
      "fn": "IsinaBank.send_ether",
      "offset": [
        1531,
        1559
      ],
      "op": "EQ",
      "path": "contracts/IsinaBank.sol"
    },
    "1767": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1523,
        1560
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x6EF"
    },
    "1770": {
      "branch": 72,
      "fn": "IsinaBank.send_ether",
      "offset": [
        1523,
        1560
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "1771": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1523,
        1560
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1773": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1523,
        1560
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1774": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1523,
        1560
      ],
      "op": "REVERT",
      "path": "contracts/IsinaBank.sol"
    },
    "1775": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1523,
        1560
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1776": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1570,
        1605
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "statement": 8,
      "value": "0x6F9"
    },
    "1779": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1587,
        1596
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1780": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1598,
        1604
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "1781": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1570,
        1586
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xBDC"
    },
    "1784": {
      "fn": "IsinaBank.send_ether",
      "jump": "i",
      "offset": [
        1570,
        1605
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1785": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1570,
        1605
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1786": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1570,
        1605
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1787": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1622,
        1626
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 9,
      "value": "0x1"
    },
    "1789": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1615,
        1626
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1790": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1615,
        1626
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1791": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1792": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1793": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1794": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1795": {
      "fn": "IsinaBank.send_ether",
      "offset": [
        1386,
        1633
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1796": {
      "fn": "IsinaBank.send_ether",
      "jump": "o",
      "offset": [
        1386,
        1633
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1797": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1025,
        1255
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1798": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1091,
        1101
      ],
      "op": "CALLER",
      "path": "contracts/IsinaBank.sol",
      "statement": 10
    },
    "1799": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1105,
        1106
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1801": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1802": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1803": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1804": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1090
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8"
    },
    "1806": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "1808": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1809": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "1811": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1812": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1813": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1075,
        1102
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1814": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1067,
        1107
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x71E"
    },
    "1817": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1067,
        1107
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "1818": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1067,
        1107
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1820": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1067,
        1107
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1821": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1067,
        1107
      ],
      "op": "REVERT",
      "path": "contracts/IsinaBank.sol"
    },
    "1822": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1067,
        1107
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1823": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1150,
        1160
      ],
      "op": "CALLER",
      "path": "contracts/IsinaBank.sol",
      "statement": 11
    },
    "1824": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1117,
        1131
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "1826": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1827": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1828": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1829": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1149
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8"
    },
    "1831": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "1833": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1834": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "1836": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "1837": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "1838": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1839": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "1840": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1171,
        1202
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol",
      "statement": 12
    },
    "1841": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1171,
        1202
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1842": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1171,
        1202
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "1843": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1844": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1212,
        1248
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "statement": 13,
      "value": "0x73D"
    },
    "1847": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1212,
        1248
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "1848": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1134,
        1161
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "1849": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1212,
        1228
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xBDC"
    },
    "1852": {
      "fn": "IsinaBank.sell_tokens",
      "jump": "i",
      "offset": [
        1212,
        1248
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1853": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1212,
        1248
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "1854": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1212,
        1248
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1855": {
      "fn": "IsinaBank.sell_tokens",
      "offset": [
        1025,
        1255
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "1856": {
      "fn": "IsinaBank.sell_tokens",
      "jump": "o",
      "offset": [
        1025,
        1255
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "1857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1858": {
      "offset": [
        1019,
        1028
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x749"
    },
    "1861": {
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x801"
    },
    "1864": {
      "jump": "i",
      "offset": [
        1019,
        1028
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1865": {
      "offset": [
        1019,
        1028
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1866": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x79D"
    },
    "1869": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1870": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "1872": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1873": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1878": {
      "op": "SHL"
    },
    "1879": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1883": {
      "op": "MUL"
    },
    "1884": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1885": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1886": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "1888": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "1890": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1891": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1892": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1893": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1894": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1895": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x24"
    },
    "1897": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1898": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1899": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1900": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1933": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x44"
    },
    "1935": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1936": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1937": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1938": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1939": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1940": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1941": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1942": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1943": {
      "offset": [
        1011,
        1065
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1944": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x64"
    },
    "1946": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1947": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1948": {
      "offset": [
        1011,
        1065
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1949": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1950": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 14,
      "value": "0x5"
    },
    "1952": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1953": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "1955": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1956": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1698,
        1699
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x0"
    },
    "1958": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1698,
        1699
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1965": {
      "op": "SHL"
    },
    "1966": {
      "op": "SUB"
    },
    "1967": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1968": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1969": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2002": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2003": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1698,
        1699
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2004": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1698,
        1699
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2005": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "LOG3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2006": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1717
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 15,
      "value": "0x5"
    },
    "2008": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2009": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2016": {
      "op": "SHL"
    },
    "2017": {
      "op": "SUB"
    },
    "2018": {
      "op": "NOT"
    },
    "2019": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2020": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2021": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2022": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1600,
        1737
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2023": {
      "offset": [
        686,
        741
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2024": {
      "offset": [
        727,
        741
      ],
      "op": "PUSH6",
      "path": "contracts/IsinaBank.sol",
      "value": "0x5AF3107A3FFF"
    },
    "2031": {
      "offset": [
        686,
        741
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2032": {
      "jump": "o",
      "offset": [
        686,
        741
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2033": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2034": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 16,
      "value": "0x5"
    },
    "2036": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2043": {
      "op": "SHL"
    },
    "2044": {
      "op": "SUB"
    },
    "2045": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2046": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2047": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2048": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        815,
        892
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2049": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2050": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 17,
      "value": "0x5"
    },
    "2052": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2059": {
      "op": "SHL"
    },
    "2060": {
      "op": "SUB"
    },
    "2061": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2062": {
      "fn": "Ownable.isOwner",
      "offset": [
        1229,
        1239
      ],
      "op": "CALLER",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2063": {
      "fn": "Ownable.isOwner",
      "offset": [
        1229,
        1249
      ],
      "op": "EQ",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2064": {
      "fn": "Ownable.isOwner",
      "offset": [
        1229,
        1249
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2065": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2066": {
      "offset": [
        931,
        981
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2067": {
      "offset": [
        931,
        981
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x8"
    },
    "2069": {
      "offset": [
        931,
        981
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "2071": {
      "offset": [
        931,
        981
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "2072": {
      "offset": [
        931,
        981
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "2074": {
      "offset": [
        931,
        981
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2075": {
      "offset": [
        931,
        981
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2076": {
      "offset": [
        931,
        981
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "2077": {
      "offset": [
        931,
        981
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "2079": {
      "offset": [
        931,
        981
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2080": {
      "offset": [
        931,
        981
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "2081": {
      "offset": [
        931,
        981
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "2082": {
      "offset": [
        931,
        981
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2083": {
      "jump": "o",
      "offset": [
        931,
        981
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2084": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2085": {
      "offset": [
        1019,
        1028
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x82C"
    },
    "2088": {
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x801"
    },
    "2091": {
      "jump": "i",
      "offset": [
        1019,
        1028
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2092": {
      "offset": [
        1019,
        1028
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2093": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x880"
    },
    "2096": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2097": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "2099": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2100": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2105": {
      "op": "SHL"
    },
    "2106": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2110": {
      "op": "MUL"
    },
    "2111": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2112": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2113": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "2115": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "2117": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2118": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2119": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2120": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2121": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2122": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x24"
    },
    "2124": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2125": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2126": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2127": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2160": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x44"
    },
    "2162": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2163": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2164": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2165": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2166": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2167": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2168": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2169": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2170": {
      "offset": [
        1011,
        1065
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2171": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x64"
    },
    "2173": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2174": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2175": {
      "offset": [
        1011,
        1065
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2176": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2177": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1958,
        1986
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 18,
      "value": "0x889"
    },
    "2180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1977,
        1985
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2181": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1958,
        1976
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0xCA7"
    },
    "2184": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1958,
        1986
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1958,
        1986
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2187": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1886,
        1993
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2188": {
      "offset": [
        748,
        771
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2189": {
      "offset": [
        748,
        771
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x6"
    },
    "2191": {
      "offset": [
        748,
        771
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2198": {
      "op": "SHL"
    },
    "2199": {
      "op": "SUB"
    },
    "2200": {
      "offset": [
        748,
        771
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "2201": {
      "offset": [
        748,
        771
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2202": {
      "jump": "o",
      "offset": [
        748,
        771
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2203": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37154,
        37284
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2204": {
      "offset": [
        11806,
        11809
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "2206": {
      "offset": [
        11806,
        11809
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2207": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37214,
        37238
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "2209": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37214,
        37238
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2216": {
      "op": "SHL"
    },
    "2217": {
      "op": "SUB"
    },
    "2218": {
      "offset": [
        11806,
        11809
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2219": {
      "offset": [
        11798,
        11824
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2220": {
      "offset": [
        11798,
        11824
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2221": {
      "offset": [
        11797,
        11861
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x8C8"
    },
    "2224": {
      "offset": [
        11797,
        11861
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2225": {
      "op": "POP"
    },
    "2226": {
      "offset": [
        11850,
        11853
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "2228": {
      "offset": [
        11850,
        11853
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2229": {
      "offset": [
        11830,
        11855
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x8C6"
    },
    "2232": {
      "offset": [
        11830,
        11855
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2239": {
      "op": "SHL"
    },
    "2240": {
      "op": "SUB"
    },
    "2241": {
      "offset": [
        11850,
        11853
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2242": {
      "offset": [
        11830,
        11841
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "2245": {
      "jump": "i",
      "offset": [
        11830,
        11855
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2246": {
      "offset": [
        11830,
        11855
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2247": {
      "offset": [
        11830,
        11860
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2248": {
      "offset": [
        11797,
        11861
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2249": {
      "offset": [
        11793,
        11923
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2250": {
      "offset": [
        11793,
        11923
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x8D9"
    },
    "2253": {
      "offset": [
        11793,
        11923
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2254": {
      "offset": [
        11877,
        11912
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x8D7"
    },
    "2257": {
      "offset": [
        11454,
        11455
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "2259": {
      "offset": [
        11877,
        11896
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4F"
    },
    "2262": {
      "jump": "i",
      "offset": [
        11877,
        11912
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2263": {
      "offset": [
        11877,
        11912
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2264": {
      "offset": [
        11877,
        11912
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2265": {
      "offset": [
        11793,
        11923
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2266": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "2268": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "2270": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2271": {
      "offset": [
        11957,
        11960
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2272": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2273": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "2276": {
      "offset": [
        11957,
        11960
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2277": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2278": {
      "offset": [
        11957,
        11960
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "offset": [
        11957,
        11960
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "offset": [
        11957,
        11971
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2297": {
      "offset": [
        11957,
        11971
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x38CC4831"
    },
    "2302": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2304": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2305": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2306": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xFFFFFFFF"
    },
    "2311": {
      "offset": [
        11957,
        11973
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2312": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE0"
    },
    "2314": {
      "offset": [
        11957,
        11973
      ],
      "op": "SHL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2315": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2316": {
      "offset": [
        11957,
        11973
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2317": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "2319": {
      "offset": [
        11957,
        11973
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2320": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "2322": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2324": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2325": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2326": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2327": {
      "offset": [
        11957,
        11973
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2328": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2329": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "2331": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2332": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2333": {
      "offset": [
        11957,
        11973
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2334": {
      "offset": [
        11957,
        11973
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2335": {
      "op": "DUP1"
    },
    "2336": {
      "op": "ISZERO"
    },
    "2337": {
      "op": "PUSH2",
      "value": "0x929"
    },
    "2340": {
      "op": "JUMPI"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2343": {
      "op": "DUP1"
    },
    "2344": {
      "op": "REVERT"
    },
    "2345": {
      "op": "JUMPDEST"
    },
    "2346": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2347": {
      "offset": [
        11957,
        11973
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2348": {
      "offset": [
        11957,
        11973
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2349": {
      "offset": [
        11957,
        11973
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2350": {
      "op": "DUP1"
    },
    "2351": {
      "op": "ISZERO"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x93D"
    },
    "2355": {
      "op": "JUMPI"
    },
    "2356": {
      "op": "RETURNDATASIZE"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2359": {
      "op": "DUP1"
    },
    "2360": {
      "op": "RETURNDATACOPY"
    },
    "2361": {
      "op": "RETURNDATASIZE"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2364": {
      "op": "REVERT"
    },
    "2365": {
      "op": "JUMPDEST"
    },
    "2366": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2367": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2368": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2369": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2370": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2372": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2373": {
      "offset": [
        11957,
        11973
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2376": {
      "op": "DUP2"
    },
    "2377": {
      "op": "LT"
    },
    "2378": {
      "op": "ISZERO"
    },
    "2379": {
      "op": "PUSH2",
      "value": "0x953"
    },
    "2382": {
      "op": "JUMPI"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2385": {
      "op": "DUP1"
    },
    "2386": {
      "op": "REVERT"
    },
    "2387": {
      "op": "JUMPDEST"
    },
    "2388": {
      "op": "POP"
    },
    "2389": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2390": {
      "offset": [
        11944,
        11952
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "2392": {
      "offset": [
        11944,
        11952
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "op": "SUB"
    },
    "2401": {
      "offset": [
        11944,
        11952
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2402": {
      "offset": [
        11944,
        11952
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2403": {
      "offset": [
        11944,
        11952
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2404": {
      "offset": [
        11936,
        11973
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2405": {
      "offset": [
        11936,
        11973
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2406": {
      "offset": [
        11936,
        11973
      ],
      "op": "EQ",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2407": {
      "offset": [
        11932,
        12038
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xA06"
    },
    "2410": {
      "offset": [
        11932,
        12038
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2411": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "2413": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "2415": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2416": {
      "offset": [
        12010,
        12013
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2417": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2418": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "2421": {
      "offset": [
        12010,
        12013
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2422": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2423": {
      "offset": [
        12010,
        12013
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2430": {
      "op": "SHL"
    },
    "2431": {
      "op": "SUB"
    },
    "2432": {
      "offset": [
        12010,
        12013
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "op": "SUB"
    },
    "2441": {
      "offset": [
        12010,
        12024
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2442": {
      "offset": [
        12010,
        12024
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x38CC4831"
    },
    "2447": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2449": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2450": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2451": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xFFFFFFFF"
    },
    "2456": {
      "offset": [
        12010,
        12026
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2457": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE0"
    },
    "2459": {
      "offset": [
        12010,
        12026
      ],
      "op": "SHL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2460": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2461": {
      "offset": [
        12010,
        12026
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2462": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "2464": {
      "offset": [
        12010,
        12026
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2465": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "2467": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2469": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2470": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2471": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2472": {
      "offset": [
        12010,
        12026
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2473": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2474": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "2476": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2477": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2478": {
      "offset": [
        12010,
        12026
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2479": {
      "offset": [
        12010,
        12026
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2480": {
      "op": "DUP1"
    },
    "2481": {
      "op": "ISZERO"
    },
    "2482": {
      "op": "PUSH2",
      "value": "0x9BA"
    },
    "2485": {
      "op": "JUMPI"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2488": {
      "op": "DUP1"
    },
    "2489": {
      "op": "REVERT"
    },
    "2490": {
      "op": "JUMPDEST"
    },
    "2491": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2492": {
      "offset": [
        12010,
        12026
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2493": {
      "offset": [
        12010,
        12026
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2494": {
      "offset": [
        12010,
        12026
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2495": {
      "op": "DUP1"
    },
    "2496": {
      "op": "ISZERO"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x9CE"
    },
    "2500": {
      "op": "JUMPI"
    },
    "2501": {
      "op": "RETURNDATASIZE"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2504": {
      "op": "DUP1"
    },
    "2505": {
      "op": "RETURNDATACOPY"
    },
    "2506": {
      "op": "RETURNDATASIZE"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2509": {
      "op": "REVERT"
    },
    "2510": {
      "op": "JUMPDEST"
    },
    "2511": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2512": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2513": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2514": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2515": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2517": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2518": {
      "offset": [
        12010,
        12026
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2521": {
      "op": "DUP2"
    },
    "2522": {
      "op": "LT"
    },
    "2523": {
      "op": "ISZERO"
    },
    "2524": {
      "op": "PUSH2",
      "value": "0x9E4"
    },
    "2527": {
      "op": "JUMPI"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2530": {
      "op": "DUP1"
    },
    "2531": {
      "op": "REVERT"
    },
    "2532": {
      "op": "JUMPDEST"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2535": {
      "offset": [
        11989,
        11997
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "2537": {
      "offset": [
        11989,
        12027
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2538": {
      "offset": [
        11989,
        12027
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2545": {
      "op": "SHL"
    },
    "2546": {
      "op": "SUB"
    },
    "2547": {
      "op": "NOT"
    },
    "2548": {
      "offset": [
        11989,
        12027
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "op": "SUB"
    },
    "2557": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2558": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2559": {
      "offset": [
        11989,
        12027
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2560": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2561": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2562": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2563": {
      "offset": [
        11989,
        12027
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2564": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2565": {
      "offset": [
        11989,
        12027
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2566": {
      "offset": [
        11932,
        12038
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2567": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 19,
      "value": "0x0"
    },
    "2569": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2570": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2571": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2572": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2573": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "2576": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2577": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2578": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2585": {
      "op": "SHL"
    },
    "2586": {
      "op": "SUB"
    },
    "2587": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37265
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2594": {
      "op": "SHL"
    },
    "2595": {
      "op": "SUB"
    },
    "2596": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37275
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2597": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37275
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xC281D19E"
    },
    "2602": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2604": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2605": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2606": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xFFFFFFFF"
    },
    "2611": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2612": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE0"
    },
    "2614": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "SHL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2615": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2616": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2617": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "2619": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2620": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "2622": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2624": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2625": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2626": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2627": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2628": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2629": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "DUP7",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2630": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2631": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2632": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2633": {
      "op": "DUP1"
    },
    "2634": {
      "op": "ISZERO"
    },
    "2635": {
      "op": "PUSH2",
      "value": "0xA53"
    },
    "2638": {
      "op": "JUMPI"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2641": {
      "op": "DUP1"
    },
    "2642": {
      "op": "REVERT"
    },
    "2643": {
      "op": "JUMPDEST"
    },
    "2644": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2645": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2646": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "STATICCALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2647": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2648": {
      "op": "DUP1"
    },
    "2649": {
      "op": "ISZERO"
    },
    "2650": {
      "op": "PUSH2",
      "value": "0xA67"
    },
    "2653": {
      "op": "JUMPI"
    },
    "2654": {
      "op": "RETURNDATASIZE"
    },
    "2655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2657": {
      "op": "DUP1"
    },
    "2658": {
      "op": "RETURNDATACOPY"
    },
    "2659": {
      "op": "RETURNDATASIZE"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2662": {
      "op": "REVERT"
    },
    "2663": {
      "op": "JUMPDEST"
    },
    "2664": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2665": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2666": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2667": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2668": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "2670": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2671": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2674": {
      "op": "DUP2"
    },
    "2675": {
      "op": "LT"
    },
    "2676": {
      "op": "ISZERO"
    },
    "2677": {
      "op": "PUSH2",
      "value": "0xA7D"
    },
    "2680": {
      "op": "JUMPI"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2683": {
      "op": "DUP1"
    },
    "2684": {
      "op": "REVERT"
    },
    "2685": {
      "op": "JUMPDEST"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2688": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37257,
        37277
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2689": {
      "op": "POP"
    },
    "2690": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "offset": [
        37154,
        37284
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2691": {
      "fn": "usingOraclize.oraclize_cbAddress",
      "jump": "o",
      "offset": [
        37154,
        37284
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "2692": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3438,
        3887
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2693": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3544,
        3558
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "2695": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3597,
        3598
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol",
      "statement": 20
    },
    "2696": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3544,
        3558
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2697": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3648,
        3881
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2698": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3664,
        3665
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2699": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3664,
        3672
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "2700": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3660,
        3661
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2701": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3660,
        3672
      ],
      "op": "LT",
      "path": "contracts/IsinaBank.sol"
    },
    "2702": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3648,
        3881
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "2703": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3648,
        3881
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xAE9"
    },
    "2706": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3648,
        3881
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "2707": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3693,
        3702
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 21,
      "value": "0x0"
    },
    "2709": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3720
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "2710": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3721,
        3722
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "2711": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2712": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "2713": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2714": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "LT",
      "path": "contracts/IsinaBank.sol"
    },
    "2715": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xAA0"
    },
    "2718": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "2719": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "INVALID",
      "path": "contracts/IsinaBank.sol"
    },
    "2720": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2721": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "2723": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "2724": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "2725": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "2726": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0xF8"
    },
    "2728": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "SHR",
      "path": "contracts/IsinaBank.sol"
    },
    "2729": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0xF8"
    },
    "2731": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3719,
        3723
      ],
      "op": "SHL",
      "path": "contracts/IsinaBank.sol"
    },
    "2732": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3713,
        3724
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0xF8"
    },
    "2734": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3713,
        3724
      ],
      "op": "SHR",
      "path": "contracts/IsinaBank.sol"
    },
    "2735": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3705,
        3725
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFF"
    },
    "2737": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3705,
        3725
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "2738": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3693,
        3725
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2739": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3693,
        3725
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2740": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3748,
        3750
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x30"
    },
    "2742": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3744
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2743": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3750
      ],
      "op": "LT",
      "path": "contracts/IsinaBank.sol"
    },
    "2744": {
      "branch": 73,
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3750
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "2745": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3761
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2746": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3761
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "2747": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3761
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xAC5"
    },
    "2750": {
      "branch": 73,
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3761
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "2751": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3761
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2752": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3759,
        3761
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x39"
    },
    "2754": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3754,
        3755
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2755": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3754,
        3761
      ],
      "op": "GT",
      "path": "contracts/IsinaBank.sol"
    },
    "2756": {
      "branch": 74,
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3754,
        3761
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "2757": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3743,
        3761
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2758": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3739,
        3871
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "2759": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3739,
        3871
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xADA"
    },
    "2762": {
      "branch": 74,
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3739,
        3871
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "2763": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3809,
        3811
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 22,
      "value": "0x30"
    },
    "2765": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3805,
        3806
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2766": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3805,
        3811
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "2767": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3790,
        3796
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "2768": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3799,
        3801
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0xA"
    },
    "2770": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3790,
        3801
      ],
      "op": "MUL",
      "path": "contracts/IsinaBank.sol"
    },
    "2771": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3790,
        3812
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "2772": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3781,
        3812
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaBank.sol"
    },
    "2773": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3781,
        3812
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2774": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3739,
        3871
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xAE0"
    },
    "2777": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3739,
        3871
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2778": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3739,
        3871
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2779": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3851,
        3856
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol",
      "statement": 23
    },
    "2780": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3851,
        3856
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xAE9"
    },
    "2783": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3851,
        3856
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2784": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3739,
        3871
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3674,
        3677
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 24,
      "value": "0x1"
    },
    "2788": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3674,
        3677
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "2789": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3648,
        3881
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xA89"
    },
    "2792": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3648,
        3881
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2793": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3648,
        3881
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2794": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3438,
        3887
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2795": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3438,
        3887
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2796": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3438,
        3887
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2797": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3438,
        3887
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2798": {
      "fn": "IsinaBank.string_to_uint",
      "offset": [
        3438,
        3887
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2799": {
      "fn": "IsinaBank.string_to_uint",
      "jump": "o",
      "offset": [
        3438,
        3887
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2800": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2334,
        2871
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2801": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2490,
        2512
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "2803": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2490,
        2512
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2804": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2579
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "statement": 25,
      "value": "0xB15"
    },
    "2807": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2571,
        2578
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x64"
    },
    "2809": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2566
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xB09"
    },
    "2812": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2559
      ],
      "op": "DUP8",
      "path": "contracts/IsinaBank.sol"
    },
    "2813": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2564,
        2565
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x3"
    },
    "2815": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2566
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFFFFFFFF"
    },
    "2820": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2563
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xD59"
    },
    "2823": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2566
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "2824": {
      "fn": "IsinaBank.get_eth_value",
      "jump": "i",
      "offset": [
        2553,
        2566
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2825": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2566
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2826": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2570
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2827": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2579
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFFFFFFFF"
    },
    "2832": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2570
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDB5"
    },
    "2835": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2579
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "2836": {
      "fn": "IsinaBank.get_eth_value",
      "jump": "i",
      "offset": [
        2553,
        2579
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2837": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2553,
        2579
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2838": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2528,
        2579
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2839": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2528,
        2579
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2840": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2589,
        2611
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 26,
      "value": "0x0"
    },
    "2842": {
      "offset": [
        665,
        666
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "2844": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2625,
        2629
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "2845": {
      "branch": 75,
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2625,
        2652
      ],
      "op": "LT",
      "path": "contracts/IsinaBank.sol"
    },
    "2846": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2621,
        2806
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "2847": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2621,
        2806
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xB4A"
    },
    "2850": {
      "branch": 75,
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2621,
        2806
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "2851": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2726
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "statement": 27,
      "value": "0xB43"
    },
    "2854": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2711,
        2725
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "2855": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2706
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xB37"
    },
    "2858": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2711,
        2725
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2859": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2704,
        2705
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x2"
    },
    "2861": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2706
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFFFFFFFF"
    },
    "2866": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2703
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDB5"
    },
    "2869": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2706
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "2870": {
      "fn": "IsinaBank.get_eth_value",
      "jump": "i",
      "offset": [
        2685,
        2706
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2871": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2706
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2872": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2710
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2873": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2726
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFFFFFFFF"
    },
    "2878": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2710
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xB78"
    },
    "2881": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2726
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "2882": {
      "fn": "IsinaBank.get_eth_value",
      "jump": "i",
      "offset": [
        2685,
        2726
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2883": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2685,
        2726
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2884": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2668,
        2726
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2885": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2668,
        2726
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2886": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2621,
        2806
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xB5E"
    },
    "2889": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2621,
        2806
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2890": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2621,
        2806
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2891": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2774,
        2795
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "statement": 28,
      "value": "0xB5B"
    },
    "2894": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2774,
        2788
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "2895": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2793,
        2794
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x2"
    },
    "2897": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2774,
        2795
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFFFFFFFF"
    },
    "2902": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2774,
        2792
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xD59"
    },
    "2905": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2774,
        2795
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "2906": {
      "fn": "IsinaBank.get_eth_value",
      "jump": "i",
      "offset": [
        2774,
        2795
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2907": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2774,
        2795
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2908": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2757,
        2795
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "2909": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2757,
        2795
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "2910": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2621,
        2806
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2911": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2832,
        2864
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "statement": 29,
      "value": "0xB6E"
    },
    "2914": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2832,
        2846
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "2915": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2851,
        2863
      ],
      "op": "DUP7",
      "path": "contracts/IsinaBank.sol"
    },
    "2916": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2832,
        2864
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFFFFFFFF"
    },
    "2921": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2832,
        2850
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xDB5"
    },
    "2924": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2832,
        2864
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "2925": {
      "fn": "IsinaBank.get_eth_value",
      "jump": "i",
      "offset": [
        2832,
        2864
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2926": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2832,
        2864
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "2927": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2815,
        2864
      ],
      "op": "SWAP7",
      "path": "contracts/IsinaBank.sol"
    },
    "2928": {
      "fn": "IsinaBank.get_eth_value",
      "offset": [
        2334,
        2871
      ],
      "op": "SWAP6",
      "path": "contracts/IsinaBank.sol"
    },
    "2929": {
      "op": "POP"
    },
    "2930": {
      "op": "POP"
    },
    "2931": {
      "op": "POP"
    },
    "2932": {
      "op": "POP"
    },
    "2933": {
      "op": "POP"
    },
    "2934": {
      "op": "POP"
    },
    "2935": {
      "fn": "IsinaBank.get_eth_value",
      "jump": "o",
      "offset": [
        2334,
        2871
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "2936": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2937": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x0"
    },
    "2939": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 30
    },
    "2940": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2941": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2942": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 31
    },
    "2943": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2944": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2945": {
      "branch": 79,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2946": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0xBD5"
    },
    "2949": {
      "branch": 79,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2950": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "2952": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2953": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2958": {
      "op": "SHL"
    },
    "2959": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2963": {
      "op": "MUL"
    },
    "2964": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2965": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2966": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "2968": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x4"
    },
    "2970": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2971": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2972": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2973": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x1B"
    },
    "2975": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x24"
    },
    "2977": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2978": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2979": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "2980": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "3013": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x44"
    },
    "3015": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3016": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3017": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3018": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3019": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3020": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3021": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3022": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3023": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3024": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x64"
    },
    "3026": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3027": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3028": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3029": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3030": {
      "fn": "SafeMath.add",
      "offset": [
        1002,
        1003
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 32
    },
    "3031": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3032": {
      "op": "POP"
    },
    "3033": {
      "op": "POP"
    },
    "3034": {
      "op": "POP"
    },
    "3035": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        834,
        1010
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3036": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        2877,
        3432
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "3037": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3006,
        3010
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "3039": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "statement": 33,
      "value": "0xC05"
    },
    "3042": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3044": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "3045": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3046": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3048": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "3049": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3051": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3052": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3053": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x3"
    },
    "3055": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3056": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3057": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "3059": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "op": "PUSH3",
      "value": "0x155493"
    },
    "3069": {
      "op": "MUL"
    },
    "3070": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3071": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3072": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "3073": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3075
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xE22"
    },
    "3076": {
      "fn": "IsinaBank.get_ethusd_price",
      "jump": "i",
      "offset": [
        3058,
        3082
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "3077": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3058,
        3082
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "3078": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3042,
        3046
      ],
      "op": "ADDRESS",
      "path": "contracts/IsinaBank.sol"
    },
    "3079": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3034,
        3055
      ],
      "op": "BALANCE",
      "path": "contracts/IsinaBank.sol"
    },
    "3080": {
      "branch": 76,
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3034,
        3082
      ],
      "op": "GT",
      "path": "contracts/IsinaBank.sol"
    },
    "3081": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3026,
        3083
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xC11"
    },
    "3084": {
      "branch": 76,
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3026,
        3083
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "3085": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3026,
        3083
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "3087": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3026,
        3083
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3088": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3026,
        3083
      ],
      "op": "REVERT",
      "path": "contracts/IsinaBank.sol"
    },
    "3089": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3026,
        3083
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "3090": {
      "offset": [
        727,
        741
      ],
      "op": "PUSH6",
      "path": "contracts/IsinaBank.sol",
      "value": "0x5AF3107A3FFF"
    },
    "3097": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3101,
        3116
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaBank.sol",
      "statement": 34
    },
    "3098": {
      "branch": 77,
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3101,
        3133
      ],
      "op": "LT",
      "path": "contracts/IsinaBank.sol"
    },
    "3099": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3093,
        3134
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xC23"
    },
    "3102": {
      "branch": 77,
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3093,
        3134
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "3103": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3093,
        3134
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "3105": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3093,
        3134
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3106": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3093,
        3134
      ],
      "op": "REVERT",
      "path": "contracts/IsinaBank.sol"
    },
    "3107": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3093,
        3134
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "3108": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3144,
        3160
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 35,
      "value": "0x0"
    },
    "3110": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0xC65"
    },
    "3113": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3115": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "3116": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3117": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3119": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "3120": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3122": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3123": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3124": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x3"
    },
    "3126": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3127": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3128": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "3130": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "3135": {
      "op": "SHL"
    },
    "3136": {
      "op": "PUSH3",
      "value": "0x155493"
    },
    "3140": {
      "op": "MUL"
    },
    "3141": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3142": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3143": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "3144": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3146": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "3147": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3148": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x60"
    },
    "3150": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "3151": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3153": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3154": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3155": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3157": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3158": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3159": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "3161": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "3162": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x188E"
    },
    "3165": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3167": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3168": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "CODECOPY",
      "path": "contracts/IsinaBank.sol"
    },
    "3169": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3177
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1071"
    },
    "3172": {
      "fn": "IsinaBank.get_ethusd_price",
      "jump": "i",
      "offset": [
        3163,
        3286
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "3173": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3163,
        3286
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "3174": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "statement": 36,
      "value": "0x0"
    },
    "3176": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3177": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3178": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3179": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3303
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7"
    },
    "3181": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "3183": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3184": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x40"
    },
    "3186": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3187": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3313
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "3188": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3189": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3196": {
      "op": "SHL"
    },
    "3197": {
      "op": "SUB"
    },
    "3198": {
      "op": "NOT"
    },
    "3199": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "op": "SUB"
    },
    "3208": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "SWAP6",
      "path": "contracts/IsinaBank.sol"
    },
    "3209": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3210": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "SWAP6",
      "path": "contracts/IsinaBank.sol"
    },
    "3211": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "3212": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaBank.sol"
    },
    "3213": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3214": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaBank.sol"
    },
    "3215": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "OR",
      "path": "contracts/IsinaBank.sol"
    },
    "3216": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "DUP5",
      "path": "contracts/IsinaBank.sol"
    },
    "3217": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3296,
        3332
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3221": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3342,
        3366
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol",
      "statement": 37
    },
    "3222": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3342,
        3366
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "3223": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3342,
        3375
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3224": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3342,
        3375
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3225": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3342,
        3375
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3226": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3342,
        3375
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3227": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3410,
        3425
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaBank.sol",
      "statement": 38
    },
    "3228": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3385,
        3407
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x2"
    },
    "3230": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3385,
        3407
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3231": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3385,
        3407
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "3232": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3385,
        3407
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "3233": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3385,
        3425
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3234": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3385,
        3425
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3235": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3385,
        3425
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "3236": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3385,
        3425
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "3237": {
      "fn": "IsinaBank.get_ethusd_price",
      "offset": [
        3342,
        3375
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "3238": {
      "fn": "IsinaBank.get_ethusd_price",
      "jump": "o",
      "offset": [
        2877,
        3432
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "3239": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2094,
        2319
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "op": "SUB"
    },
    "3248": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2167,
        2189
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 39
    },
    "3249": {
      "branch": 78,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2167,
        2189
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3250": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0xCEF"
    },
    "3253": {
      "branch": 78,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3254": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "3256": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3261": {
      "op": "SHL"
    },
    "3262": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3266": {
      "op": "MUL"
    },
    "3267": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3268": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3269": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "3271": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3272": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3273": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3274": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "3276": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3277": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3278": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3279": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3280": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3281": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3282": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x26"
    },
    "3284": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3285": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3286": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "3288": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3289": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3290": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x1847"
    },
    "3293": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x26"
    },
    "3295": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3296": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3297": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "3299": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3300": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3301": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3302": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3303": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "3305": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3306": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3307": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3308": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3309": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3310": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3311": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3312": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 40,
      "value": "0x5"
    },
    "3314": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3315": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "3317": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3327": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3328": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3329": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3330": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3331": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3332": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x0"
    },
    "3368": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3369": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "LOG3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3370": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2301
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 41,
      "value": "0x5"
    },
    "3372": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3373": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3380": {
      "op": "SHL"
    },
    "3381": {
      "op": "SUB"
    },
    "3382": {
      "op": "NOT"
    },
    "3383": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3390": {
      "op": "SHL"
    },
    "3391": {
      "op": "SUB"
    },
    "3392": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3393": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3394": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3395": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3396": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3397": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3398": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3399": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "OR",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3400": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3401": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3402": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2094,
        2319
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "3403": {
      "fn": "usingOraclize.getCodeSize",
      "offset": [
        37290,
        37437
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3404": {
      "fn": "usingOraclize.getCodeSize",
      "offset": [
        37403,
        37421
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 42
    },
    "3405": {
      "fn": "usingOraclize.getCodeSize",
      "offset": [
        37403,
        37421
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3406": {
      "fn": "usingOraclize.getCodeSize",
      "jump": "o",
      "offset": [
        37380,
        37431
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3407": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        12530,
        12735
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3408": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        12595,
        12611
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3410": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        12707,
        12728
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 43,
      "value": "0x6FF"
    },
    "3413": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        12707,
        12726
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1435"
    },
    "3416": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        12707,
        12728
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3417": {
      "fn": "SafeMath.mul",
      "offset": [
        1693,
        2151
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3418": {
      "fn": "SafeMath.mul",
      "offset": [
        1751,
        1758
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x0"
    },
    "3420": {
      "branch": 80,
      "fn": "SafeMath.mul",
      "offset": [
        1991,
        1997
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3421": {
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0xD68"
    },
    "3424": {
      "branch": 80,
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3425": {
      "op": "POP"
    },
    "3426": {
      "fn": "SafeMath.mul",
      "offset": [
        2020,
        2021
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 44,
      "value": "0x0"
    },
    "3428": {
      "fn": "SafeMath.mul",
      "offset": [
        2013,
        2021
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x6FF"
    },
    "3431": {
      "fn": "SafeMath.mul",
      "offset": [
        2013,
        2021
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3432": {
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3433": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 45
    },
    "3434": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3435": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3436": {
      "fn": "SafeMath.mul",
      "offset": [
        2058,
        2059
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3437": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2055
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3438": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3439": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2055
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3440": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 46,
      "value": "0xD75"
    },
    "3443": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3444": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "INVALID",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3445": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3446": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3447": {
      "branch": 81,
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2087
      ],
      "op": "EQ",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3448": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0xBD5"
    },
    "3451": {
      "branch": 81,
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3452": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "3454": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3459": {
      "op": "SHL"
    },
    "3460": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3464": {
      "op": "MUL"
    },
    "3465": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3466": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3467": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x4"
    },
    "3469": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3470": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3471": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3472": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "3474": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3475": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3476": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3477": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3478": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3479": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3480": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x21"
    },
    "3482": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3483": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3484": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "3486": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3487": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3488": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x186D"
    },
    "3491": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x21"
    },
    "3493": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3494": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3495": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "3497": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3498": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3499": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3500": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3501": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "3503": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3504": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3505": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3506": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3507": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3508": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3509": {
      "fn": "SafeMath.div",
      "offset": [
        2606,
        2932
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3510": {
      "fn": "SafeMath.div",
      "offset": [
        2664,
        2671
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x0"
    },
    "3512": {
      "fn": "SafeMath.div",
      "offset": [
        2761,
        2762
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 47
    },
    "3513": {
      "fn": "SafeMath.div",
      "offset": [
        2757,
        2758
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3514": {
      "branch": 82,
      "fn": "SafeMath.div",
      "offset": [
        2757,
        2762
      ],
      "op": "GT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3515": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0xE0E"
    },
    "3518": {
      "branch": 82,
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3519": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "3521": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3522": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3527": {
      "op": "SHL"
    },
    "3528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3532": {
      "op": "MUL"
    },
    "3533": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3534": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3535": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "3537": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x4"
    },
    "3539": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3540": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3541": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3542": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x1A"
    },
    "3544": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x24"
    },
    "3546": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3547": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3548": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3549": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "3582": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x44"
    },
    "3584": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3585": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3586": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3587": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3588": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3589": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3590": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3591": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3592": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3593": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x64"
    },
    "3595": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3596": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3597": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3598": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3599": {
      "fn": "SafeMath.div",
      "offset": [
        2803,
        2812
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 48,
      "value": "0x0"
    },
    "3601": {
      "fn": "SafeMath.div",
      "offset": [
        2819,
        2820
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3602": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2816
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3603": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3604": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0xE19"
    },
    "3607": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3608": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "INVALID",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3609": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3610": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3611": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3612": {
      "fn": "SafeMath.div",
      "offset": [
        2606,
        2932
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3613": {
      "op": "POP"
    },
    "3614": {
      "op": "POP"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        2606,
        2932
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "3618": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15606,
        15762
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3619": {
      "offset": [
        11806,
        11809
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "3621": {
      "offset": [
        11806,
        11809
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3622": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15690,
        15706
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3624": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15690,
        15706
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "op": "SUB"
    },
    "3633": {
      "offset": [
        11806,
        11809
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3634": {
      "offset": [
        11798,
        11824
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3635": {
      "offset": [
        11798,
        11824
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3636": {
      "offset": [
        11797,
        11861
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE4F"
    },
    "3639": {
      "offset": [
        11797,
        11861
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "offset": [
        11850,
        11853
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "3643": {
      "offset": [
        11850,
        11853
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3644": {
      "offset": [
        11830,
        11855
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE4D"
    },
    "3647": {
      "offset": [
        11830,
        11855
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3654": {
      "op": "SHL"
    },
    "3655": {
      "op": "SUB"
    },
    "3656": {
      "offset": [
        11850,
        11853
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3657": {
      "offset": [
        11830,
        11841
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "3660": {
      "jump": "i",
      "offset": [
        11830,
        11855
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3661": {
      "offset": [
        11830,
        11855
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3662": {
      "offset": [
        11830,
        11860
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3663": {
      "offset": [
        11797,
        11861
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3664": {
      "offset": [
        11793,
        11923
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3665": {
      "offset": [
        11793,
        11923
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE60"
    },
    "3668": {
      "offset": [
        11793,
        11923
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3669": {
      "offset": [
        11877,
        11912
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE5E"
    },
    "3672": {
      "offset": [
        11454,
        11455
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3674": {
      "offset": [
        11877,
        11896
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4F"
    },
    "3677": {
      "jump": "i",
      "offset": [
        11877,
        11912
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3678": {
      "offset": [
        11877,
        11912
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3679": {
      "offset": [
        11877,
        11912
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3680": {
      "offset": [
        11793,
        11923
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3681": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "3683": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3685": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3686": {
      "offset": [
        11957,
        11960
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3687": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3688": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "3691": {
      "offset": [
        11957,
        11960
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3692": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3693": {
      "offset": [
        11957,
        11960
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "offset": [
        11957,
        11960
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3709": {
      "op": "SHL"
    },
    "3710": {
      "op": "SUB"
    },
    "3711": {
      "offset": [
        11957,
        11971
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3712": {
      "offset": [
        11957,
        11971
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x38CC4831"
    },
    "3717": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "3719": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3720": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3721": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xFFFFFFFF"
    },
    "3726": {
      "offset": [
        11957,
        11973
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3727": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE0"
    },
    "3729": {
      "offset": [
        11957,
        11973
      ],
      "op": "SHL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3730": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3731": {
      "offset": [
        11957,
        11973
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3732": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "3734": {
      "offset": [
        11957,
        11973
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3735": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "3737": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "3739": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3740": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3741": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3742": {
      "offset": [
        11957,
        11973
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3743": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3744": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3746": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3747": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3748": {
      "offset": [
        11957,
        11973
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3749": {
      "offset": [
        11957,
        11973
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3750": {
      "op": "DUP1"
    },
    "3751": {
      "op": "ISZERO"
    },
    "3752": {
      "op": "PUSH2",
      "value": "0xEB0"
    },
    "3755": {
      "op": "JUMPI"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3758": {
      "op": "DUP1"
    },
    "3759": {
      "op": "REVERT"
    },
    "3760": {
      "op": "JUMPDEST"
    },
    "3761": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3762": {
      "offset": [
        11957,
        11973
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3763": {
      "offset": [
        11957,
        11973
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3764": {
      "offset": [
        11957,
        11973
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3765": {
      "op": "DUP1"
    },
    "3766": {
      "op": "ISZERO"
    },
    "3767": {
      "op": "PUSH2",
      "value": "0xEC4"
    },
    "3770": {
      "op": "JUMPI"
    },
    "3771": {
      "op": "RETURNDATASIZE"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3774": {
      "op": "DUP1"
    },
    "3775": {
      "op": "RETURNDATACOPY"
    },
    "3776": {
      "op": "RETURNDATASIZE"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3779": {
      "op": "REVERT"
    },
    "3780": {
      "op": "JUMPDEST"
    },
    "3781": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3782": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3783": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3784": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3785": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "3787": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3788": {
      "offset": [
        11957,
        11973
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3791": {
      "op": "DUP2"
    },
    "3792": {
      "op": "LT"
    },
    "3793": {
      "op": "ISZERO"
    },
    "3794": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3797": {
      "op": "JUMPI"
    },
    "3798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3800": {
      "op": "DUP1"
    },
    "3801": {
      "op": "REVERT"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3805": {
      "offset": [
        11944,
        11952
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3807": {
      "offset": [
        11944,
        11952
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "op": "SUB"
    },
    "3816": {
      "offset": [
        11944,
        11952
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3817": {
      "offset": [
        11944,
        11952
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3818": {
      "offset": [
        11944,
        11952
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3819": {
      "offset": [
        11936,
        11973
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3820": {
      "offset": [
        11936,
        11973
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3821": {
      "offset": [
        11936,
        11973
      ],
      "op": "EQ",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3822": {
      "offset": [
        11932,
        12038
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xF8D"
    },
    "3825": {
      "offset": [
        11932,
        12038
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3826": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "3828": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3830": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3831": {
      "offset": [
        12010,
        12013
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3832": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3833": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "3836": {
      "offset": [
        12010,
        12013
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3837": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3838": {
      "offset": [
        12010,
        12013
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3845": {
      "op": "SHL"
    },
    "3846": {
      "op": "SUB"
    },
    "3847": {
      "offset": [
        12010,
        12013
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3854": {
      "op": "SHL"
    },
    "3855": {
      "op": "SUB"
    },
    "3856": {
      "offset": [
        12010,
        12024
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3857": {
      "offset": [
        12010,
        12024
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x38CC4831"
    },
    "3862": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "3864": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3865": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3866": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xFFFFFFFF"
    },
    "3871": {
      "offset": [
        12010,
        12026
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3872": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE0"
    },
    "3874": {
      "offset": [
        12010,
        12026
      ],
      "op": "SHL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3875": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3876": {
      "offset": [
        12010,
        12026
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3877": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "3879": {
      "offset": [
        12010,
        12026
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3880": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "3882": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "3884": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3885": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3886": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3887": {
      "offset": [
        12010,
        12026
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3888": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3889": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3891": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3892": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3893": {
      "offset": [
        12010,
        12026
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3894": {
      "offset": [
        12010,
        12026
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3895": {
      "op": "DUP1"
    },
    "3896": {
      "op": "ISZERO"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF41"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "DUP1"
    },
    "3904": {
      "op": "REVERT"
    },
    "3905": {
      "op": "JUMPDEST"
    },
    "3906": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3907": {
      "offset": [
        12010,
        12026
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3908": {
      "offset": [
        12010,
        12026
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3909": {
      "offset": [
        12010,
        12026
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3910": {
      "op": "DUP1"
    },
    "3911": {
      "op": "ISZERO"
    },
    "3912": {
      "op": "PUSH2",
      "value": "0xF55"
    },
    "3915": {
      "op": "JUMPI"
    },
    "3916": {
      "op": "RETURNDATASIZE"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3919": {
      "op": "DUP1"
    },
    "3920": {
      "op": "RETURNDATACOPY"
    },
    "3921": {
      "op": "RETURNDATASIZE"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3924": {
      "op": "REVERT"
    },
    "3925": {
      "op": "JUMPDEST"
    },
    "3926": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3927": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3928": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3929": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3930": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "3932": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3933": {
      "offset": [
        12010,
        12026
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3936": {
      "op": "DUP2"
    },
    "3937": {
      "op": "LT"
    },
    "3938": {
      "op": "ISZERO"
    },
    "3939": {
      "op": "PUSH2",
      "value": "0xF6B"
    },
    "3942": {
      "op": "JUMPI"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3945": {
      "op": "DUP1"
    },
    "3946": {
      "op": "REVERT"
    },
    "3947": {
      "op": "JUMPDEST"
    },
    "3948": {
      "op": "POP"
    },
    "3949": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3950": {
      "offset": [
        11989,
        11997
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "3952": {
      "offset": [
        11989,
        12027
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3953": {
      "offset": [
        11989,
        12027
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3960": {
      "op": "SHL"
    },
    "3961": {
      "op": "SUB"
    },
    "3962": {
      "op": "NOT"
    },
    "3963": {
      "offset": [
        11989,
        12027
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3970": {
      "op": "SHL"
    },
    "3971": {
      "op": "SUB"
    },
    "3972": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3973": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3974": {
      "offset": [
        11989,
        12027
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3975": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3976": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3977": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3978": {
      "offset": [
        11989,
        12027
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3979": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3980": {
      "offset": [
        11989,
        12027
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3981": {
      "offset": [
        11932,
        12038
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3982": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15733
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 49,
      "value": "0x0"
    },
    "3984": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15733
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3985": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15733
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3986": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "3988": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3993": {
      "op": "SHL"
    },
    "3994": {
      "op": "PUSH4",
      "value": "0x524F3889"
    },
    "3999": {
      "op": "MUL"
    },
    "4000": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4001": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4002": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4004": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "4006": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4007": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4008": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4009": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4010": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4011": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP7",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4012": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4013": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x24"
    },
    "4015": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4016": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4017": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4018": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP7",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4019": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4026": {
      "op": "SHL"
    },
    "4027": {
      "op": "SUB"
    },
    "4028": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15733
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4029": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15733
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4030": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15733
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4031": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15733
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4032": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15742
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x524F3889"
    },
    "4037": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15742
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4038": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15743,
        15754
      ],
      "op": "DUP9",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4039": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15743,
        15754
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4040": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4041": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4042": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4043": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4044": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x44"
    },
    "4046": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4047": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4048": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4049": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP7",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4050": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4051": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4052": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4053": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4054": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4055": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4056": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4057": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4058": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4059": {
      "op": "JUMPDEST"
    },
    "4060": {
      "op": "DUP4"
    },
    "4061": {
      "op": "DUP2"
    },
    "4062": {
      "op": "LT"
    },
    "4063": {
      "op": "ISZERO"
    },
    "4064": {
      "op": "PUSH2",
      "value": "0xFF3"
    },
    "4067": {
      "op": "JUMPI"
    },
    "4068": {
      "op": "DUP2"
    },
    "4069": {
      "op": "DUP2"
    },
    "4070": {
      "op": "ADD"
    },
    "4071": {
      "op": "MLOAD"
    },
    "4072": {
      "op": "DUP4"
    },
    "4073": {
      "op": "DUP3"
    },
    "4074": {
      "op": "ADD"
    },
    "4075": {
      "op": "MSTORE"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4078": {
      "op": "ADD"
    },
    "4079": {
      "op": "PUSH2",
      "value": "0xFDB"
    },
    "4082": {
      "op": "JUMP"
    },
    "4083": {
      "op": "JUMPDEST"
    },
    "4084": {
      "op": "POP"
    },
    "4085": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4086": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4087": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4088": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4089": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4090": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4091": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4092": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4093": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4094": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1F"
    },
    "4096": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4097": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4098": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4099": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1020"
    },
    "4102": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4103": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4104": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4105": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4106": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4107": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4108": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "4110": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4111": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4113": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4114": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "4117": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4118": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4119": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "NOT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4120": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4121": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4122": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4123": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4125": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4126": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4127": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4128": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4129": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4130": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4131": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4132": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4133": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4134": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4136": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4138": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4139": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4140": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4141": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4142": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4143": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4145": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4146": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4147": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4148": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4149": {
      "op": "DUP1"
    },
    "4150": {
      "op": "ISZERO"
    },
    "4151": {
      "op": "PUSH2",
      "value": "0x103F"
    },
    "4154": {
      "op": "JUMPI"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4157": {
      "op": "DUP1"
    },
    "4158": {
      "op": "REVERT"
    },
    "4159": {
      "op": "JUMPDEST"
    },
    "4160": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4161": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4162": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4163": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4164": {
      "op": "DUP1"
    },
    "4165": {
      "op": "ISZERO"
    },
    "4166": {
      "op": "PUSH2",
      "value": "0x1053"
    },
    "4169": {
      "op": "JUMPI"
    },
    "4170": {
      "op": "RETURNDATASIZE"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4173": {
      "op": "DUP1"
    },
    "4174": {
      "op": "RETURNDATACOPY"
    },
    "4175": {
      "op": "RETURNDATASIZE"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4178": {
      "op": "REVERT"
    },
    "4179": {
      "op": "JUMPDEST"
    },
    "4180": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4181": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4182": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4183": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4184": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4186": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4187": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4190": {
      "op": "DUP2"
    },
    "4191": {
      "op": "LT"
    },
    "4192": {
      "op": "ISZERO"
    },
    "4193": {
      "op": "PUSH2",
      "value": "0x1069"
    },
    "4196": {
      "op": "JUMPI"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4199": {
      "op": "DUP1"
    },
    "4200": {
      "op": "REVERT"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "POP"
    },
    "4203": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4204": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15725,
        15755
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4205": {
      "fn": "usingOraclize.oraclize_getPrice",
      "offset": [
        15606,
        15762
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4206": {
      "op": "POP"
    },
    "4207": {
      "op": "POP"
    },
    "4208": {
      "fn": "usingOraclize.oraclize_getPrice",
      "jump": "o",
      "offset": [
        15606,
        15762
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4209": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        15957,
        16310
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4210": {
      "offset": [
        11806,
        11809
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "4212": {
      "offset": [
        11806,
        11809
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4213": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16058,
        16069
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4215": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16058,
        16069
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "op": "SUB"
    },
    "4224": {
      "offset": [
        11806,
        11809
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4225": {
      "offset": [
        11798,
        11824
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4226": {
      "offset": [
        11798,
        11824
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4227": {
      "offset": [
        11797,
        11861
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x109E"
    },
    "4230": {
      "offset": [
        11797,
        11861
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4231": {
      "op": "POP"
    },
    "4232": {
      "offset": [
        11850,
        11853
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "4234": {
      "offset": [
        11850,
        11853
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4235": {
      "offset": [
        11830,
        11855
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x109C"
    },
    "4238": {
      "offset": [
        11830,
        11855
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4245": {
      "op": "SHL"
    },
    "4246": {
      "op": "SUB"
    },
    "4247": {
      "offset": [
        11850,
        11853
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4248": {
      "offset": [
        11830,
        11841
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "4251": {
      "jump": "i",
      "offset": [
        11830,
        11855
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4252": {
      "offset": [
        11830,
        11855
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4253": {
      "offset": [
        11830,
        11860
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4254": {
      "offset": [
        11797,
        11861
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4255": {
      "offset": [
        11793,
        11923
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4256": {
      "offset": [
        11793,
        11923
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x10AF"
    },
    "4259": {
      "offset": [
        11793,
        11923
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4260": {
      "offset": [
        11877,
        11912
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x10AD"
    },
    "4263": {
      "offset": [
        11454,
        11455
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4265": {
      "offset": [
        11877,
        11896
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4F"
    },
    "4268": {
      "jump": "i",
      "offset": [
        11877,
        11912
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4269": {
      "offset": [
        11877,
        11912
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4270": {
      "offset": [
        11877,
        11912
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4271": {
      "offset": [
        11793,
        11923
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4272": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "4274": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4276": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4277": {
      "offset": [
        11957,
        11960
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4278": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4279": {
      "offset": [
        11957,
        11960
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "4282": {
      "offset": [
        11957,
        11960
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4283": {
      "offset": [
        11957,
        11960
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4284": {
      "offset": [
        11957,
        11960
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4291": {
      "op": "SHL"
    },
    "4292": {
      "op": "SUB"
    },
    "4293": {
      "offset": [
        11957,
        11960
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4300": {
      "op": "SHL"
    },
    "4301": {
      "op": "SUB"
    },
    "4302": {
      "offset": [
        11957,
        11971
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4303": {
      "offset": [
        11957,
        11971
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x38CC4831"
    },
    "4308": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4310": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4311": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4312": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xFFFFFFFF"
    },
    "4317": {
      "offset": [
        11957,
        11973
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4318": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE0"
    },
    "4320": {
      "offset": [
        11957,
        11973
      ],
      "op": "SHL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4321": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4322": {
      "offset": [
        11957,
        11973
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4323": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "4325": {
      "offset": [
        11957,
        11973
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4326": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4328": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4330": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4331": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4332": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4333": {
      "offset": [
        11957,
        11973
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4334": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4335": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4337": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4338": {
      "offset": [
        11957,
        11973
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4339": {
      "offset": [
        11957,
        11973
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4340": {
      "offset": [
        11957,
        11973
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4341": {
      "op": "DUP1"
    },
    "4342": {
      "op": "ISZERO"
    },
    "4343": {
      "op": "PUSH2",
      "value": "0x10FF"
    },
    "4346": {
      "op": "JUMPI"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4349": {
      "op": "DUP1"
    },
    "4350": {
      "op": "REVERT"
    },
    "4351": {
      "op": "JUMPDEST"
    },
    "4352": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4353": {
      "offset": [
        11957,
        11973
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4354": {
      "offset": [
        11957,
        11973
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4355": {
      "offset": [
        11957,
        11973
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4356": {
      "op": "DUP1"
    },
    "4357": {
      "op": "ISZERO"
    },
    "4358": {
      "op": "PUSH2",
      "value": "0x1113"
    },
    "4361": {
      "op": "JUMPI"
    },
    "4362": {
      "op": "RETURNDATASIZE"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4365": {
      "op": "DUP1"
    },
    "4366": {
      "op": "RETURNDATACOPY"
    },
    "4367": {
      "op": "RETURNDATASIZE"
    },
    "4368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4370": {
      "op": "REVERT"
    },
    "4371": {
      "op": "JUMPDEST"
    },
    "4372": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4373": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4374": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4375": {
      "offset": [
        11957,
        11973
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4376": {
      "offset": [
        11957,
        11973
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4378": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4379": {
      "offset": [
        11957,
        11973
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4382": {
      "op": "DUP2"
    },
    "4383": {
      "op": "LT"
    },
    "4384": {
      "op": "ISZERO"
    },
    "4385": {
      "op": "PUSH2",
      "value": "0x1129"
    },
    "4388": {
      "op": "JUMPI"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4391": {
      "op": "DUP1"
    },
    "4392": {
      "op": "REVERT"
    },
    "4393": {
      "op": "JUMPDEST"
    },
    "4394": {
      "op": "POP"
    },
    "4395": {
      "offset": [
        11957,
        11973
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4396": {
      "offset": [
        11944,
        11952
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4398": {
      "offset": [
        11944,
        11952
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4405": {
      "op": "SHL"
    },
    "4406": {
      "op": "SUB"
    },
    "4407": {
      "offset": [
        11944,
        11952
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4408": {
      "offset": [
        11944,
        11952
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4409": {
      "offset": [
        11944,
        11952
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4410": {
      "offset": [
        11936,
        11973
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4411": {
      "offset": [
        11936,
        11973
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4412": {
      "offset": [
        11936,
        11973
      ],
      "op": "EQ",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4413": {
      "offset": [
        11932,
        12038
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x11DC"
    },
    "4416": {
      "offset": [
        11932,
        12038
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4417": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "4419": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4421": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4422": {
      "offset": [
        12010,
        12013
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4423": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4424": {
      "offset": [
        12010,
        12013
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "4427": {
      "offset": [
        12010,
        12013
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4428": {
      "offset": [
        12010,
        12013
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4429": {
      "offset": [
        12010,
        12013
      ],
      "op": "DIV",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4436": {
      "op": "SHL"
    },
    "4437": {
      "op": "SUB"
    },
    "4438": {
      "offset": [
        12010,
        12013
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4445": {
      "op": "SHL"
    },
    "4446": {
      "op": "SUB"
    },
    "4447": {
      "offset": [
        12010,
        12024
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4448": {
      "offset": [
        12010,
        12024
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x38CC4831"
    },
    "4453": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4455": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4456": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4457": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xFFFFFFFF"
    },
    "4462": {
      "offset": [
        12010,
        12026
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4463": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xE0"
    },
    "4465": {
      "offset": [
        12010,
        12026
      ],
      "op": "SHL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4466": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4467": {
      "offset": [
        12010,
        12026
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4468": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "4470": {
      "offset": [
        12010,
        12026
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4471": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4473": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4475": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4476": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4477": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4478": {
      "offset": [
        12010,
        12026
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4479": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4480": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4482": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4483": {
      "offset": [
        12010,
        12026
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4484": {
      "offset": [
        12010,
        12026
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4485": {
      "offset": [
        12010,
        12026
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4486": {
      "op": "DUP1"
    },
    "4487": {
      "op": "ISZERO"
    },
    "4488": {
      "op": "PUSH2",
      "value": "0x1190"
    },
    "4491": {
      "op": "JUMPI"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4494": {
      "op": "DUP1"
    },
    "4495": {
      "op": "REVERT"
    },
    "4496": {
      "op": "JUMPDEST"
    },
    "4497": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4498": {
      "offset": [
        12010,
        12026
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4499": {
      "offset": [
        12010,
        12026
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4500": {
      "offset": [
        12010,
        12026
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4501": {
      "op": "DUP1"
    },
    "4502": {
      "op": "ISZERO"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x11A4"
    },
    "4506": {
      "op": "JUMPI"
    },
    "4507": {
      "op": "RETURNDATASIZE"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4510": {
      "op": "DUP1"
    },
    "4511": {
      "op": "RETURNDATACOPY"
    },
    "4512": {
      "op": "RETURNDATASIZE"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4515": {
      "op": "REVERT"
    },
    "4516": {
      "op": "JUMPDEST"
    },
    "4517": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4518": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4519": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4520": {
      "offset": [
        12010,
        12026
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4521": {
      "offset": [
        12010,
        12026
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4523": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4524": {
      "offset": [
        12010,
        12026
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4527": {
      "op": "DUP2"
    },
    "4528": {
      "op": "LT"
    },
    "4529": {
      "op": "ISZERO"
    },
    "4530": {
      "op": "PUSH2",
      "value": "0x11BA"
    },
    "4533": {
      "op": "JUMPI"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4536": {
      "op": "DUP1"
    },
    "4537": {
      "op": "REVERT"
    },
    "4538": {
      "op": "JUMPDEST"
    },
    "4539": {
      "op": "POP"
    },
    "4540": {
      "offset": [
        12010,
        12026
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4541": {
      "offset": [
        11989,
        11997
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4543": {
      "offset": [
        11989,
        12027
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4544": {
      "offset": [
        11989,
        12027
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4551": {
      "op": "SHL"
    },
    "4552": {
      "op": "SUB"
    },
    "4553": {
      "op": "NOT"
    },
    "4554": {
      "offset": [
        11989,
        12027
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4561": {
      "op": "SHL"
    },
    "4562": {
      "op": "SUB"
    },
    "4563": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4564": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4565": {
      "offset": [
        11989,
        12027
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4566": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4567": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4568": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4569": {
      "offset": [
        11989,
        12027
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4570": {
      "offset": [
        11989,
        12027
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4571": {
      "offset": [
        11989,
        12027
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4572": {
      "offset": [
        11932,
        12038
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4573": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16081,
        16091
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 50,
      "value": "0x0"
    },
    "4575": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16102
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4576": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16102
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4577": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4579": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4584": {
      "op": "SHL"
    },
    "4585": {
      "op": "PUSH4",
      "value": "0x524F3889"
    },
    "4590": {
      "op": "MUL"
    },
    "4591": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4592": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4593": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4595": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "4597": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4598": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4599": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4600": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4601": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4602": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4603": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4604": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x24"
    },
    "4606": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4607": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4608": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4609": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4610": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4617": {
      "op": "SHL"
    },
    "4618": {
      "op": "SUB"
    },
    "4619": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16102
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4620": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16102
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4621": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16102
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4622": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16102
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4623": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16111
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x524F3889"
    },
    "4628": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16111
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4629": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16112,
        16123
      ],
      "op": "DUP10",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4630": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16112,
        16123
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4631": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4632": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4633": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x44"
    },
    "4635": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4636": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4637": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4638": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4639": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4640": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP6",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4641": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4642": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4643": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4644": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4645": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4646": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16081,
        16091
      ],
      "op": "DUP12",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4647": {
      "op": "JUMPDEST"
    },
    "4648": {
      "op": "DUP4"
    },
    "4649": {
      "op": "DUP2"
    },
    "4650": {
      "op": "LT"
    },
    "4651": {
      "op": "ISZERO"
    },
    "4652": {
      "op": "PUSH2",
      "value": "0x123F"
    },
    "4655": {
      "op": "JUMPI"
    },
    "4656": {
      "op": "DUP2"
    },
    "4657": {
      "op": "DUP2"
    },
    "4658": {
      "op": "ADD"
    },
    "4659": {
      "op": "MLOAD"
    },
    "4660": {
      "op": "DUP4"
    },
    "4661": {
      "op": "DUP3"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "MSTORE"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4666": {
      "op": "ADD"
    },
    "4667": {
      "op": "PUSH2",
      "value": "0x1227"
    },
    "4670": {
      "op": "JUMP"
    },
    "4671": {
      "op": "JUMPDEST"
    },
    "4672": {
      "op": "POP"
    },
    "4673": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4674": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4675": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4676": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4677": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4678": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4679": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4680": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4681": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4682": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1F"
    },
    "4684": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4685": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4686": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4687": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x126C"
    },
    "4690": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4691": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4692": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4693": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4694": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4695": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4696": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "4698": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4699": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4701": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4702": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "4705": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4706": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4707": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "NOT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4708": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4709": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4710": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4711": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4713": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4714": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4715": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4716": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4717": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4718": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4719": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4720": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4721": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4722": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4724": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4726": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4727": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4728": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4729": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4730": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4731": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "4733": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4734": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4735": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4736": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4737": {
      "op": "DUP1"
    },
    "4738": {
      "op": "ISZERO"
    },
    "4739": {
      "op": "PUSH2",
      "value": "0x128B"
    },
    "4742": {
      "op": "JUMPI"
    },
    "4743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4745": {
      "op": "DUP1"
    },
    "4746": {
      "op": "REVERT"
    },
    "4747": {
      "op": "JUMPDEST"
    },
    "4748": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4749": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4750": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4751": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4752": {
      "op": "DUP1"
    },
    "4753": {
      "op": "ISZERO"
    },
    "4754": {
      "op": "PUSH2",
      "value": "0x129F"
    },
    "4757": {
      "op": "JUMPI"
    },
    "4758": {
      "op": "RETURNDATASIZE"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4761": {
      "op": "DUP1"
    },
    "4762": {
      "op": "RETURNDATACOPY"
    },
    "4763": {
      "op": "RETURNDATASIZE"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4766": {
      "op": "REVERT"
    },
    "4767": {
      "op": "JUMPDEST"
    },
    "4768": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4769": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4770": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4771": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4772": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4774": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4775": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4778": {
      "op": "DUP2"
    },
    "4779": {
      "op": "LT"
    },
    "4780": {
      "op": "ISZERO"
    },
    "4781": {
      "op": "PUSH2",
      "value": "0x12B5"
    },
    "4784": {
      "op": "JUMPI"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4787": {
      "op": "DUP1"
    },
    "4788": {
      "op": "REVERT"
    },
    "4789": {
      "op": "JUMPDEST"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4792": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16094,
        16124
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16146,
        16153
      ],
      "op": "PUSH8",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xDE0B6B3A7640000"
    },
    "4803": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16170,
        16176
      ],
      "op": "PUSH3",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x30D40"
    },
    "4807": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16156,
        16167
      ],
      "op": "GASPRICE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4808": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16156,
        16176
      ],
      "op": "MUL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4809": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16146,
        16176
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4810": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16138,
        16176
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4811": {
      "branch": 83,
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16138,
        16176
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4812": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16134,
        16238
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4813": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16134,
        16238
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x12DA"
    },
    "4816": {
      "branch": 83,
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16134,
        16238
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4817": {
      "op": "POP"
    },
    "4818": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16199,
        16200
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 51,
      "value": "0x0"
    },
    "4820": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16199,
        16200
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4821": {
      "op": "POP"
    },
    "4822": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16192,
        16200
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x6FF"
    },
    "4825": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16192,
        16200
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4826": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16134,
        16238
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4827": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 52,
      "value": "0x0"
    },
    "4829": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4830": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4831": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "4833": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4838": {
      "op": "SHL"
    },
    "4839": {
      "op": "PUSH4",
      "value": "0xADF59F99"
    },
    "4844": {
      "op": "MUL"
    },
    "4845": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4846": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4847": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x4"
    },
    "4849": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4850": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4851": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4852": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4853": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4854": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x60"
    },
    "4856": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x24"
    },
    "4858": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4859": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4860": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4861": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4862": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4863": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP9",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4864": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4865": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x64"
    },
    "4867": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4868": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4869": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4870": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP9",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4871": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4878": {
      "op": "SHL"
    },
    "4879": {
      "op": "SUB"
    },
    "4880": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4881": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4882": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4883": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4884": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16268
      ],
      "op": "PUSH4",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xADF59F99"
    },
    "4889": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16268
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4890": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16275,
        16280
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4891": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16275,
        16280
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4892": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4893": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4894": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16285,
        16296
      ],
      "op": "DUP12",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4895": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16285,
        16296
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4896": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16298,
        16302
      ],
      "op": "DUP12",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4897": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16298,
        16302
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4898": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4899": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4900": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4901": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4902": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x44"
    },
    "4904": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4905": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4906": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4907": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x84"
    },
    "4909": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4910": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4911": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4912": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4913": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4915": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP8",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4916": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4917": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4918": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4919": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4920": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4921": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16262
      ],
      "op": "DUP12",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4922": {
      "op": "JUMPDEST"
    },
    "4923": {
      "op": "DUP4"
    },
    "4924": {
      "op": "DUP2"
    },
    "4925": {
      "op": "LT"
    },
    "4926": {
      "op": "ISZERO"
    },
    "4927": {
      "op": "PUSH2",
      "value": "0x1352"
    },
    "4930": {
      "op": "JUMPI"
    },
    "4931": {
      "op": "DUP2"
    },
    "4932": {
      "op": "DUP2"
    },
    "4933": {
      "op": "ADD"
    },
    "4934": {
      "op": "MLOAD"
    },
    "4935": {
      "op": "DUP4"
    },
    "4936": {
      "op": "DUP3"
    },
    "4937": {
      "op": "ADD"
    },
    "4938": {
      "op": "MSTORE"
    },
    "4939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4941": {
      "op": "ADD"
    },
    "4942": {
      "op": "PUSH2",
      "value": "0x133A"
    },
    "4945": {
      "op": "JUMP"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "POP"
    },
    "4948": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4949": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4950": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4951": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4952": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4953": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4954": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4955": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4956": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4957": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1F"
    },
    "4959": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4960": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4961": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4962": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x137F"
    },
    "4965": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4966": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4967": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4968": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4969": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4970": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4971": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "4973": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4974": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4976": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4977": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "4980": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4981": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4982": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "NOT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4983": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4984": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4985": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4986": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "4988": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4989": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4990": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4991": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4992": {
      "op": "POP"
    },
    "4993": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4994": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4995": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4996": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4997": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4998": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "4999": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5000": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5001": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5002": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5003": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5004": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5006": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5007": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5008": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5009": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5010": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP7",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5011": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5012": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5013": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5014": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5015": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5018": {
      "op": "JUMPDEST"
    },
    "5019": {
      "op": "DUP4"
    },
    "5020": {
      "op": "DUP2"
    },
    "5021": {
      "op": "LT"
    },
    "5022": {
      "op": "ISZERO"
    },
    "5023": {
      "op": "PUSH2",
      "value": "0x13B2"
    },
    "5026": {
      "op": "JUMPI"
    },
    "5027": {
      "op": "DUP2"
    },
    "5028": {
      "op": "DUP2"
    },
    "5029": {
      "op": "ADD"
    },
    "5030": {
      "op": "MLOAD"
    },
    "5031": {
      "op": "DUP4"
    },
    "5032": {
      "op": "DUP3"
    },
    "5033": {
      "op": "ADD"
    },
    "5034": {
      "op": "MSTORE"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5037": {
      "op": "ADD"
    },
    "5038": {
      "op": "PUSH2",
      "value": "0x139A"
    },
    "5041": {
      "op": "JUMP"
    },
    "5042": {
      "op": "JUMPDEST"
    },
    "5043": {
      "op": "POP"
    },
    "5044": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5045": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5046": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5047": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5048": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5049": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5050": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5051": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5052": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5053": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1F"
    },
    "5055": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5056": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5057": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5058": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x13DF"
    },
    "5061": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5062": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5063": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5064": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5065": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5066": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5067": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1"
    },
    "5069": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5070": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5072": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5073": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x100"
    },
    "5076": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "EXP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5077": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5078": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "NOT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5079": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5080": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5081": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5082": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5084": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5085": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5086": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5087": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5088": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5089": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP6",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5090": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5091": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5092": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5093": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5094": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5095": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5096": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5098": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "5100": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5101": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5102": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5103": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SUB",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5104": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5105": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP6",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5106": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP9",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5107": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5108": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5109": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5110": {
      "op": "DUP1"
    },
    "5111": {
      "op": "ISZERO"
    },
    "5112": {
      "op": "PUSH2",
      "value": "0x1400"
    },
    "5115": {
      "op": "JUMPI"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5118": {
      "op": "DUP1"
    },
    "5119": {
      "op": "REVERT"
    },
    "5120": {
      "op": "JUMPDEST"
    },
    "5121": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5122": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "GAS",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5123": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "CALL",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5124": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5125": {
      "op": "DUP1"
    },
    "5126": {
      "op": "ISZERO"
    },
    "5127": {
      "op": "PUSH2",
      "value": "0x1414"
    },
    "5130": {
      "op": "JUMPI"
    },
    "5131": {
      "op": "RETURNDATASIZE"
    },
    "5132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5134": {
      "op": "DUP1"
    },
    "5135": {
      "op": "RETURNDATACOPY"
    },
    "5136": {
      "op": "RETURNDATASIZE"
    },
    "5137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5139": {
      "op": "REVERT"
    },
    "5140": {
      "op": "JUMPDEST"
    },
    "5141": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5142": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5143": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5144": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5145": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "POP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5146": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x40"
    },
    "5148": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5149": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5152": {
      "op": "DUP2"
    },
    "5153": {
      "op": "LT"
    },
    "5154": {
      "op": "ISZERO"
    },
    "5155": {
      "op": "PUSH2",
      "value": "0x142B"
    },
    "5158": {
      "op": "JUMPI"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5161": {
      "op": "DUP1"
    },
    "5162": {
      "op": "REVERT"
    },
    "5163": {
      "op": "JUMPDEST"
    },
    "5164": {
      "op": "POP"
    },
    "5165": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5166": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        16254,
        16303
      ],
      "op": "SWAP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5167": {
      "fn": "usingOraclize.oraclize_query",
      "offset": [
        15957,
        16310
      ],
      "op": "SWAP4",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5168": {
      "op": "POP"
    },
    "5169": {
      "op": "POP"
    },
    "5170": {
      "op": "POP"
    },
    "5171": {
      "op": "POP"
    },
    "5172": {
      "fn": "usingOraclize.oraclize_query",
      "jump": "o",
      "offset": [
        15957,
        16310
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5173": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13009,
        15056
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5174": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13058,
        13074
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "5176": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13148,
        13149
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5177": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13090,
        13145
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1455"
    },
    "5180": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13102,
        13144
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1D3B2638A7CC9F2CB3D298A3DA7A90B67E5506ED"
    },
    "5201": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13090,
        13101
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "5204": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        13090,
        13145
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5205": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13090,
        13145
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5206": {
      "branch": 84,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13090,
        13149
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5207": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13086,
        13334
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5208": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13086,
        13334
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x14B7"
    },
    "5211": {
      "branch": 84,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13086,
        13334
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5212": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13175,
        13178
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 53,
      "value": "0x1"
    },
    "5214": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13175,
        13246
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5215": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13175,
        13246
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5222": {
      "op": "SHL"
    },
    "5223": {
      "op": "SUB"
    },
    "5224": {
      "op": "NOT"
    },
    "5225": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13175,
        13246
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5226": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13203,
        13245
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1D3B2638A7CC9F2CB3D298A3DA7A90B67E5506ED"
    },
    "5247": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13175,
        13246
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5248": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13175,
        13246
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5249": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13175,
        13246
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5250": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 54,
      "value": "0x40"
    },
    "5252": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5253": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5254": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5255": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5256": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5257": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5258": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5259": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5260": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xB"
    },
    "5262": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5263": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "op": "PUSH11",
      "value": "0x195D1A17DB585A5B9B995D"
    },
    "5281": {
      "op": "MUL"
    },
    "5282": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5284": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5285": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5286": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5287": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x14AF"
    },
    "5290": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5291": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13283
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x17A0"
    },
    "5294": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        13260,
        13298
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5295": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13260,
        13298
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5296": {
      "op": "POP"
    },
    "5297": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13319,
        13323
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 55,
      "value": "0x1"
    },
    "5299": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13312,
        13323
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x7FE"
    },
    "5302": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13312,
        13323
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5303": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13086,
        13334
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5304": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13405,
        13406
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "5306": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13347,
        13402
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x14D6"
    },
    "5309": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13359,
        13401
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xC03A2615D5EFAF5F49F60B7BB6583EAEC212FDF1"
    },
    "5330": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13347,
        13358
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "5333": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        13347,
        13402
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5334": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13347,
        13402
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5335": {
      "branch": 85,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13347,
        13406
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5336": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13343,
        13600
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5337": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13343,
        13600
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x153F"
    },
    "5340": {
      "branch": 85,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13343,
        13600
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5341": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13440,
        13443
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 56,
      "value": "0x1"
    },
    "5343": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13440,
        13511
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5344": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13440,
        13511
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5351": {
      "op": "SHL"
    },
    "5352": {
      "op": "SUB"
    },
    "5353": {
      "op": "NOT"
    },
    "5354": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13440,
        13511
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5355": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13468,
        13510
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xC03A2615D5EFAF5F49F60B7BB6583EAEC212FDF1"
    },
    "5376": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13440,
        13511
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5377": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13440,
        13511
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5378": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13440,
        13511
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5379": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 57,
      "value": "0x40"
    },
    "5381": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5382": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5383": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5384": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5385": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5386": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5387": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5388": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5389": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xC"
    },
    "5391": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5392": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5393": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "PUSH32",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x6574685F726F707374656E330000000000000000000000000000000000000000"
    },
    "5426": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5428": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5429": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5430": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5431": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x14AF"
    },
    "5434": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13564
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5435": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13525,
        13548
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x17A0"
    },
    "5438": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        13525,
        13564
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5439": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13343,
        13600
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5440": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13671,
        13672
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "5442": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13613,
        13668
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x155E"
    },
    "5445": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13625,
        13667
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xB7A07BCF2BA2F2703B24C0691B5278999C59AC7E"
    },
    "5466": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13613,
        13624
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "5469": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        13613,
        13668
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5470": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13613,
        13668
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5471": {
      "branch": 86,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13613,
        13672
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5472": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13609,
        13861
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5473": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13609,
        13861
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x15B6"
    },
    "5476": {
      "branch": 86,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13609,
        13861
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5477": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13704,
        13707
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 58,
      "value": "0x1"
    },
    "5479": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13704,
        13775
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5480": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13704,
        13775
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5487": {
      "op": "SHL"
    },
    "5488": {
      "op": "SUB"
    },
    "5489": {
      "op": "NOT"
    },
    "5490": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13704,
        13775
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5491": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13732,
        13774
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xB7A07BCF2BA2F2703B24C0691B5278999C59AC7E"
    },
    "5512": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13704,
        13775
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5513": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13704,
        13775
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5514": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13704,
        13775
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5515": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 59,
      "value": "0x40"
    },
    "5517": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5518": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5519": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5520": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5521": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5522": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5523": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5524": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5525": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x9"
    },
    "5527": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5528": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "5533": {
      "op": "SHL"
    },
    "5534": {
      "op": "PUSH9",
      "value": "0x32BA342FB5B7BB30B7"
    },
    "5544": {
      "op": "MUL"
    },
    "5545": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5547": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5548": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5549": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5550": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x14AF"
    },
    "5553": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13825
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5554": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13789,
        13812
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x17A0"
    },
    "5557": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        13789,
        13825
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5558": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13609,
        13861
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5559": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13932,
        13933
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "5561": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13874,
        13929
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x15D5"
    },
    "5564": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13886,
        13928
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x146500CFD35B22E4A392FE0ADC06DE1A1368ED48"
    },
    "5585": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13874,
        13885
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "5588": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        13874,
        13929
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5589": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13874,
        13929
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5590": {
      "branch": 87,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13874,
        13933
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5591": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13870,
        14126
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5592": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13870,
        14126
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x162F"
    },
    "5595": {
      "branch": 87,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13870,
        14126
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5596": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13967,
        13970
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 60,
      "value": "0x1"
    },
    "5598": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13967,
        14038
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5599": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13967,
        14038
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5606": {
      "op": "SHL"
    },
    "5607": {
      "op": "SUB"
    },
    "5608": {
      "op": "NOT"
    },
    "5609": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13967,
        14038
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5610": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13995,
        14037
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x146500CFD35B22E4A392FE0ADC06DE1A1368ED48"
    },
    "5631": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13967,
        14038
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5632": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13967,
        14038
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5633": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13967,
        14038
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5634": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 61,
      "value": "0x40"
    },
    "5636": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5637": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5638": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5639": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5640": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5641": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5642": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5643": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5644": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xB"
    },
    "5646": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5647": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5650": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5652": {
      "op": "SHL"
    },
    "5653": {
      "op": "PUSH11",
      "value": "0x6574685F72696E6B656279"
    },
    "5665": {
      "op": "MUL"
    },
    "5666": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5668": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5669": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5670": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5671": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x14AF"
    },
    "5674": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14090
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5675": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14052,
        14075
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x17A0"
    },
    "5678": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        14052,
        14090
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5679": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13870,
        14126
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5680": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14197,
        14198
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "5682": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14139,
        14194
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x164E"
    },
    "5685": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14151,
        14193
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xA2998EFD205FB9D4B4963AFB70778D6354AD3A41"
    },
    "5706": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14139,
        14150
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "5709": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        14139,
        14194
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5710": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14139,
        14194
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5711": {
      "branch": 88,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14139,
        14198
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5712": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14135,
        14389
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5713": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14135,
        14389
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x16A7"
    },
    "5716": {
      "branch": 88,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14135,
        14389
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5717": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14231,
        14234
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 62,
      "value": "0x1"
    },
    "5719": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14231,
        14302
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5720": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14231,
        14302
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "op": "SUB"
    },
    "5729": {
      "op": "NOT"
    },
    "5730": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14231,
        14302
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5731": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14259,
        14301
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xA2998EFD205FB9D4B4963AFB70778D6354AD3A41"
    },
    "5752": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14231,
        14302
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5753": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14231,
        14302
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5754": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14231,
        14302
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5755": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 63,
      "value": "0x40"
    },
    "5757": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5758": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5759": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5760": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5761": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5762": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5763": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "SWAP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5764": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5765": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xA"
    },
    "5767": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5768": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5771": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5773": {
      "op": "SHL"
    },
    "5774": {
      "op": "PUSH10",
      "value": "0x6574685F676F65726C69"
    },
    "5785": {
      "op": "MUL"
    },
    "5786": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "5788": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "DUP3",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5789": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5790": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "MSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5791": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x14AF"
    },
    "5794": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14353
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5795": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14316,
        14339
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x17A0"
    },
    "5798": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        14316,
        14353
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5799": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14135,
        14389
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5800": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14460,
        14461
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "5802": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14402,
        14457
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x16C6"
    },
    "5805": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14414,
        14456
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x6F485C8BF6FC43EA212E93BBF8CE046C7F1CB475"
    },
    "5826": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14402,
        14413
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "5829": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        14402,
        14457
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5830": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14402,
        14457
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5831": {
      "branch": 89,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14402,
        14461
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5832": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14398,
        14602
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5833": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14398,
        14602
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x16F8"
    },
    "5836": {
      "branch": 89,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14398,
        14602
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5837": {
      "op": "POP"
    },
    "5838": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14495,
        14498
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 64,
      "value": "0x1"
    },
    "5840": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14495,
        14566
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5841": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14495,
        14566
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5848": {
      "op": "SHL"
    },
    "5849": {
      "op": "SUB"
    },
    "5850": {
      "op": "NOT"
    },
    "5851": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14495,
        14566
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5852": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14523,
        14565
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x6F485C8BF6FC43EA212E93BBF8CE046C7F1CB475"
    },
    "5873": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14495,
        14566
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5874": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14495,
        14566
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5875": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14495,
        14566
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5876": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14580,
        14591
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x7FE"
    },
    "5879": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14580,
        14591
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5880": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14398,
        14602
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5881": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14673,
        14674
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "5883": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14615,
        14670
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1717"
    },
    "5886": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14627,
        14669
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20E12A1F859B3FEAE5FB2A0A32C18F5A65555BBF"
    },
    "5907": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14615,
        14626
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "5910": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        14615,
        14670
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5911": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14615,
        14670
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5912": {
      "branch": 90,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14615,
        14674
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5913": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14611,
        14814
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5914": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14611,
        14814
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1749"
    },
    "5917": {
      "branch": 90,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14611,
        14814
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5918": {
      "op": "POP"
    },
    "5919": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14707,
        14710
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 65,
      "value": "0x1"
    },
    "5921": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14707,
        14778
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5922": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14707,
        14778
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5929": {
      "op": "SHL"
    },
    "5930": {
      "op": "SUB"
    },
    "5931": {
      "op": "NOT"
    },
    "5932": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14707,
        14778
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5933": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14735,
        14777
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20E12A1F859B3FEAE5FB2A0A32C18F5A65555BBF"
    },
    "5954": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14707,
        14778
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5955": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14707,
        14778
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5956": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14707,
        14778
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5957": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14792,
        14803
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x7FE"
    },
    "5960": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14792,
        14803
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5961": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14611,
        14814
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5962": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14885,
        14886
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x0"
    },
    "5964": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14827,
        14882
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x1768"
    },
    "5967": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14839,
        14881
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x51EFAF4C8B3C9AFBD5AB9F4BBC82784AB6EF8FAA"
    },
    "5988": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14827,
        14838
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0xD4B"
    },
    "5991": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "i",
      "offset": [
        14827,
        14882
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5992": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14827,
        14882
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5993": {
      "branch": 91,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14827,
        14886
      ],
      "op": "GT",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5994": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14823,
        15028
      ],
      "op": "ISZERO",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5995": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14823,
        15028
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x179A"
    },
    "5998": {
      "branch": 91,
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14823,
        15028
      ],
      "op": "JUMPI",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "5999": {
      "op": "POP"
    },
    "6000": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14921,
        14924
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 66,
      "value": "0x1"
    },
    "6002": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14921,
        14992
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6003": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14921,
        14992
      ],
      "op": "SLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6010": {
      "op": "SHL"
    },
    "6011": {
      "op": "SUB"
    },
    "6012": {
      "op": "NOT"
    },
    "6013": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14921,
        14992
      ],
      "op": "AND",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6014": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14949,
        14991
      ],
      "op": "PUSH20",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x51EFAF4C8B3C9AFBD5AB9F4BBC82784AB6EF8FAA"
    },
    "6035": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14921,
        14992
      ],
      "op": "OR",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6036": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14921,
        14992
      ],
      "op": "DUP2",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6037": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14921,
        14992
      ],
      "op": "SSTORE",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6038": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        15006,
        15017
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x7FE"
    },
    "6041": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        15006,
        15017
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6042": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        14823,
        15028
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6043": {
      "op": "POP"
    },
    "6044": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        15044,
        15049
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 67,
      "value": "0x0"
    },
    "6046": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "offset": [
        13009,
        15056
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6047": {
      "fn": "usingOraclize.oraclize_setNetwork",
      "jump": "o",
      "offset": [
        13009,
        15056
      ],
      "op": "JUMP",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6048": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12741,
        12866
      ],
      "op": "JUMPDEST",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6049": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12859
      ],
      "op": "DUP1",
      "path": "contracts/provable/oraclize_api.sol",
      "statement": 68
    },
    "6050": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12859
      ],
      "op": "MLOAD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6051": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12859
      ],
      "op": "PUSH2",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x73D"
    },
    "6054": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12859
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6055": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12843
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x2"
    },
    "6057": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12843
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6058": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12859
      ],
      "op": "PUSH1",
      "path": "contracts/provable/oraclize_api.sol",
      "value": "0x20"
    },
    "6060": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12859
      ],
      "op": "DUP5",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6061": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12859
      ],
      "op": "ADD",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6062": {
      "fn": "usingOraclize.oraclize_setNetworkName",
      "offset": [
        12822,
        12859
      ],
      "op": "SWAP1",
      "path": "contracts/provable/oraclize_api.sol"
    },
    "6063": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6064": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6065": {
      "offset": [
        534,
        3889
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "6066": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "6068": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6069": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "6071": {
      "offset": [
        534,
        3889
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "6072": {
      "offset": [
        534,
        3889
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "6073": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x100"
    },
    "6076": {
      "offset": [
        534,
        3889
      ],
      "op": "MUL",
      "path": "contracts/IsinaBank.sol"
    },
    "6077": {
      "offset": [
        534,
        3889
      ],
      "op": "SUB",
      "path": "contracts/IsinaBank.sol"
    },
    "6078": {
      "offset": [
        534,
        3889
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "6079": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x2"
    },
    "6081": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6082": {
      "offset": [
        534,
        3889
      ],
      "op": "DIV",
      "path": "contracts/IsinaBank.sol"
    },
    "6083": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6084": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "6086": {
      "offset": [
        534,
        3889
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "6087": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "6089": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "6091": {
      "offset": [
        534,
        3889
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaBank.sol"
    },
    "6092": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6093": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1F"
    },
    "6095": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6096": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "6098": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6099": {
      "offset": [
        534,
        3889
      ],
      "op": "DIV",
      "path": "contracts/IsinaBank.sol"
    },
    "6100": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6101": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6102": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6103": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6104": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1F"
    },
    "6106": {
      "offset": [
        534,
        3889
      ],
      "op": "LT",
      "path": "contracts/IsinaBank.sol"
    },
    "6107": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x17EF"
    },
    "6110": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "6111": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6112": {
      "offset": [
        534,
        3889
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "6113": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0xFF"
    },
    "6115": {
      "offset": [
        534,
        3889
      ],
      "op": "NOT",
      "path": "contracts/IsinaBank.sol"
    },
    "6116": {
      "offset": [
        534,
        3889
      ],
      "op": "AND",
      "path": "contracts/IsinaBank.sol"
    },
    "6117": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP4",
      "path": "contracts/IsinaBank.sol"
    },
    "6118": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6119": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6120": {
      "offset": [
        534,
        3889
      ],
      "op": "OR",
      "path": "contracts/IsinaBank.sol"
    },
    "6121": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP6",
      "path": "contracts/IsinaBank.sol"
    },
    "6122": {
      "offset": [
        534,
        3889
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "6123": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x181C"
    },
    "6126": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "6127": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "6128": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6129": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6130": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6131": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "6133": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6134": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP6",
      "path": "contracts/IsinaBank.sol"
    },
    "6135": {
      "offset": [
        534,
        3889
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "6136": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6137": {
      "offset": [
        534,
        3889
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "6138": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x181C"
    },
    "6141": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "6142": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6143": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6144": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6145": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "6146": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6147": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6148": {
      "offset": [
        534,
        3889
      ],
      "op": "GT",
      "path": "contracts/IsinaBank.sol"
    },
    "6149": {
      "offset": [
        534,
        3889
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "6150": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x181C"
    },
    "6153": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "6154": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6155": {
      "offset": [
        534,
        3889
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaBank.sol"
    },
    "6156": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6157": {
      "offset": [
        534,
        3889
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "6158": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6159": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x20"
    },
    "6161": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6162": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6163": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6164": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "6166": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6167": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6168": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1801"
    },
    "6171": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "6172": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "6173": {
      "op": "POP"
    },
    "6174": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1828"
    },
    "6177": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6178": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6179": {
      "op": "POP"
    },
    "6180": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x182C"
    },
    "6183": {
      "jump": "i",
      "offset": [
        534,
        3889
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "6184": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "6185": {
      "offset": [
        534,
        3889
      ],
      "op": "POP",
      "path": "contracts/IsinaBank.sol"
    },
    "6186": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6187": {
      "jump": "o",
      "offset": [
        534,
        3889
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    },
    "6188": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "6189": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x7FE"
    },
    "6192": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6193": {
      "offset": [
        534,
        3889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6194": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaBank.sol"
    },
    "6195": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP1",
      "path": "contracts/IsinaBank.sol"
    },
    "6196": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP3",
      "path": "contracts/IsinaBank.sol"
    },
    "6197": {
      "offset": [
        534,
        3889
      ],
      "op": "GT",
      "path": "contracts/IsinaBank.sol"
    },
    "6198": {
      "offset": [
        534,
        3889
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaBank.sol"
    },
    "6199": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1828"
    },
    "6202": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaBank.sol"
    },
    "6203": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x0"
    },
    "6205": {
      "offset": [
        534,
        3889
      ],
      "op": "DUP2",
      "path": "contracts/IsinaBank.sol"
    },
    "6206": {
      "offset": [
        534,
        3889
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaBank.sol"
    },
    "6207": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1"
    },
    "6209": {
      "offset": [
        534,
        3889
      ],
      "op": "ADD",
      "path": "contracts/IsinaBank.sol"
    },
    "6210": {
      "offset": [
        534,
        3889
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaBank.sol",
      "value": "0x1832"
    },
    "6213": {
      "offset": [
        534,
        3889
      ],
      "op": "JUMP",
      "path": "contracts/IsinaBank.sol"
    }
  },
  "sha1": "53aa85e1b045351af39663f1834ebfa764fa5d90",
  "source": "pragma solidity^0.5.0;\n\n//import \"https://github.com/provable-things/ethereum-api/blob/master/oraclizeAPI_0.5.sol\";\n//import \"https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\";\n//import \"https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/math/SafeMath.sol\";\nimport \"contracts/provable/oraclize_api.sol\";\nimport \"contracts/open-zeppelin/contracts/ownership/Ownable.sol\";\nimport \"contracts/open-zeppelin/contracts/math/SafeMath.sol\";\nimport \"./IsinaToken.sol\";\n\ncontract IsinaBank is usingOraclize, Ownable {\n    using SafeMath for uint256;\n\n    uint256 constant public TIME_AFTER_12_MONTHS = 1; // 1598918400\n    uint256 constant public STOP_SELL_TIME = 99999999999999;\n\n    IsinaToken public token;\n\n    struct Queries {\n        address payable seller;\n        uint256 tokens;\n        uint256 time;\n    }\n    mapping(bytes32 => Queries) public queries;\n    mapping(address => uint256) public tokens_for_sell;\n\n    function () external payable {}\n\n    function sell_tokens() external {\n        require(tokens_for_sell[msg.sender] > 0);\n        uint256 tokens = tokens_for_sell[msg.sender];\n        tokens_for_sell[msg.sender] = 0;\n        get_ethusd_price(msg.sender, tokens);\n    }\n\n    function set_token_address(address token_address) external onlyOwner {\n        token = IsinaToken(token_address);\n    }\n\n    function send_ether(\n        address payable recipient,\n        uint256 tokens\n    )\n        public\n        returns (bool)\n    {\n        require(msg.sender == address(token));\n        get_ethusd_price(recipient, tokens);\n        return true;\n    }\n\n    function __callback(\n        bytes32 _myid,\n        string memory _result\n    )\n        public\n    {\n        require(msg.sender == oraclize_cbAddress());\n        uint256 ethusd_price = string_to_uint(_result);\n        uint256 eth_amount = get_eth_value(\n            queries[_myid].tokens,\n            ethusd_price,\n            queries[_myid].time\n        );\n        if (eth_amount > 0 && address(this).balance >= eth_amount) {\n            queries[_myid].seller.transfer(eth_amount);\n        } else {\n            tokens_for_sell[queries[_myid].seller] =\n                tokens_for_sell[queries[_myid].seller].add(\n                    queries[_myid].tokens\n                );\n        }\n    }\n\n    function get_eth_value\n    (\n        uint256 tokens,\n        uint256 ethusd_price,\n        uint256 time\n    )\n        private\n        view\n        returns (uint256 sell_eth_price)\n    {\n        uint256 usd_buy_amount = tokens.mul(3).div(10 ** 2);\n        uint256 sell_usd_price;\n        if (time < TIME_AFTER_12_MONTHS) {\n            sell_usd_price = usd_buy_amount.div(2).add(usd_buy_amount);\n        } else {\n            sell_usd_price = usd_buy_amount.mul(2);\n        }\n        sell_eth_price = sell_usd_price.div(ethusd_price);\n    }\n\n    function get_ethusd_price\n    (\n        address payable recipient,\n        uint256 tokens\n    )\n        private\n        returns (bool)\n    {\n        require(address(this).balance > oraclize_getPrice(\"URL\"));\n        require(block.timestamp < STOP_SELL_TIME);\n        bytes32 query_id = oraclize_query(\n            \"URL\",\n            \"json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price\"\n        );\n        queries[query_id].seller = recipient;\n        queries[query_id].tokens = tokens;\n        queries[query_id].time = block.timestamp;\n    }\n\n    function string_to_uint\n    (\n        string memory s\n    )\n        private\n        pure\n        returns (uint256 result)\n    {\n        bytes memory b = bytes(s);\n        uint256 i;\n        result = 0;\n        for (i = 0; i < b.length; i++) {\n            uint256 c = uint256(uint8(b[i]));\n            if (c >= 48 && c <= 57) {\n                result = result * 10 + (c - 48);\n            } else {\n                break;\n            }\n        }\n    }\n}\n",
  "sourceMap": "534:3355:0:-;;;;;658:6:3;:19;;-1:-1:-1;;;;;;658:19:3;667:10;658:19;;;;;-1:-1:-1;;;;;725:6:3;;658;;692:40;;658:6;;692:40;534:3355:0;;;;;;",
  "sourcePath": "contracts/IsinaBank.sol",
  "type": "contract"
}