{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "seed_tokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "private_tokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "get_available_team_balance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "seed_balance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "private_balance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketing",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unlock_seed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "burn_seed_tokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "UNLOCK_TIME",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "get_available_private_balance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "STOP_ALL_LOCKS_TIME",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "seed_bonus",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserve_tokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "get_available_private_bonus",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bank",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "seed_locked",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "get_available_seed_balance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "get_available_marketing_balance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send_seed_tokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "STOP_SELL_TIME",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "team",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unlock_private",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "get_available_seed_bonus",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketing_tokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "get_available_balance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer_from_bank",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send_launchpad_tokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokens_holder",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens_for_sell",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "burn_launchpad_tokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "private_locked",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "get_available_reserve_balance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "launchpad_tokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "team_tokens",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "bank_address",
          "type": "address"
        }
      ],
      "name": "set_bank",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "burn_private_tokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "private_bonus",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "send_private_tokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokens_holder",
          "type": "address"
        },
        {
          "name": "_team",
          "type": "address"
        },
        {
          "name": "_marketing",
          "type": "address"
        },
        {
          "name": "_reserve",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "allSourcePaths": [
    "contracts/IsinaToken.sol",
    "contracts/open-zeppelin/contracts/math/SafeMath.sol",
    "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
    "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
    "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
    "contracts/open-zeppelin/contracts/token/ERC20/IERC20.sol"
  ],
  "ast": {
    "absolutePath": "contracts/IsinaToken.sol",
    "exportedSymbols": {
      "IsinaToken": [
        2509
      ]
    },
    "id": 2510,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 2510,
        "sourceUnit": 3389,
        "src": "364:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 2510,
        "sourceUnit": 3447,
        "src": "430:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
        "file": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 2510,
        "sourceUnit": 2992,
        "src": "504:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IsinaBank.sol",
        "file": "./IsinaBank.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 2510,
        "sourceUnit": 2881,
        "src": "570:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3388,
              "src": "620:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3388",
                "typeString": "contract ERC20"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "620:5:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3446,
              "src": "627:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$3446",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "627:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2991,
              "src": "642:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2991",
                "typeString": "contract Ownable"
              }
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "642:7:1"
          }
        ],
        "contractDependencies": [
          2991,
          9944,
          3388,
          3446
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2509,
        "linearizedBaseContracts": [
          2509,
          2991,
          3446,
          3388,
          9944
        ],
        "name": "IsinaToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14,
            "libraryName": {
              "contractScope": null,
              "id": 12,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3579,
              "src": "662:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3579",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "656:27:1",
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "675:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 17,
            "name": "UNLOCK_TIME",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "689:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "689:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "727:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 20,
            "name": "STOP_ALL_LOCKS_TIME",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "734:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "734:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31373634353437323030",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "780:10:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1764547200_by_1",
                "typeString": "int_const 1764547200"
              },
              "value": "1764547200"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 23,
            "name": "STOP_SELL_TIME",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "810:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31373634353437323030",
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "851:10:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1764547200_by_1",
                "typeString": "int_const 1764547200"
              },
              "value": "1764547200"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 25,
            "name": "team_tokens",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "868:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "868:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 27,
            "name": "marketing_tokens",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "900:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "900:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "name": "reserve_tokens",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "937:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 28,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "937:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 31,
            "name": "seed_tokens",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "972:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "972:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 33,
            "name": "private_tokens",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1004:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1004:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 35,
            "name": "launchpad_tokens",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1039:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1039:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37,
            "name": "tokens_holder",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1077:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1077:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 39,
            "name": "team",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1111:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 38,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1111:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "name": "marketing",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1136:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1136:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 43,
            "name": "reserve",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1166:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1166:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 45,
            "name": "bank",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1195:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IsinaBank_$2880",
              "typeString": "contract IsinaBank"
            },
            "typeName": {
              "contractScope": null,
              "id": 44,
              "name": "IsinaBank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2880,
              "src": "1195:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IsinaBank_$2880",
                "typeString": "contract IsinaBank"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 49,
            "name": "seed_balance",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1223:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 48,
              "keyType": {
                "id": 46,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1231:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1223:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 47,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1242:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 53,
            "name": "private_balance",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1276:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1284:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1276:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 51,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1295:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 57,
            "name": "seed_bonus",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1332:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 56,
              "keyType": {
                "id": 54,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1340:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1332:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 55,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1351:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 61,
            "name": "private_bonus",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1383:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 60,
              "keyType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1391:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1383:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 59,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1402:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 65,
            "name": "seed_locked",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1437:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 64,
              "keyType": {
                "id": 62,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1445:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1437:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 63,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1456:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 69,
            "name": "private_locked",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1486:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 68,
              "keyType": {
                "id": 66,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1494:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1486:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 67,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1505:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 73,
            "name": "tokens_for_sell",
            "nodeType": "VariableDeclaration",
            "scope": 2509,
            "src": "1538:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1546:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1538:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1557:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "1625:132:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 76,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9959,
                            "src": "1656:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1656:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 78,
                          "name": "tokens_holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1670:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1656:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206d757374206265206120746f6b656e7320686f6c646572",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1697:32:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5baf116273111abba32f02376c185039499ca32548f6562e40d5a42b2fff5332",
                          "typeString": "literal_string \"Sender must be a tokens holder\""
                        },
                        "value": "Sender must be a tokens holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5baf116273111abba32f02376c185039499ca32548f6562e40d5a42b2fff5332",
                          "typeString": "literal_string \"Sender must be a tokens holder\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "1635:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:104:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:104:1"
                },
                {
                  "id": 83,
                  "nodeType": "PlaceholderStatement",
                  "src": "1749:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "name": "only_tokens_holder",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1622:2:1"
            },
            "src": "1595:162:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1792:149:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 88,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "1823:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1823:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "UNLOCK_TIME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1842:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1823:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652074696d65206d757374206265206c6f6e676572207468616e2074686520756e6c6f636b2074696d65",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1867:46:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_069463dbeeb603b47a52166ffd3bfe80f0d431387129715bc7d8587cb63a1723",
                          "typeString": "literal_string \"The time must be longer than the unlock time\""
                        },
                        "value": "The time must be longer than the unlock time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_069463dbeeb603b47a52166ffd3bfe80f0d431387129715bc7d8587cb63a1723",
                          "typeString": "literal_string \"The time must be longer than the unlock time\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "1802:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1802:121:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1802:121:1"
                },
                {
                  "id": 95,
                  "nodeType": "PlaceholderStatement",
                  "src": "1933:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "name": "after_unlock_time",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:1"
            },
            "src": "1763:178:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 225,
              "nodeType": "Block",
              "src": "2141:715:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "tokens_holder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2151:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 114,
                      "name": "_tokens_holder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2167:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2151:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 117,
                      "name": "seed_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2191:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "313032323033313030",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2205:9:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_102203100_by_1",
                          "typeString": "int_const 102203100"
                        },
                        "value": "102203100"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2218:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 121,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3445,
                                    "src": "2232:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2232:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2224:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2224:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2218:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 125,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2217:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2205:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2191:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "2191:53:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 129,
                      "name": "private_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "2254:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "313633353234393630",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2271:9:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_163524960_by_1",
                          "typeString": "int_const 163524960"
                        },
                        "value": "163524960"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2284:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 133,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3445,
                                    "src": "2298:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2298:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2290:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2290:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2284:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 137,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2283:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2271:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2254:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "launchpad_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2320:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3831373632343830",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2339:8:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_81762480_by_1",
                          "typeString": "int_const 81762480"
                        },
                        "value": "81762480"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2351:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 145,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3445,
                                    "src": "2365:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2365:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2357:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2357:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2351:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 149,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2350:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2339:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2320:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 154,
                        "name": "tokens_holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "2393:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 155,
                            "name": "seed_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "2408:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "private_tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2422:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2408:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 158,
                          "name": "launchpad_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "2439:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2408:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 153,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3274,
                      "src": "2387:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2387:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:69:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "team",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "2466:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 163,
                      "name": "_team",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2473:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2466:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 166,
                      "name": "team_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "2488:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3238363136383638",
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2502:8:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_28616868_by_1",
                          "typeString": "int_const 28616868"
                        },
                        "value": "28616868"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2514:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 170,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3445,
                                    "src": "2528:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2528:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2520:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2520:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2514:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 174,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2513:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2502:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2488:52:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:52:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 179,
                        "name": "team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "2556:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "team_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2562:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 178,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3274,
                      "src": "2550:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2550:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 183,
                      "name": "marketing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2584:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "_marketing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "2596:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2584:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:22:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "marketing_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2616:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "34303838313234",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2635:7:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4088124_by_1",
                          "typeString": "int_const 4088124"
                        },
                        "value": "4088124"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2646:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 191,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3445,
                                    "src": "2660:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2660:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2652:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2652:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2646:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 195,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2645:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2635:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2616:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "2616:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 200,
                        "name": "marketing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "2688:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "marketing_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2699:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 199,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3274,
                      "src": "2682:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 204,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "2726:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 205,
                      "name": "_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "2736:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2726:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:18:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 208,
                      "name": "reserve_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "2754:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3238363136383638",
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2771:8:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_28616868_by_1",
                          "typeString": "int_const 28616868"
                        },
                        "value": "28616868"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2783:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 212,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3445,
                                    "src": "2797:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2797:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2789:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2789:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2783:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 216,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2782:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2771:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2754:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "2825:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "reserve_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2834:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 220,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3274,
                      "src": "2819:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 224,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 226,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4973696e6120546f6b656e",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2111:13:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_143b16a554c8062d3689c421c9a442551b95f33ae9957cd13c4ea214964498f8",
                      "typeString": "literal_string \"Isina Token\""
                    },
                    "value": "Isina Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "49534e",
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2126:5:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_527177b56494ff754727b1d9b2ef3eeccfad87061a7dd5e3bacf880af3dafdcb",
                      "typeString": "literal_string \"ISN\""
                    },
                    "value": "ISN"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2133:2:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 111,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 107,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3446,
                  "src": "2097:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$3446_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2097:39:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "_tokens_holder",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "1968:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "name": "_team",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "2000:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "name": "_marketing",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "2023:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2023:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "name": "_reserve",
                  "nodeType": "VariableDeclaration",
                  "scope": 226,
                  "src": "2051:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1958:115:1"
            },
            "returnParameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:1"
            },
            "scope": 2509,
            "src": "1947:909:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "2986:66:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 239,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "3020:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IsinaBank_$2880",
                              "typeString": "contract IsinaBank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IsinaBank_$2880",
                              "typeString": "contract IsinaBank"
                            }
                          ],
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3012:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3012:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 241,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "3027:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "3038:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 235,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9996,
                        "src": "2996:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_IsinaToken_$2509",
                          "typeString": "contract super IsinaToken"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3231,
                      "src": "2996:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:49:1"
                }
              ]
            },
            "documentation": null,
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 233,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 232,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2924,
                  "src": "2972:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2972:9:1"
              }
            ],
            "name": "transfer_from_bank",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2899:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "2926:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2926:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2889:57:1"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2986:0:1"
            },
            "scope": 2509,
            "src": "2862:190:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "3108:741:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "seed_locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "3139:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 255,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 253,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9959,
                            "src": "3151:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3151:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3139:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e73206d75737420626520756e6c6f636b6564",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3176:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e167375b5a65fb7cdb3221373988165b3ed26094f0e1b8719bc276687998c2a",
                          "typeString": "literal_string \"Tokens must be unlocked\""
                        },
                        "value": "Tokens must be unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e167375b5a65fb7cdb3221373988165b3ed26094f0e1b8719bc276687998c2a",
                          "typeString": "literal_string \"Tokens must be unlocked\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "3118:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3118:93:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3118:93:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 260,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "3242:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3242:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 262,
                          "name": "STOP_SELL_TIME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "3260:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3242:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652074696d65206d757374206265206c657373207468616e207468652073746f702073656c6c2074696d65",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3288:47:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0b3061581107db8ce05c91c1aa699b00a8458c8fd95d8d5bbc4de2bd202c266",
                          "typeString": "literal_string \"The time must be less than the stop sell time\""
                        },
                        "value": "The time must be less than the stop sell time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0b3061581107db8ce05c91c1aa699b00a8458c8fd95d8d5bbc4de2bd202c266",
                          "typeString": "literal_string \"The time must be less than the stop sell time\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "3221:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3221:124:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "3221:124:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 267,
                        "name": "seed_locked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "3355:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "3367:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3367:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3355:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3381:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3355:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "3355:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 274,
                        "name": "tokens_for_sell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "3396:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 277,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 275,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "3412:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3412:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3396:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 289,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9959,
                                    "src": "3544:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3544:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 288,
                                "name": "get_available_seed_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1716,
                                "src": "3517:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3517:38:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 283,
                                "name": "seed_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "3471:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 286,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 284,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9959,
                                  "src": "3484:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3484:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3471:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3498,
                            "src": "3471:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:98:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "tokens_for_sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "3426:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 281,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 279,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9959,
                              "src": "3442:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3442:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3426:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3473,
                        "src": "3426:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3426:153:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3396:183:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:183:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 296,
                        "name": "seed_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "3589:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 299,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 297,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "3602:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3602:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3589:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3616:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3589:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "3589:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 303,
                        "name": "tokens_for_sell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "3627:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 306,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "3643:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3643:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3627:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 318,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9959,
                                    "src": "3771:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3771:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 317,
                                "name": "get_available_seed_bonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2212,
                                "src": "3746:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 320,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3746:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 312,
                                "name": "seed_bonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57,
                                "src": "3702:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 315,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 313,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9959,
                                  "src": "3713:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3713:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3702:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3498,
                            "src": "3702:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3702:94:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "tokens_for_sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "3657:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 310,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 308,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9959,
                              "src": "3673:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3673:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3657:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3473,
                        "src": "3657:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3657:149:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3627:179:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:179:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 325,
                        "name": "seed_bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "3816:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 328,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "3827:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3827:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3816:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3841:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3816:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3816:26:1"
                }
              ]
            },
            "documentation": null,
            "id": 333,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 249,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 248,
                  "name": "after_unlock_time",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 97,
                  "src": "3090:17:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3090:17:1"
              }
            ],
            "name": "unlock_seed",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3078:2:1"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:0:1"
            },
            "scope": 2509,
            "src": "3058:791:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "3908:765:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 339,
                          "name": "private_locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "3939:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 342,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 340,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9959,
                            "src": "3954:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3954:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3939:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e73206d75737420626520756e6c6f636b6564",
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3979:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e167375b5a65fb7cdb3221373988165b3ed26094f0e1b8719bc276687998c2a",
                          "typeString": "literal_string \"Tokens must be unlocked\""
                        },
                        "value": "Tokens must be unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e167375b5a65fb7cdb3221373988165b3ed26094f0e1b8719bc276687998c2a",
                          "typeString": "literal_string \"Tokens must be unlocked\""
                        }
                      ],
                      "id": 338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "3918:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3918:96:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "3918:96:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 347,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "4045:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4045:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 349,
                          "name": "STOP_SELL_TIME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "4063:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4045:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652074696d65206d757374206265206c657373207468616e207468652073746f702073656c6c2074696d65",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4091:47:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0b3061581107db8ce05c91c1aa699b00a8458c8fd95d8d5bbc4de2bd202c266",
                          "typeString": "literal_string \"The time must be less than the stop sell time\""
                        },
                        "value": "The time must be less than the stop sell time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0b3061581107db8ce05c91c1aa699b00a8458c8fd95d8d5bbc4de2bd202c266",
                          "typeString": "literal_string \"The time must be less than the stop sell time\""
                        }
                      ],
                      "id": 346,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "4024:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4024:124:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4024:124:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "private_locked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "4158:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 357,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 355,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "4173:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4173:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4158:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4187:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4158:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "4158:34:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 361,
                        "name": "tokens_for_sell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "4202:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 364,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 362,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "4218:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4218:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4202:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 376,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9959,
                                    "src": "4356:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4356:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 375,
                                "name": "get_available_private_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2009,
                                "src": "4326:29:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4326:41:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 370,
                                "name": "private_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "4277:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 373,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 371,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9959,
                                  "src": "4293:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4293:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4277:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3498,
                            "src": "4277:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4277:104:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 365,
                            "name": "tokens_for_sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "4232:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 368,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 366,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9959,
                              "src": "4248:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4248:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4232:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3473,
                        "src": "4232:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4232:159:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4202:189:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "4202:189:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "private_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "4401:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 386,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 384,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "4417:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4417:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4401:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4431:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4401:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "4401:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 390,
                        "name": "tokens_for_sell",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "4442:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 393,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "4458:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4458:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4442:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 405,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9959,
                                    "src": "4592:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4592:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 404,
                                "name": "get_available_private_bonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2426,
                                "src": "4564:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4564:39:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 399,
                                "name": "private_bonus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 61,
                                "src": "4517:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 402,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 400,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9959,
                                  "src": "4531:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4531:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4517:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3498,
                            "src": "4517:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4517:100:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 394,
                            "name": "tokens_for_sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "4472:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 397,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 395,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9959,
                              "src": "4488:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4488:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4472:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3473,
                        "src": "4472:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4472:155:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4442:185:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "4442:185:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "private_bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "4637:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 415,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "4651:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4651:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4637:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4665:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4637:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "4637:29:1"
                }
              ]
            },
            "documentation": null,
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 336,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 335,
                  "name": "after_unlock_time",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 97,
                  "src": "3890:17:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3890:17:1"
              }
            ],
            "name": "unlock_private",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3878:2:1"
            },
            "returnParameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3908:0:1"
            },
            "scope": 2509,
            "src": "3855:818:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 434,
              "nodeType": "Block",
              "src": "4735:75:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "tokens_holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4751:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "seed_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "4766:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 425,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3317,
                      "src": "4745:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4745:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "4745:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 430,
                      "name": "seed_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "4788:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4802:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4788:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4788:15:1"
                }
              ]
            },
            "documentation": null,
            "id": 435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 423,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 422,
                  "name": "only_tokens_holder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 85,
                  "src": "4716:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4716:18:1"
              }
            ],
            "name": "burn_seed_tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4704:2:1"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4735:0:1"
            },
            "scope": 2509,
            "src": "4679:131:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "4875:81:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "tokens_holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4891:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "private_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4906:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 440,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3317,
                      "src": "4885:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4885:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "4885:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 445,
                      "name": "private_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "4931:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4948:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4931:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "4931:18:1"
                }
              ]
            },
            "documentation": null,
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 438,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 437,
                  "name": "only_tokens_holder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 85,
                  "src": "4856:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4856:18:1"
              }
            ],
            "name": "burn_private_tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4844:2:1"
            },
            "returnParameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4875:0:1"
            },
            "scope": 2509,
            "src": "4816:140:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "5023:85:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "tokens_holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "5039:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 457,
                        "name": "launchpad_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "5054:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 455,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3317,
                      "src": "5033:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 460,
                      "name": "launchpad_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "5081:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5100:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5081:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "5081:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 465,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 453,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 452,
                  "name": "only_tokens_holder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 85,
                  "src": "5004:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5004:18:1"
              }
            ],
            "name": "burn_launchpad_tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4992:2:1"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5023:0:1"
            },
            "scope": 2509,
            "src": "4962:146:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "5181:47:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 472,
                      "name": "bank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "5191:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IsinaBank_$2880",
                        "typeString": "contract IsinaBank"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 474,
                          "name": "bank_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "5208:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 473,
                        "name": "IsinaBank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2880,
                        "src": "5198:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IsinaBank_$2880_$",
                          "typeString": "type(contract IsinaBank)"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5198:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IsinaBank_$2880",
                        "typeString": "contract IsinaBank"
                      }
                    },
                    "src": "5191:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IsinaBank_$2880",
                      "typeString": "contract IsinaBank"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "5191:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 470,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 469,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2924,
                  "src": "5171:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5171:9:1"
              }
            ],
            "name": "set_bank",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 467,
                  "name": "bank_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5132:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5132:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5131:30:1"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5181:0:1"
            },
            "scope": 2509,
            "src": "5114:114:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "5351:78:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 489,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "5371:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5371:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 491,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "5383:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 492,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "5394:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 488,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2508
                      ],
                      "referencedDeclaration": 2508,
                      "src": "5361:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5361:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "5361:40:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5418:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 487,
                  "id": 496,
                  "nodeType": "Return",
                  "src": "5411:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "5261:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 483,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "5288:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5288:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5251:57:1"
            },
            "returnParameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "5341:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5341:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5340:6:1"
            },
            "scope": 2509,
            "src": "5234:195:1",
            "stateMutability": "nonpayable",
            "superFunction": 3051,
            "visibility": "public"
          },
          {
            "body": {
              "id": 531,
              "nodeType": "Block",
              "src": "5580:201:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 510,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "5600:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 511,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "5608:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 512,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "5619:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 509,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2508
                      ],
                      "referencedDeclaration": 2508,
                      "src": "5590:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5590:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 514,
                  "nodeType": "ExpressionStatement",
                  "src": "5590:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 516,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "5658:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 517,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9959,
                          "src": "5678:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5678:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 525,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "5736:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 520,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 500,
                                "src": "5712:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 521,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9959,
                                  "src": "5720:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5720:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 519,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3067,
                              "src": "5702:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5702:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3498,
                          "src": "5702:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5702:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 515,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3359,
                      "src": "5636:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5636:117:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "5636:117:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5770:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 508,
                  "id": 530,
                  "nodeType": "Return",
                  "src": "5763:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 500,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "5466:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "5490:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5490:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "5517:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5517:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5456:81:1"
            },
            "returnParameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 532,
                  "src": "5570:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5570:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5569:6:1"
            },
            "scope": 2509,
            "src": "5435:346:1",
            "stateMutability": "nonpayable",
            "superFunction": 3121,
            "visibility": "public"
          },
          {
            "body": {
              "id": 607,
              "nodeType": "Block",
              "src": "5939:487:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 544,
                          "name": "seed_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "5970:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5984:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5970:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e7320617265206f766572206f722073616c6520697320656e646564",
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5999:34:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f855291caf3e96b1ff3acd616613853a7419367524935b813f72d996d778f25",
                          "typeString": "literal_string \"Tokens are over or sale is ended\""
                        },
                        "value": "Tokens are over or sale is ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f855291caf3e96b1ff3acd616613853a7419367524935b813f72d996d778f25",
                          "typeString": "literal_string \"Tokens are over or sale is ended\""
                        }
                      ],
                      "id": 543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "5949:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5949:94:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "5949:94:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 550,
                        "name": "seed_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "6053:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 552,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 551,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6066:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6053:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 557,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "6107:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 553,
                            "name": "seed_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49,
                            "src": "6079:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 555,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 554,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6092:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6079:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3473,
                        "src": "6079:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6079:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6053:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "6053:61:1"
                },
                {
                  "assignments": [
                    562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 562,
                      "name": "bonus_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 607,
                      "src": "6124:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6124:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 570,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6168:5:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31343936",
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6158:4:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1496_by_1",
                              "typeString": "int_const 1496"
                            },
                            "value": "1496"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1496_by_1",
                              "typeString": "int_const 1496"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 563,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "6147:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3532,
                          "src": "6147:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6147:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3557,
                      "src": "6147:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6147:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6124:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 571,
                        "name": "seed_bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "6184:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 573,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 572,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6195:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6184:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 578,
                          "name": "bonus_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "6234:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 574,
                            "name": "seed_bonus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "6208:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 576,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 575,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6219:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6208:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3473,
                        "src": "6208:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6208:39:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6184:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "6184:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 582,
                        "name": "seed_locked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "6257:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 584,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 583,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6269:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6257:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6282:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6257:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "6257:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 588,
                      "name": "seed_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "6296:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "bonus_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "6338:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 591,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "6326:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 589,
                              "name": "seed_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31,
                              "src": "6310:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3498,
                            "src": "6310:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6310:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3498,
                        "src": "6310:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6310:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6296:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "6296:55:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 600,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6383:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 603,
                            "name": "bonus_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "6405:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 601,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "6394:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3473,
                          "src": "6394:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6394:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9996,
                        "src": "6368:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_IsinaToken_$2509",
                          "typeString": "contract super IsinaToken"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3051,
                      "src": "6368:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6368:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 542,
                  "id": 606,
                  "nodeType": "Return",
                  "src": "6361:58:1"
                }
              ]
            },
            "documentation": null,
            "id": 608,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 539,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 538,
                  "name": "only_tokens_holder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 85,
                  "src": "5893:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5893:18:1"
              }
            ],
            "name": "send_seed_tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "5822:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5822:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "5849:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5849:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5812:57:1"
            },
            "returnParameters": {
              "id": 542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 608,
                  "src": "5929:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5929:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5928:6:1"
            },
            "scope": 2509,
            "src": "5787:639:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 683,
              "nodeType": "Block",
              "src": "6587:508:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 620,
                          "name": "private_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "6618:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6635:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6618:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e7320617265206f766572206f722073616c6520697320656e646564",
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6650:34:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f855291caf3e96b1ff3acd616613853a7419367524935b813f72d996d778f25",
                          "typeString": "literal_string \"Tokens are over or sale is ended\""
                        },
                        "value": "Tokens are over or sale is ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f855291caf3e96b1ff3acd616613853a7419367524935b813f72d996d778f25",
                          "typeString": "literal_string \"Tokens are over or sale is ended\""
                        }
                      ],
                      "id": 619,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "6597:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6597:97:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "6597:97:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 626,
                        "name": "private_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "6704:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 628,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 627,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "6720:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6704:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 633,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "6764:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 629,
                            "name": "private_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "6733:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 631,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 630,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "6749:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6733:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3473,
                        "src": "6733:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6733:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6704:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "6704:67:1"
                },
                {
                  "assignments": [
                    638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 638,
                      "name": "bonus_amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 683,
                      "src": "6781:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6781:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 646,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030",
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6823:4:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3939",
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6815:2:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_99_by_1",
                              "typeString": "int_const 99"
                            },
                            "value": "99"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_99_by_1",
                              "typeString": "int_const 99"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 639,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "6804:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3532,
                          "src": "6804:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6804:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3557,
                      "src": "6804:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6804:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6781:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 647,
                        "name": "private_bonus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "6838:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 649,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "6852:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6838:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 654,
                          "name": "bonus_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "6894:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 650,
                            "name": "private_bonus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "6865:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 652,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 651,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "6879:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6865:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3473,
                        "src": "6865:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6865:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6838:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "6838:69:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "private_locked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "6917:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 660,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "6932:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6917:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6945:4:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6917:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "6917:32:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 664,
                      "name": "private_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "6959:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 670,
                          "name": "bonus_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 638,
                          "src": "7007:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 667,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 612,
                              "src": "6995:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 665,
                              "name": "private_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "6976:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3498,
                            "src": "6976:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6976:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3498,
                        "src": "6976:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6976:44:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6959:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 673,
                  "nodeType": "ExpressionStatement",
                  "src": "6959:61:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 676,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "7052:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 679,
                            "name": "bonus_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "7074:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 677,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "7063:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3473,
                          "src": "7063:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7063:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 674,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9996,
                        "src": "7037:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_IsinaToken_$2509",
                          "typeString": "contract super IsinaToken"
                        }
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3051,
                      "src": "7037:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7037:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 618,
                  "id": 682,
                  "nodeType": "Return",
                  "src": "7030:58:1"
                }
              ]
            },
            "documentation": null,
            "id": 684,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 615,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 614,
                  "name": "only_tokens_holder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 85,
                  "src": "6541:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6541:18:1"
              }
            ],
            "name": "send_private_tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "6470:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6470:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 612,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "6497:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6497:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6460:57:1"
            },
            "returnParameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "6577:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6576:6:1"
            },
            "scope": 2509,
            "src": "6432:663:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 715,
              "nodeType": "Block",
              "src": "7258:223:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 696,
                          "name": "launchpad_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "7289:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7308:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7289:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e7320617265206f766572206f722073616c6520697320656e646564",
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7323:34:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f855291caf3e96b1ff3acd616613853a7419367524935b813f72d996d778f25",
                          "typeString": "literal_string \"Tokens are over or sale is ended\""
                        },
                        "value": "Tokens are over or sale is ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f855291caf3e96b1ff3acd616613853a7419367524935b813f72d996d778f25",
                          "typeString": "literal_string \"Tokens are over or sale is ended\""
                        }
                      ],
                      "id": 695,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9962,
                        9963
                      ],
                      "referencedDeclaration": 9963,
                      "src": "7268:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7268:99:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "7268:99:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 702,
                      "name": "launchpad_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "7377:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 705,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 688,
                          "src": "7417:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 703,
                          "name": "launchpad_tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "7396:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3498,
                        "src": "7396:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7396:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7377:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "7377:47:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 711,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "7456:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 712,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "7467:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 709,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9996,
                        "src": "7441:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_IsinaToken_$2509",
                          "typeString": "contract super IsinaToken"
                        }
                      },
                      "id": 710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3051,
                      "src": "7441:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7441:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 694,
                  "id": 714,
                  "nodeType": "Return",
                  "src": "7434:40:1"
                }
              ]
            },
            "documentation": null,
            "id": 716,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 691,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 690,
                  "name": "only_tokens_holder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 85,
                  "src": "7212:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7212:18:1"
              }
            ],
            "name": "send_launchpad_tokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 686,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "7141:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7141:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 688,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "7168:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7168:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7131:57:1"
            },
            "returnParameters": {
              "id": 694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "7248:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7248:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7247:6:1"
            },
            "scope": 2509,
            "src": "7101:380:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 855,
              "nodeType": "Block",
              "src": "7606:1677:1",
              "statements": [
                {
                  "assignments": [
                    724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 724,
                      "name": "available_balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 855,
                      "src": "7616:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 728,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 726,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 718,
                        "src": "7654:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 725,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3032,
                      "src": "7644:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7644:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7616:45:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 729,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "7675:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 730,
                      "name": "team",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "7685:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7675:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 744,
                  "nodeType": "IfStatement",
                  "src": "7671:201:1",
                  "trueBody": {
                    "id": 743,
                    "nodeType": "Block",
                    "src": "7691:181:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 732,
                            "name": "available_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "7705:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 737,
                                      "name": "get_available_team_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1055,
                                      "src": "7801:26:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7801:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 735,
                                    "name": "team_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "7764:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 736,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3498,
                                  "src": "7764:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7764:83:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 733,
                                "name": "available_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "7725:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3498,
                              "src": "7725:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7725:136:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7705:156:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 742,
                        "nodeType": "ExpressionStatement",
                        "src": "7705:156:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 745,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "7885:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 746,
                      "name": "marketing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "7895:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7885:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 760,
                  "nodeType": "IfStatement",
                  "src": "7881:216:1",
                  "trueBody": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "7906:191:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 748,
                            "name": "available_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "7920:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 753,
                                      "name": "get_available_marketing_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1240,
                                      "src": "8021:31:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 754,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8021:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 751,
                                    "name": "marketing_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "7979:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 752,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3498,
                                  "src": "7979:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7979:93:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 749,
                                "name": "available_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "7940:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3498,
                              "src": "7940:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7940:146:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7920:166:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 758,
                        "nodeType": "ExpressionStatement",
                        "src": "7920:166:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 761,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "8110:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 762,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "8120:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8110:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 776,
                  "nodeType": "IfStatement",
                  "src": "8106:222:1",
                  "trueBody": {
                    "id": 775,
                    "nodeType": "Block",
                    "src": "8129:199:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 764,
                            "name": "available_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "8143:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 769,
                                      "name": "get_available_reserve_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1439,
                                      "src": "8250:29:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 770,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8250:31:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 767,
                                    "name": "reserve_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "8206:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3498,
                                  "src": "8206:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8206:97:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 765,
                                "name": "available_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "8163:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3498,
                              "src": "8163:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8163:154:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8143:174:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 774,
                        "nodeType": "ExpressionStatement",
                        "src": "8143:174:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "seed_locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "8341:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 779,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 778,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "8353:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8341:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 809,
                  "nodeType": "IfStatement",
                  "src": "8337:402:1",
                  "trueBody": {
                    "id": 808,
                    "nodeType": "Block",
                    "src": "8362:377:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 780,
                            "name": "available_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "8376:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 788,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 718,
                                        "src": "8508:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 787,
                                      "name": "get_available_seed_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1716,
                                      "src": "8481:26:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 789,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8481:34:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 783,
                                      "name": "seed_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49,
                                      "src": "8435:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 785,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 784,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 718,
                                      "src": "8448:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8435:20:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3498,
                                  "src": "8435:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8435:98:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 781,
                                "name": "available_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "8396:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3498,
                              "src": "8396:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8396:151:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8376:171:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 793,
                        "nodeType": "ExpressionStatement",
                        "src": "8376:171:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 794,
                            "name": "available_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "8561:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 802,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 718,
                                        "src": "8689:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 801,
                                      "name": "get_available_seed_bonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2212,
                                      "src": "8664:24:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 803,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8664:32:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 797,
                                      "name": "seed_bonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57,
                                      "src": "8620:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 799,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 798,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 718,
                                      "src": "8631:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8620:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3498,
                                  "src": "8620:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8620:94:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 795,
                                "name": "available_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "8581:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3498,
                              "src": "8581:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8581:147:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8561:167:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 807,
                        "nodeType": "ExpressionStatement",
                        "src": "8561:167:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 810,
                      "name": "private_locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "8752:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 812,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 811,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "8767:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8752:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 842,
                  "nodeType": "IfStatement",
                  "src": "8748:417:1",
                  "trueBody": {
                    "id": 841,
                    "nodeType": "Block",
                    "src": "8776:389:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 813,
                            "name": "available_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "8790:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 821,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 718,
                                        "src": "8928:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 820,
                                      "name": "get_available_private_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2009,
                                      "src": "8898:29:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 822,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8898:37:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 816,
                                      "name": "private_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53,
                                      "src": "8849:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 818,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 817,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 718,
                                      "src": "8865:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8849:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3498,
                                  "src": "8849:27:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8849:104:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 814,
                                "name": "available_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "8810:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3498,
                              "src": "8810:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8810:157:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8790:177:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 826,
                        "nodeType": "ExpressionStatement",
                        "src": "8790:177:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 827,
                            "name": "available_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "8981:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 835,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 718,
                                        "src": "9115:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 834,
                                      "name": "get_available_private_bonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2426,
                                      "src": "9087:27:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view returns (uint256)"
                                      }
                                    },
                                    "id": 836,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9087:35:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 830,
                                      "name": "private_bonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 61,
                                      "src": "9040:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 832,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 831,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 718,
                                      "src": "9054:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9040:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 833,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3498,
                                  "src": "9040:25:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9040:100:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 828,
                                "name": "available_balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 724,
                                "src": "9001:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3498,
                              "src": "9001:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9001:153:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8981:173:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 840,
                        "nodeType": "ExpressionStatement",
                        "src": "8981:173:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 843,
                      "name": "available_balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "9174:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 846,
                            "name": "tokens_for_sell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "9216:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 848,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 847,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "9232:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9216:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 844,
                          "name": "available_balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "9194:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3498,
                        "src": "9194:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9194:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9174:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 851,
                  "nodeType": "ExpressionStatement",
                  "src": "9174:66:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 852,
                        "name": "available_balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 724,
                        "src": "9258:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 853,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9257:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 722,
                  "id": 854,
                  "nodeType": "Return",
                  "src": "9250:26:1"
                }
              ]
            },
            "documentation": null,
            "id": 856,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_available_balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "7527:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7527:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7517:30:1"
            },
            "returnParameters": {
              "id": 722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 856,
                  "src": "7593:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7593:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7592:9:1"
            },
            "scope": 2509,
            "src": "7487:1796:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1054,
              "nodeType": "Block",
              "src": "9385:1628:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 861,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "9399:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9399:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31353930393639363030",
                      "id": 863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9417:10:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1590969600_by_1",
                        "typeString": "int_const 1590969600"
                      },
                      "value": "1590969600"
                    },
                    "src": "9399:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 868,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9949,
                          "src": "9486:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9486:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31363134353536383030",
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9504:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1614556800_by_1",
                          "typeString": "int_const 1614556800"
                        },
                        "value": "1614556800"
                      },
                      "src": "9486:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 881,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "9600:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9600:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31363436303932383030",
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9618:10:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1646092800_by_1",
                            "typeString": "int_const 1646092800"
                          },
                          "value": "1646092800"
                        },
                        "src": "9600:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 894,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9949,
                              "src": "9714:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9714:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31363639383532383030",
                            "id": 896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9732:10:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1669852800_by_1",
                              "typeString": "int_const 1669852800"
                            },
                            "value": "1669852800"
                          },
                          "src": "9714:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 907,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9949,
                                "src": "9828:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9828:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31363737363238383030",
                              "id": 909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9846:10:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1677628800_by_1",
                                "typeString": "int_const 1677628800"
                              },
                              "value": "1677628800"
                            },
                            "src": "9828:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 920,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9949,
                                  "src": "9942:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "9942:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31363930383438303030",
                                "id": 922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9960:10:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1690848000_by_1",
                                  "typeString": "int_const 1690848000"
                                },
                                "value": "1690848000"
                              },
                              "src": "9942:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 933,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9949,
                                    "src": "10056:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10056:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31373036373435363030",
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10074:10:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1706745600_by_1",
                                    "typeString": "int_const 1706745600"
                                  },
                                  "value": "1706745600"
                                },
                                "src": "10056:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 949,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 946,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9949,
                                      "src": "10170:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 947,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "10170:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31373131393239363030",
                                    "id": 948,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10188:10:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1711929600_by_1",
                                      "typeString": "int_const 1711929600"
                                    },
                                    "value": "1711929600"
                                  },
                                  "src": "10170:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 959,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9949,
                                        "src": "10284:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 960,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "10284:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31373232343730343030",
                                      "id": 961,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10302:10:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1722470400_by_1",
                                        "typeString": "int_const 1722470400"
                                      },
                                      "value": "1722470400"
                                    },
                                    "src": "10284:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 975,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 972,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9949,
                                          "src": "10398:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 973,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "10398:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31373237373430383030",
                                        "id": 974,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10416:10:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1727740800_by_1",
                                          "typeString": "int_const 1727740800"
                                        },
                                        "value": "1727740800"
                                      },
                                      "src": "10398:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 988,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 985,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9949,
                                            "src": "10512:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 986,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "10512:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31373333303131323030",
                                          "id": 987,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10530:10:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1733011200_by_1",
                                            "typeString": "int_const 1733011200"
                                          },
                                          "value": "1733011200"
                                        },
                                        "src": "10512:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1001,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 998,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9949,
                                              "src": "10626:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 999,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "10626:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31373430373837323030",
                                            "id": 1000,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10644:10:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1740787200_by_1",
                                              "typeString": "int_const 1740787200"
                                            },
                                            "value": "1740787200"
                                          },
                                          "src": "10626:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1014,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1011,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9949,
                                                "src": "10740:5:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1012,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "10740:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31373531333238303030",
                                              "id": 1013,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10758:10:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1751328000_by_1",
                                                "typeString": "int_const 1751328000"
                                              },
                                              "value": "1751328000"
                                            },
                                            "src": "10740:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1027,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1024,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 9949,
                                                  "src": "10854:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 1025,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "10854:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31373634353437323030",
                                                "id": 1026,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10872:10:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1764547200_by_1",
                                                  "typeString": "int_const 1764547200"
                                                },
                                                "value": "1764547200"
                                              },
                                              "src": "10854:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "id": 1039,
                                              "nodeType": "Block",
                                              "src": "10964:43:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1037,
                                                    "name": "team_tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25,
                                                    "src": "10985:11:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "functionReturnParameters": 860,
                                                  "id": 1038,
                                                  "nodeType": "Return",
                                                  "src": "10978:18:1"
                                                }
                                              ]
                                            },
                                            "id": 1040,
                                            "nodeType": "IfStatement",
                                            "src": "10850:157:1",
                                            "trueBody": {
                                              "id": 1036,
                                              "nodeType": "Block",
                                              "src": "10884:74:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "313030",
                                                        "id": 1033,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10943:3:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_100_by_1",
                                                          "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_100_by_1",
                                                          "typeString": "int_const 100"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "hexValue": "3930",
                                                            "id": 1030,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "10935:2:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_90_by_1",
                                                              "typeString": "int_const 90"
                                                            },
                                                            "value": "90"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_rational_90_by_1",
                                                              "typeString": "int_const 90"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "id": 1028,
                                                            "name": "team_tokens",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 25,
                                                            "src": "10919:11:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 1029,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "mul",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 3532,
                                                          "src": "10919:15:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 1031,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "10919:19:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1032,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "div",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3557,
                                                      "src": "10919:23:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1034,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "10919:28:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "functionReturnParameters": 860,
                                                  "id": 1035,
                                                  "nodeType": "Return",
                                                  "src": "10912:35:1"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 1041,
                                          "nodeType": "IfStatement",
                                          "src": "10736:271:1",
                                          "trueBody": {
                                            "id": 1023,
                                            "nodeType": "Block",
                                            "src": "10770:74:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "313030",
                                                      "id": 1020,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "10829:3:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      },
                                                      "value": "100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "3830",
                                                          "id": 1017,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "10821:2:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_80_by_1",
                                                            "typeString": "int_const 80"
                                                          },
                                                          "value": "80"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_80_by_1",
                                                            "typeString": "int_const 80"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 1015,
                                                          "name": "team_tokens",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 25,
                                                          "src": "10805:11:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 1016,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "mul",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3532,
                                                        "src": "10805:15:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 1018,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "10805:19:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1019,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "div",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3557,
                                                    "src": "10805:23:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1021,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "10805:28:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "functionReturnParameters": 860,
                                                "id": 1022,
                                                "nodeType": "Return",
                                                "src": "10798:35:1"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1042,
                                        "nodeType": "IfStatement",
                                        "src": "10622:385:1",
                                        "trueBody": {
                                          "id": 1010,
                                          "nodeType": "Block",
                                          "src": "10656:74:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "313030",
                                                    "id": 1007,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10715:3:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "3730",
                                                        "id": 1004,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "10707:2:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_70_by_1",
                                                          "typeString": "int_const 70"
                                                        },
                                                        "value": "70"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_70_by_1",
                                                          "typeString": "int_const 70"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1002,
                                                        "name": "team_tokens",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 25,
                                                        "src": "10691:11:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1003,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "mul",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3532,
                                                      "src": "10691:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1005,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "10691:19:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1006,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "div",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3557,
                                                  "src": "10691:23:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1008,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10691:28:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "functionReturnParameters": 860,
                                              "id": 1009,
                                              "nodeType": "Return",
                                              "src": "10684:35:1"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1043,
                                      "nodeType": "IfStatement",
                                      "src": "10508:499:1",
                                      "trueBody": {
                                        "id": 997,
                                        "nodeType": "Block",
                                        "src": "10542:74:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "313030",
                                                  "id": 994,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "10601:3:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  },
                                                  "value": "100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "3635",
                                                      "id": 991,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "10593:2:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_65_by_1",
                                                        "typeString": "int_const 65"
                                                      },
                                                      "value": "65"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_65_by_1",
                                                        "typeString": "int_const 65"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 989,
                                                      "name": "team_tokens",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 25,
                                                      "src": "10577:11:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 990,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3532,
                                                    "src": "10577:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 992,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "10577:19:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 993,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3557,
                                                "src": "10577:23:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 995,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "10577:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 860,
                                            "id": 996,
                                            "nodeType": "Return",
                                            "src": "10570:35:1"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1044,
                                    "nodeType": "IfStatement",
                                    "src": "10394:613:1",
                                    "trueBody": {
                                      "id": 984,
                                      "nodeType": "Block",
                                      "src": "10428:74:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "313030",
                                                "id": 981,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10487:3:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "3630",
                                                    "id": 978,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "10479:2:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_60_by_1",
                                                      "typeString": "int_const 60"
                                                    },
                                                    "value": "60"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_60_by_1",
                                                      "typeString": "int_const 60"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 976,
                                                    "name": "team_tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25,
                                                    "src": "10463:11:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 977,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3532,
                                                  "src": "10463:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 979,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "10463:19:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 980,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "div",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3557,
                                              "src": "10463:23:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 982,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "10463:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 860,
                                          "id": 983,
                                          "nodeType": "Return",
                                          "src": "10456:35:1"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 1045,
                                  "nodeType": "IfStatement",
                                  "src": "10280:727:1",
                                  "trueBody": {
                                    "id": 971,
                                    "nodeType": "Block",
                                    "src": "10314:74:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "313030",
                                              "id": 968,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10373:3:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "3535",
                                                  "id": 965,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "10365:2:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_55_by_1",
                                                    "typeString": "int_const 55"
                                                  },
                                                  "value": "55"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_55_by_1",
                                                    "typeString": "int_const 55"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 963,
                                                  "name": "team_tokens",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 25,
                                                  "src": "10349:11:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 964,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "mul",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3532,
                                                "src": "10349:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 966,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "10349:19:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 967,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3557,
                                            "src": "10349:23:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 969,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "10349:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 860,
                                        "id": 970,
                                        "nodeType": "Return",
                                        "src": "10342:35:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 1046,
                                "nodeType": "IfStatement",
                                "src": "10166:841:1",
                                "trueBody": {
                                  "id": 958,
                                  "nodeType": "Block",
                                  "src": "10200:74:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 955,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10259:3:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "3530",
                                                "id": 952,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10251:2:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_50_by_1",
                                                  "typeString": "int_const 50"
                                                },
                                                "value": "50"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_50_by_1",
                                                  "typeString": "int_const 50"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 950,
                                                "name": "team_tokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 25,
                                                "src": "10235:11:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 951,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3532,
                                              "src": "10235:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 953,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "10235:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 954,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3557,
                                          "src": "10235:23:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 956,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10235:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 860,
                                      "id": 957,
                                      "nodeType": "Return",
                                      "src": "10228:35:1"
                                    }
                                  ]
                                }
                              },
                              "id": 1047,
                              "nodeType": "IfStatement",
                              "src": "10052:955:1",
                              "trueBody": {
                                "id": 945,
                                "nodeType": "Block",
                                "src": "10086:74:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 942,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "10145:3:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3435",
                                              "id": 939,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "10137:2:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_45_by_1",
                                                "typeString": "int_const 45"
                                              },
                                              "value": "45"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_45_by_1",
                                                "typeString": "int_const 45"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 937,
                                              "name": "team_tokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25,
                                              "src": "10121:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 938,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3532,
                                            "src": "10121:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 940,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "10121:19:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 941,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3557,
                                        "src": "10121:23:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 943,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10121:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 860,
                                    "id": 944,
                                    "nodeType": "Return",
                                    "src": "10114:35:1"
                                  }
                                ]
                              }
                            },
                            "id": 1048,
                            "nodeType": "IfStatement",
                            "src": "9938:1069:1",
                            "trueBody": {
                              "id": 932,
                              "nodeType": "Block",
                              "src": "9972:74:1",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 929,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10031:3:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "3430",
                                            "id": 926,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "10023:2:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_40_by_1",
                                              "typeString": "int_const 40"
                                            },
                                            "value": "40"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_40_by_1",
                                              "typeString": "int_const 40"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 924,
                                            "name": "team_tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 25,
                                            "src": "10007:11:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 925,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3532,
                                          "src": "10007:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 927,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "10007:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 928,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3557,
                                      "src": "10007:23:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 930,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10007:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 860,
                                  "id": 931,
                                  "nodeType": "Return",
                                  "src": "10000:35:1"
                                }
                              ]
                            }
                          },
                          "id": 1049,
                          "nodeType": "IfStatement",
                          "src": "9824:1183:1",
                          "trueBody": {
                            "id": 919,
                            "nodeType": "Block",
                            "src": "9858:74:1",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 916,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9917:3:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "3335",
                                          "id": 913,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9909:2:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_35_by_1",
                                            "typeString": "int_const 35"
                                          },
                                          "value": "35"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_35_by_1",
                                            "typeString": "int_const 35"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 911,
                                          "name": "team_tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25,
                                          "src": "9893:11:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 912,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3532,
                                        "src": "9893:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 914,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9893:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 915,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3557,
                                    "src": "9893:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9893:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 860,
                                "id": 918,
                                "nodeType": "Return",
                                "src": "9886:35:1"
                              }
                            ]
                          }
                        },
                        "id": 1050,
                        "nodeType": "IfStatement",
                        "src": "9710:1297:1",
                        "trueBody": {
                          "id": 906,
                          "nodeType": "Block",
                          "src": "9744:74:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "313030",
                                    "id": 903,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9803:3:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "3330",
                                        "id": 900,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9795:2:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_30_by_1",
                                          "typeString": "int_const 30"
                                        },
                                        "value": "30"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_30_by_1",
                                          "typeString": "int_const 30"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 898,
                                        "name": "team_tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25,
                                        "src": "9779:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 899,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3532,
                                      "src": "9779:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 901,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9779:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 902,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3557,
                                  "src": "9779:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9779:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 860,
                              "id": 905,
                              "nodeType": "Return",
                              "src": "9772:35:1"
                            }
                          ]
                        }
                      },
                      "id": 1051,
                      "nodeType": "IfStatement",
                      "src": "9596:1411:1",
                      "trueBody": {
                        "id": 893,
                        "nodeType": "Block",
                        "src": "9630:74:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "313030",
                                  "id": 890,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9689:3:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "3230",
                                      "id": 887,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9681:2:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      },
                                      "value": "20"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 885,
                                      "name": "team_tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25,
                                      "src": "9665:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 886,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3532,
                                    "src": "9665:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 888,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9665:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3557,
                                "src": "9665:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 891,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9665:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 860,
                            "id": 892,
                            "nodeType": "Return",
                            "src": "9658:35:1"
                          }
                        ]
                      }
                    },
                    "id": 1052,
                    "nodeType": "IfStatement",
                    "src": "9482:1525:1",
                    "trueBody": {
                      "id": 880,
                      "nodeType": "Block",
                      "src": "9516:74:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9575:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 874,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9567:2:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 872,
                                    "name": "team_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25,
                                    "src": "9551:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 873,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3532,
                                  "src": "9551:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 875,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9551:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3557,
                              "src": "9551:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9551:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 860,
                          "id": 879,
                          "nodeType": "Return",
                          "src": "9544:35:1"
                        }
                      ]
                    }
                  },
                  "id": 1053,
                  "nodeType": "IfStatement",
                  "src": "9395:1612:1",
                  "trueBody": {
                    "id": 867,
                    "nodeType": "Block",
                    "src": "9429:47:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9464:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 860,
                        "id": 866,
                        "nodeType": "Return",
                        "src": "9457:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_available_team_balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9324:2:1"
            },
            "returnParameters": {
              "id": 860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 859,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1055,
                  "src": "9372:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9372:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9371:9:1"
            },
            "scope": 2509,
            "src": "9289:1724:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "11120:1579:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1060,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "11134:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11134:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31353838323931323030",
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11152:10:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1588291200_by_1",
                        "typeString": "int_const 1588291200"
                      },
                      "value": "1588291200"
                    },
                    "src": "11134:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1067,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9949,
                          "src": "11221:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11221:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31363134353536383030",
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11239:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1614556800_by_1",
                          "typeString": "int_const 1614556800"
                        },
                        "value": "1614556800"
                      },
                      "src": "11221:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1080,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "11340:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11340:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31363438373731323030",
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11358:10:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1648771200_by_1",
                            "typeString": "int_const 1648771200"
                          },
                          "value": "1648771200"
                        },
                        "src": "11340:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1093,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9949,
                              "src": "11459:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "11459:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31363536363333363030",
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11477:10:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1656633600_by_1",
                              "typeString": "int_const 1656633600"
                            },
                            "value": "1656633600"
                          },
                          "src": "11459:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1106,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9949,
                                "src": "11578:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11578:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31363639383532383030",
                              "id": 1108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11596:10:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1669852800_by_1",
                                "typeString": "int_const 1669852800"
                              },
                              "value": "1669852800"
                            },
                            "src": "11578:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1119,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9949,
                                  "src": "11697:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "11697:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31363832383939323030",
                                "id": 1121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11715:10:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1682899200_by_1",
                                  "typeString": "int_const 1682899200"
                                },
                                "value": "1682899200"
                              },
                              "src": "11697:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1132,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9949,
                                    "src": "11816:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11816:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31363930383438303030",
                                  "id": 1134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11834:10:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1690848000_by_1",
                                    "typeString": "int_const 1690848000"
                                  },
                                  "value": "1690848000"
                                },
                                "src": "11816:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1148,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1145,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9949,
                                      "src": "11935:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1146,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "11935:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31373131393239363030",
                                    "id": 1147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11953:10:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1711929600_by_1",
                                      "typeString": "int_const 1711929600"
                                    },
                                    "value": "1711929600"
                                  },
                                  "src": "11935:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1161,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1158,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9949,
                                        "src": "12054:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1159,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "12054:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31373232343730343030",
                                      "id": 1160,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12072:10:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1722470400_by_1",
                                        "typeString": "int_const 1722470400"
                                      },
                                      "value": "1722470400"
                                    },
                                    "src": "12054:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1174,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1171,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9949,
                                          "src": "12173:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1172,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "12173:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31373333303131323030",
                                        "id": 1173,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12191:10:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1733011200_by_1",
                                          "typeString": "int_const 1733011200"
                                        },
                                        "value": "1733011200"
                                      },
                                      "src": "12173:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1187,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1184,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9949,
                                            "src": "12292:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1185,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "12292:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31373433343635363030",
                                          "id": 1186,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12310:10:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1743465600_by_1",
                                            "typeString": "int_const 1743465600"
                                          },
                                          "value": "1743465600"
                                        },
                                        "src": "12292:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1200,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1197,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9949,
                                              "src": "12411:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 1198,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "12411:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31373534303036343030",
                                            "id": 1199,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12429:10:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1754006400_by_1",
                                              "typeString": "int_const 1754006400"
                                            },
                                            "value": "1754006400"
                                          },
                                          "src": "12411:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1213,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1210,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9949,
                                                "src": "12530:5:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1211,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "12530:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31373634353437323030",
                                              "id": 1212,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12548:10:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1764547200_by_1",
                                                "typeString": "int_const 1764547200"
                                              },
                                              "value": "1764547200"
                                            },
                                            "src": "12530:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "id": 1225,
                                            "nodeType": "Block",
                                            "src": "12645:48:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1223,
                                                  "name": "marketing_tokens",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 27,
                                                  "src": "12666:16:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "functionReturnParameters": 1059,
                                                "id": 1224,
                                                "nodeType": "Return",
                                                "src": "12659:23:1"
                                              }
                                            ]
                                          },
                                          "id": 1226,
                                          "nodeType": "IfStatement",
                                          "src": "12526:167:1",
                                          "trueBody": {
                                            "id": 1222,
                                            "nodeType": "Block",
                                            "src": "12560:79:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "313030",
                                                      "id": 1219,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "12624:3:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      },
                                                      "value": "100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "3930",
                                                          "id": 1216,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "12616:2:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_90_by_1",
                                                            "typeString": "int_const 90"
                                                          },
                                                          "value": "90"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_90_by_1",
                                                            "typeString": "int_const 90"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 1214,
                                                          "name": "marketing_tokens",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 27,
                                                          "src": "12595:16:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 1215,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "mul",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3532,
                                                        "src": "12595:20:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 1217,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "12595:24:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1218,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "div",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3557,
                                                    "src": "12595:28:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1220,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "12595:33:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "functionReturnParameters": 1059,
                                                "id": 1221,
                                                "nodeType": "Return",
                                                "src": "12588:40:1"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1227,
                                        "nodeType": "IfStatement",
                                        "src": "12407:286:1",
                                        "trueBody": {
                                          "id": 1209,
                                          "nodeType": "Block",
                                          "src": "12441:79:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "313030",
                                                    "id": 1206,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "12505:3:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "3830",
                                                        "id": 1203,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "12497:2:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_80_by_1",
                                                          "typeString": "int_const 80"
                                                        },
                                                        "value": "80"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_80_by_1",
                                                          "typeString": "int_const 80"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1201,
                                                        "name": "marketing_tokens",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 27,
                                                        "src": "12476:16:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1202,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "mul",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3532,
                                                      "src": "12476:20:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1204,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "12476:24:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1205,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "div",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3557,
                                                  "src": "12476:28:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1207,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12476:33:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "functionReturnParameters": 1059,
                                              "id": 1208,
                                              "nodeType": "Return",
                                              "src": "12469:40:1"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1228,
                                      "nodeType": "IfStatement",
                                      "src": "12288:405:1",
                                      "trueBody": {
                                        "id": 1196,
                                        "nodeType": "Block",
                                        "src": "12322:79:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "313030",
                                                  "id": 1193,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "12386:3:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  },
                                                  "value": "100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "3730",
                                                      "id": 1190,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "12378:2:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_70_by_1",
                                                        "typeString": "int_const 70"
                                                      },
                                                      "value": "70"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_70_by_1",
                                                        "typeString": "int_const 70"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1188,
                                                      "name": "marketing_tokens",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 27,
                                                      "src": "12357:16:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1189,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3532,
                                                    "src": "12357:20:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1191,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "12357:24:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1192,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3557,
                                                "src": "12357:28:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1194,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "12357:33:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 1059,
                                            "id": 1195,
                                            "nodeType": "Return",
                                            "src": "12350:40:1"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1229,
                                    "nodeType": "IfStatement",
                                    "src": "12169:524:1",
                                    "trueBody": {
                                      "id": 1183,
                                      "nodeType": "Block",
                                      "src": "12203:79:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "313030",
                                                "id": 1180,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12267:3:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "3635",
                                                    "id": 1177,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "12259:2:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_65_by_1",
                                                      "typeString": "int_const 65"
                                                    },
                                                    "value": "65"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_65_by_1",
                                                      "typeString": "int_const 65"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1175,
                                                    "name": "marketing_tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 27,
                                                    "src": "12238:16:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1176,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3532,
                                                  "src": "12238:20:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1178,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "12238:24:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1179,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "div",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3557,
                                              "src": "12238:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1181,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "12238:33:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 1059,
                                          "id": 1182,
                                          "nodeType": "Return",
                                          "src": "12231:40:1"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 1230,
                                  "nodeType": "IfStatement",
                                  "src": "12050:643:1",
                                  "trueBody": {
                                    "id": 1170,
                                    "nodeType": "Block",
                                    "src": "12084:79:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "313030",
                                              "id": 1167,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12148:3:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "3630",
                                                  "id": 1164,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "12140:2:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_60_by_1",
                                                    "typeString": "int_const 60"
                                                  },
                                                  "value": "60"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_60_by_1",
                                                    "typeString": "int_const 60"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1162,
                                                  "name": "marketing_tokens",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 27,
                                                  "src": "12119:16:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1163,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "mul",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3532,
                                                "src": "12119:20:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1165,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "12119:24:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1166,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3557,
                                            "src": "12119:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1168,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12119:33:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 1059,
                                        "id": 1169,
                                        "nodeType": "Return",
                                        "src": "12112:40:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 1231,
                                "nodeType": "IfStatement",
                                "src": "11931:762:1",
                                "trueBody": {
                                  "id": 1157,
                                  "nodeType": "Block",
                                  "src": "11965:79:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 1154,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12029:3:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "3535",
                                                "id": 1151,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12021:2:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_55_by_1",
                                                  "typeString": "int_const 55"
                                                },
                                                "value": "55"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_55_by_1",
                                                  "typeString": "int_const 55"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1149,
                                                "name": "marketing_tokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 27,
                                                "src": "12000:16:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1150,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3532,
                                              "src": "12000:20:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1152,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "12000:24:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1153,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3557,
                                          "src": "12000:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1155,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "12000:33:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 1059,
                                      "id": 1156,
                                      "nodeType": "Return",
                                      "src": "11993:40:1"
                                    }
                                  ]
                                }
                              },
                              "id": 1232,
                              "nodeType": "IfStatement",
                              "src": "11812:881:1",
                              "trueBody": {
                                "id": 1144,
                                "nodeType": "Block",
                                "src": "11846:79:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 1141,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11910:3:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3530",
                                              "id": 1138,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11902:2:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_50_by_1",
                                                "typeString": "int_const 50"
                                              },
                                              "value": "50"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_50_by_1",
                                                "typeString": "int_const 50"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1136,
                                              "name": "marketing_tokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 27,
                                              "src": "11881:16:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1137,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3532,
                                            "src": "11881:20:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1139,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11881:24:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1140,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3557,
                                        "src": "11881:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1142,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11881:33:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 1059,
                                    "id": 1143,
                                    "nodeType": "Return",
                                    "src": "11874:40:1"
                                  }
                                ]
                              }
                            },
                            "id": 1233,
                            "nodeType": "IfStatement",
                            "src": "11693:1000:1",
                            "trueBody": {
                              "id": 1131,
                              "nodeType": "Block",
                              "src": "11727:79:1",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 1128,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11791:3:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "3430",
                                            "id": 1125,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11783:2:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_40_by_1",
                                              "typeString": "int_const 40"
                                            },
                                            "value": "40"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_40_by_1",
                                              "typeString": "int_const 40"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1123,
                                            "name": "marketing_tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 27,
                                            "src": "11762:16:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1124,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3532,
                                          "src": "11762:20:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1126,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11762:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1127,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3557,
                                      "src": "11762:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1129,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11762:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 1059,
                                  "id": 1130,
                                  "nodeType": "Return",
                                  "src": "11755:40:1"
                                }
                              ]
                            }
                          },
                          "id": 1234,
                          "nodeType": "IfStatement",
                          "src": "11574:1119:1",
                          "trueBody": {
                            "id": 1118,
                            "nodeType": "Block",
                            "src": "11608:79:1",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 1115,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11672:3:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "3335",
                                          "id": 1112,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11664:2:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_35_by_1",
                                            "typeString": "int_const 35"
                                          },
                                          "value": "35"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_35_by_1",
                                            "typeString": "int_const 35"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1110,
                                          "name": "marketing_tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 27,
                                          "src": "11643:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1111,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3532,
                                        "src": "11643:20:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1113,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11643:24:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1114,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3557,
                                    "src": "11643:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11643:33:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 1059,
                                "id": 1117,
                                "nodeType": "Return",
                                "src": "11636:40:1"
                              }
                            ]
                          }
                        },
                        "id": 1235,
                        "nodeType": "IfStatement",
                        "src": "11455:1238:1",
                        "trueBody": {
                          "id": 1105,
                          "nodeType": "Block",
                          "src": "11489:79:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "313030",
                                    "id": 1102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11553:3:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "3330",
                                        "id": 1099,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11545:2:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_30_by_1",
                                          "typeString": "int_const 30"
                                        },
                                        "value": "30"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_30_by_1",
                                          "typeString": "int_const 30"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1097,
                                        "name": "marketing_tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 27,
                                        "src": "11524:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1098,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3532,
                                      "src": "11524:20:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1100,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11524:24:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3557,
                                  "src": "11524:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11524:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1059,
                              "id": 1104,
                              "nodeType": "Return",
                              "src": "11517:40:1"
                            }
                          ]
                        }
                      },
                      "id": 1236,
                      "nodeType": "IfStatement",
                      "src": "11336:1357:1",
                      "trueBody": {
                        "id": 1092,
                        "nodeType": "Block",
                        "src": "11370:79:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "313030",
                                  "id": 1089,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11434:3:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "3230",
                                      "id": 1086,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11426:2:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      },
                                      "value": "20"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1084,
                                      "name": "marketing_tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 27,
                                      "src": "11405:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1085,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3532,
                                    "src": "11405:20:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1087,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11405:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3557,
                                "src": "11405:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11405:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 1059,
                            "id": 1091,
                            "nodeType": "Return",
                            "src": "11398:40:1"
                          }
                        ]
                      }
                    },
                    "id": 1237,
                    "nodeType": "IfStatement",
                    "src": "11217:1476:1",
                    "trueBody": {
                      "id": 1079,
                      "nodeType": "Block",
                      "src": "11251:79:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 1076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11315:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1073,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11307:2:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1071,
                                    "name": "marketing_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27,
                                    "src": "11286:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3532,
                                  "src": "11286:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11286:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3557,
                              "src": "11286:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11286:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1059,
                          "id": 1078,
                          "nodeType": "Return",
                          "src": "11279:40:1"
                        }
                      ]
                    }
                  },
                  "id": 1238,
                  "nodeType": "IfStatement",
                  "src": "11130:1563:1",
                  "trueBody": {
                    "id": 1066,
                    "nodeType": "Block",
                    "src": "11164:47:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11199:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1059,
                        "id": 1065,
                        "nodeType": "Return",
                        "src": "11192:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_available_marketing_balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11059:2:1"
            },
            "returnParameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1058,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "11107:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11107:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11106:9:1"
            },
            "scope": 2509,
            "src": "11019:1680:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1438,
              "nodeType": "Block",
              "src": "12804:1670:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1245,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "12818:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12818:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31353938393138343030",
                      "id": 1247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12836:10:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1598918400_by_1",
                        "typeString": "int_const 1598918400"
                      },
                      "value": "1598918400"
                    },
                    "src": "12818:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1252,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9949,
                          "src": "12905:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12905:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31363139383237323030",
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12923:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1619827200_by_1",
                          "typeString": "int_const 1619827200"
                        },
                        "value": "1619827200"
                      },
                      "src": "12905:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1265,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "13022:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "13022:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31363330343534343030",
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13040:10:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1630454400_by_1",
                            "typeString": "int_const 1630454400"
                          },
                          "value": "1630454400"
                        },
                        "src": "13022:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1278,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9949,
                              "src": "13139:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13139:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31363534303431363030",
                            "id": 1280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13157:10:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1654041600_by_1",
                              "typeString": "int_const 1654041600"
                            },
                            "value": "1654041600"
                          },
                          "src": "13139:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1291,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9949,
                                "src": "13256:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "13256:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31363634353832343030",
                              "id": 1293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13274:10:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1664582400_by_1",
                                "typeString": "int_const 1664582400"
                              },
                              "value": "1664582400"
                            },
                            "src": "13256:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1304,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9949,
                                  "src": "13373:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "13373:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31363832383939323030",
                                "id": 1306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13391:10:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1682899200_by_1",
                                  "typeString": "int_const 1682899200"
                                },
                                "value": "1682899200"
                              },
                              "src": "13373:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1317,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9949,
                                    "src": "13490:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1318,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "13490:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31363930383438303030",
                                  "id": 1319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13508:10:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1690848000_by_1",
                                    "typeString": "int_const 1690848000"
                                  },
                                  "value": "1690848000"
                                },
                                "src": "13490:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1330,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9949,
                                      "src": "13607:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "13607:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31373134353231363030",
                                    "id": 1332,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13625:10:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1714521600_by_1",
                                      "typeString": "int_const 1714521600"
                                    },
                                    "value": "1714521600"
                                  },
                                  "src": "13607:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1346,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1343,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9949,
                                        "src": "13724:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "13724:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31373139373932303030",
                                      "id": 1345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13742:10:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1719792000_by_1",
                                        "typeString": "int_const 1719792000"
                                      },
                                      "value": "1719792000"
                                    },
                                    "src": "13724:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1359,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1356,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9949,
                                          "src": "13841:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1357,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "13841:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31373237373430383030",
                                        "id": 1358,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13859:10:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1727740800_by_1",
                                          "typeString": "int_const 1727740800"
                                        },
                                        "value": "1727740800"
                                      },
                                      "src": "13841:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1372,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1369,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9949,
                                            "src": "13958:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1370,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "13958:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31373333303131323030",
                                          "id": 1371,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13976:10:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1733011200_by_1",
                                            "typeString": "int_const 1733011200"
                                          },
                                          "value": "1733011200"
                                        },
                                        "src": "13958:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1385,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1382,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9949,
                                              "src": "14075:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 1383,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "14075:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31373436303537363030",
                                            "id": 1384,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "14093:10:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1746057600_by_1",
                                              "typeString": "int_const 1746057600"
                                            },
                                            "value": "1746057600"
                                          },
                                          "src": "14075:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1398,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1395,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9949,
                                                "src": "14192:5:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1396,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "14192:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31373536363834383030",
                                              "id": 1397,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14210:10:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1756684800_by_1",
                                                "typeString": "int_const 1756684800"
                                              },
                                              "value": "1756684800"
                                            },
                                            "src": "14192:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1411,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1408,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 9949,
                                                  "src": "14309:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 1409,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "14309:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31373634353437323030",
                                                "id": 1410,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "14327:10:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1764547200_by_1",
                                                  "typeString": "int_const 1764547200"
                                                },
                                                "value": "1764547200"
                                              },
                                              "src": "14309:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "id": 1423,
                                              "nodeType": "Block",
                                              "src": "14422:46:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1421,
                                                    "name": "reserve_tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 29,
                                                    "src": "14443:14:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "functionReturnParameters": 1244,
                                                  "id": 1422,
                                                  "nodeType": "Return",
                                                  "src": "14436:21:1"
                                                }
                                              ]
                                            },
                                            "id": 1424,
                                            "nodeType": "IfStatement",
                                            "src": "14305:163:1",
                                            "trueBody": {
                                              "id": 1420,
                                              "nodeType": "Block",
                                              "src": "14339:77:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "313030",
                                                        "id": 1417,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "14401:3:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_100_by_1",
                                                          "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_100_by_1",
                                                          "typeString": "int_const 100"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "hexValue": "3930",
                                                            "id": 1414,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "14393:2:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_90_by_1",
                                                              "typeString": "int_const 90"
                                                            },
                                                            "value": "90"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_rational_90_by_1",
                                                              "typeString": "int_const 90"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "id": 1412,
                                                            "name": "reserve_tokens",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 29,
                                                            "src": "14374:14:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 1413,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "mul",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 3532,
                                                          "src": "14374:18:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 1415,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "14374:22:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1416,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "div",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3557,
                                                      "src": "14374:26:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1418,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "14374:31:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "functionReturnParameters": 1244,
                                                  "id": 1419,
                                                  "nodeType": "Return",
                                                  "src": "14367:38:1"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 1425,
                                          "nodeType": "IfStatement",
                                          "src": "14188:280:1",
                                          "trueBody": {
                                            "id": 1407,
                                            "nodeType": "Block",
                                            "src": "14222:77:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "313030",
                                                      "id": 1404,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "14284:3:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      },
                                                      "value": "100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "3830",
                                                          "id": 1401,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "14276:2:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_80_by_1",
                                                            "typeString": "int_const 80"
                                                          },
                                                          "value": "80"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_80_by_1",
                                                            "typeString": "int_const 80"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 1399,
                                                          "name": "reserve_tokens",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 29,
                                                          "src": "14257:14:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 1400,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "mul",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3532,
                                                        "src": "14257:18:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 1402,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "14257:22:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1403,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "div",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3557,
                                                    "src": "14257:26:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1405,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "14257:31:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "functionReturnParameters": 1244,
                                                "id": 1406,
                                                "nodeType": "Return",
                                                "src": "14250:38:1"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1426,
                                        "nodeType": "IfStatement",
                                        "src": "14071:397:1",
                                        "trueBody": {
                                          "id": 1394,
                                          "nodeType": "Block",
                                          "src": "14105:77:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "313030",
                                                    "id": 1391,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14167:3:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "3730",
                                                        "id": 1388,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "14159:2:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_70_by_1",
                                                          "typeString": "int_const 70"
                                                        },
                                                        "value": "70"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_70_by_1",
                                                          "typeString": "int_const 70"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1386,
                                                        "name": "reserve_tokens",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 29,
                                                        "src": "14140:14:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1387,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "mul",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3532,
                                                      "src": "14140:18:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1389,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "14140:22:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1390,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "div",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3557,
                                                  "src": "14140:26:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1392,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "14140:31:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "functionReturnParameters": 1244,
                                              "id": 1393,
                                              "nodeType": "Return",
                                              "src": "14133:38:1"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1427,
                                      "nodeType": "IfStatement",
                                      "src": "13954:514:1",
                                      "trueBody": {
                                        "id": 1381,
                                        "nodeType": "Block",
                                        "src": "13988:77:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "313030",
                                                  "id": 1378,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "14050:3:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  },
                                                  "value": "100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "3635",
                                                      "id": 1375,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "14042:2:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_65_by_1",
                                                        "typeString": "int_const 65"
                                                      },
                                                      "value": "65"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_65_by_1",
                                                        "typeString": "int_const 65"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1373,
                                                      "name": "reserve_tokens",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 29,
                                                      "src": "14023:14:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1374,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3532,
                                                    "src": "14023:18:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1376,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "14023:22:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1377,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3557,
                                                "src": "14023:26:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1379,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "14023:31:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 1244,
                                            "id": 1380,
                                            "nodeType": "Return",
                                            "src": "14016:38:1"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1428,
                                    "nodeType": "IfStatement",
                                    "src": "13837:631:1",
                                    "trueBody": {
                                      "id": 1368,
                                      "nodeType": "Block",
                                      "src": "13871:77:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "313030",
                                                "id": 1365,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "13933:3:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "3630",
                                                    "id": 1362,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "13925:2:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_60_by_1",
                                                      "typeString": "int_const 60"
                                                    },
                                                    "value": "60"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_60_by_1",
                                                      "typeString": "int_const 60"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1360,
                                                    "name": "reserve_tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 29,
                                                    "src": "13906:14:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1361,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3532,
                                                  "src": "13906:18:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1363,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "13906:22:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1364,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "div",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3557,
                                              "src": "13906:26:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1366,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "13906:31:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 1244,
                                          "id": 1367,
                                          "nodeType": "Return",
                                          "src": "13899:38:1"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 1429,
                                  "nodeType": "IfStatement",
                                  "src": "13720:748:1",
                                  "trueBody": {
                                    "id": 1355,
                                    "nodeType": "Block",
                                    "src": "13754:77:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "313030",
                                              "id": 1352,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13816:3:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "3535",
                                                  "id": 1349,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "13808:2:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_55_by_1",
                                                    "typeString": "int_const 55"
                                                  },
                                                  "value": "55"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_55_by_1",
                                                    "typeString": "int_const 55"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1347,
                                                  "name": "reserve_tokens",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 29,
                                                  "src": "13789:14:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1348,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "mul",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3532,
                                                "src": "13789:18:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1350,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "13789:22:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1351,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3557,
                                            "src": "13789:26:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1353,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13789:31:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 1244,
                                        "id": 1354,
                                        "nodeType": "Return",
                                        "src": "13782:38:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 1430,
                                "nodeType": "IfStatement",
                                "src": "13603:865:1",
                                "trueBody": {
                                  "id": 1342,
                                  "nodeType": "Block",
                                  "src": "13637:77:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 1339,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "13699:3:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "3435",
                                                "id": 1336,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "13691:2:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_45_by_1",
                                                  "typeString": "int_const 45"
                                                },
                                                "value": "45"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_45_by_1",
                                                  "typeString": "int_const 45"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1334,
                                                "name": "reserve_tokens",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 29,
                                                "src": "13672:14:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1335,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3532,
                                              "src": "13672:18:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1337,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "13672:22:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1338,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3557,
                                          "src": "13672:26:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1340,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "13672:31:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 1244,
                                      "id": 1341,
                                      "nodeType": "Return",
                                      "src": "13665:38:1"
                                    }
                                  ]
                                }
                              },
                              "id": 1431,
                              "nodeType": "IfStatement",
                              "src": "13486:982:1",
                              "trueBody": {
                                "id": 1329,
                                "nodeType": "Block",
                                "src": "13520:77:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 1326,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13582:3:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3430",
                                              "id": 1323,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13574:2:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_40_by_1",
                                                "typeString": "int_const 40"
                                              },
                                              "value": "40"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_40_by_1",
                                                "typeString": "int_const 40"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1321,
                                              "name": "reserve_tokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 29,
                                              "src": "13555:14:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1322,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3532,
                                            "src": "13555:18:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1324,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13555:22:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1325,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3557,
                                        "src": "13555:26:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1327,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13555:31:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 1244,
                                    "id": 1328,
                                    "nodeType": "Return",
                                    "src": "13548:38:1"
                                  }
                                ]
                              }
                            },
                            "id": 1432,
                            "nodeType": "IfStatement",
                            "src": "13369:1099:1",
                            "trueBody": {
                              "id": 1316,
                              "nodeType": "Block",
                              "src": "13403:77:1",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 1313,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13465:3:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "3330",
                                            "id": 1310,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "13457:2:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_30_by_1",
                                              "typeString": "int_const 30"
                                            },
                                            "value": "30"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_30_by_1",
                                              "typeString": "int_const 30"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1308,
                                            "name": "reserve_tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 29,
                                            "src": "13438:14:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1309,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3532,
                                          "src": "13438:18:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1311,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "13438:22:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3557,
                                      "src": "13438:26:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13438:31:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 1244,
                                  "id": 1315,
                                  "nodeType": "Return",
                                  "src": "13431:38:1"
                                }
                              ]
                            }
                          },
                          "id": 1433,
                          "nodeType": "IfStatement",
                          "src": "13252:1216:1",
                          "trueBody": {
                            "id": 1303,
                            "nodeType": "Block",
                            "src": "13286:77:1",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 1300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13348:3:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "3235",
                                          "id": 1297,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13340:2:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_25_by_1",
                                            "typeString": "int_const 25"
                                          },
                                          "value": "25"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_25_by_1",
                                            "typeString": "int_const 25"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1295,
                                          "name": "reserve_tokens",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 29,
                                          "src": "13321:14:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1296,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3532,
                                        "src": "13321:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1298,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13321:22:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1299,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3557,
                                    "src": "13321:26:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13321:31:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 1244,
                                "id": 1302,
                                "nodeType": "Return",
                                "src": "13314:38:1"
                              }
                            ]
                          }
                        },
                        "id": 1434,
                        "nodeType": "IfStatement",
                        "src": "13135:1333:1",
                        "trueBody": {
                          "id": 1290,
                          "nodeType": "Block",
                          "src": "13169:77:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "313030",
                                    "id": 1287,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13231:3:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "3230",
                                        "id": 1284,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13223:2:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_20_by_1",
                                          "typeString": "int_const 20"
                                        },
                                        "value": "20"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_20_by_1",
                                          "typeString": "int_const 20"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1282,
                                        "name": "reserve_tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29,
                                        "src": "13204:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1283,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3532,
                                      "src": "13204:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1285,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13204:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3557,
                                  "src": "13204:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13204:31:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1244,
                              "id": 1289,
                              "nodeType": "Return",
                              "src": "13197:38:1"
                            }
                          ]
                        }
                      },
                      "id": 1435,
                      "nodeType": "IfStatement",
                      "src": "13018:1450:1",
                      "trueBody": {
                        "id": 1277,
                        "nodeType": "Block",
                        "src": "13052:77:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "313030",
                                  "id": 1274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13114:3:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "3135",
                                      "id": 1271,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13106:2:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_15_by_1",
                                        "typeString": "int_const 15"
                                      },
                                      "value": "15"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_15_by_1",
                                        "typeString": "int_const 15"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1269,
                                      "name": "reserve_tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29,
                                      "src": "13087:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3532,
                                    "src": "13087:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13087:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3557,
                                "src": "13087:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13087:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 1244,
                            "id": 1276,
                            "nodeType": "Return",
                            "src": "13080:38:1"
                          }
                        ]
                      }
                    },
                    "id": 1436,
                    "nodeType": "IfStatement",
                    "src": "12901:1567:1",
                    "trueBody": {
                      "id": 1264,
                      "nodeType": "Block",
                      "src": "12935:77:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12997:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3130",
                                    "id": 1258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12989:2:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1256,
                                    "name": "reserve_tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29,
                                    "src": "12970:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3532,
                                  "src": "12970:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12970:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3557,
                              "src": "12970:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12970:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1244,
                          "id": 1263,
                          "nodeType": "Return",
                          "src": "12963:38:1"
                        }
                      ]
                    }
                  },
                  "id": 1437,
                  "nodeType": "IfStatement",
                  "src": "12814:1654:1",
                  "trueBody": {
                    "id": 1251,
                    "nodeType": "Block",
                    "src": "12848:47:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12883:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1244,
                        "id": 1250,
                        "nodeType": "Return",
                        "src": "12876:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_available_reserve_balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12743:2:1"
            },
            "returnParameters": {
              "id": 1244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1243,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1439,
                  "src": "12791:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12791:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12790:9:1"
            },
            "scope": 2509,
            "src": "12705:1769:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1715,
              "nodeType": "Block",
              "src": "14604:2123:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1446,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "14618:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14618:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31353735313538343030",
                      "id": 1448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14636:10:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1575158400_by_1",
                        "typeString": "int_const 1575158400"
                      },
                      "value": "1575158400"
                    },
                    "src": "14618:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1453,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9949,
                          "src": "14705:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14705:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31353833303230383030",
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14723:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1583020800_by_1",
                          "typeString": "int_const 1583020800"
                        },
                        "value": "1583020800"
                      },
                      "src": "14705:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1468,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "14828:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "14828:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31353933353631363030",
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14846:10:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1593561600_by_1",
                            "typeString": "int_const 1593561600"
                          },
                          "value": "1593561600"
                        },
                        "src": "14828:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1483,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9949,
                              "src": "14951:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14951:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31363036373830383030",
                            "id": 1485,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14969:10:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1606780800_by_1",
                              "typeString": "int_const 1606780800"
                            },
                            "value": "1606780800"
                          },
                          "src": "14951:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1498,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9949,
                                "src": "15074:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15074:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31363137323335323030",
                              "id": 1500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15092:10:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1617235200_by_1",
                                "typeString": "int_const 1617235200"
                              },
                              "value": "1617235200"
                            },
                            "src": "15074:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1513,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9949,
                                  "src": "15197:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15197:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31363235303937363030",
                                "id": 1515,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15215:10:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1625097600_by_1",
                                  "typeString": "int_const 1625097600"
                                },
                                "value": "1625097600"
                              },
                              "src": "15197:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1528,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9949,
                                    "src": "15320:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "15320:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31363333303436343030",
                                  "id": 1530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15338:10:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1633046400_by_1",
                                    "typeString": "int_const 1633046400"
                                  },
                                  "value": "1633046400"
                                },
                                "src": "15320:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1546,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1543,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9949,
                                      "src": "15443:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1544,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "15443:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31363338333136383030",
                                    "id": 1545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15461:10:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1638316800_by_1",
                                      "typeString": "int_const 1638316800"
                                    },
                                    "value": "1638316800"
                                  },
                                  "src": "15443:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1561,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1558,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9949,
                                        "src": "15566:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1559,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "15566:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31363436303932383030",
                                      "id": 1560,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15584:10:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1646092800_by_1",
                                        "typeString": "int_const 1646092800"
                                      },
                                      "value": "1646092800"
                                    },
                                    "src": "15566:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1576,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1573,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9949,
                                          "src": "15689:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1574,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "15689:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31363534303431363030",
                                        "id": 1575,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15707:10:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1654041600_by_1",
                                          "typeString": "int_const 1654041600"
                                        },
                                        "value": "1654041600"
                                      },
                                      "src": "15689:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1591,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1588,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9949,
                                            "src": "15812:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1589,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "15812:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31363631393930343030",
                                          "id": 1590,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15830:10:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1661990400_by_1",
                                            "typeString": "int_const 1661990400"
                                          },
                                          "value": "1661990400"
                                        },
                                        "src": "15812:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1606,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1603,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9949,
                                              "src": "15935:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 1604,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "15935:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31363639383532383030",
                                            "id": 1605,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15953:10:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1669852800_by_1",
                                              "typeString": "int_const 1669852800"
                                            },
                                            "value": "1669852800"
                                          },
                                          "src": "15935:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1621,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1618,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9949,
                                                "src": "16058:5:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1619,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "16058:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31363737363238383030",
                                              "id": 1620,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "16076:10:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1677628800_by_1",
                                                "typeString": "int_const 1677628800"
                                              },
                                              "value": "1677628800"
                                            },
                                            "src": "16058:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1636,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1633,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 9949,
                                                  "src": "16181:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 1634,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "16181:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31363832383939323030",
                                                "id": 1635,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "16199:10:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1682899200_by_1",
                                                  "typeString": "int_const 1682899200"
                                                },
                                                "value": "1682899200"
                                              },
                                              "src": "16181:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 1651,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1648,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 9949,
                                                    "src": "16304:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_block",
                                                      "typeString": "block"
                                                    }
                                                  },
                                                  "id": 1649,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "timestamp",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": null,
                                                  "src": "16304:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "31363838313639363030",
                                                  "id": 1650,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "16322:10:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1688169600_by_1",
                                                    "typeString": "int_const 1688169600"
                                                  },
                                                  "value": "1688169600"
                                                },
                                                "src": "16304:28:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": {
                                                "condition": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1666,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1663,
                                                      "name": "block",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 9949,
                                                      "src": "16427:5:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                      }
                                                    },
                                                    "id": 1664,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "16427:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "<",
                                                  "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "31363936313138343030",
                                                    "id": 1665,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "16445:10:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_1696118400_by_1",
                                                      "typeString": "int_const 1696118400"
                                                    },
                                                    "value": "1696118400"
                                                  },
                                                  "src": "16427:28:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": {
                                                  "condition": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 1681,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1678,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 9949,
                                                        "src": "16550:5:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_block",
                                                          "typeString": "block"
                                                        }
                                                      },
                                                      "id": 1679,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "timestamp",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "16550:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<",
                                                    "rightExpression": {
                                                      "argumentTypes": null,
                                                      "hexValue": "31373031333838383030",
                                                      "id": 1680,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "16568:10:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1701388800_by_1",
                                                        "typeString": "int_const 1701388800"
                                                      },
                                                      "value": "1701388800"
                                                    },
                                                    "src": "16550:28:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseBody": {
                                                    "id": 1697,
                                                    "nodeType": "Block",
                                                    "src": "16669:52:1",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 1693,
                                                            "name": "seed_balance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 49,
                                                            "src": "16690:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                              "typeString": "mapping(address => uint256)"
                                                            }
                                                          },
                                                          "id": 1695,
                                                          "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 1694,
                                                            "name": "sender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1441,
                                                            "src": "16703:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "16690:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "functionReturnParameters": 1445,
                                                        "id": 1696,
                                                        "nodeType": "Return",
                                                        "src": "16683:27:1"
                                                      }
                                                    ]
                                                  },
                                                  "id": 1698,
                                                  "nodeType": "IfStatement",
                                                  "src": "16546:175:1",
                                                  "trueBody": {
                                                    "id": 1692,
                                                    "nodeType": "Block",
                                                    "src": "16580:83:1",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "arguments": [
                                                            {
                                                              "argumentTypes": null,
                                                              "hexValue": "313030",
                                                              "id": 1689,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "16648:3:1",
                                                              "subdenomination": null,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_100_by_1",
                                                                "typeString": "int_const 100"
                                                              },
                                                              "value": "100"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_100_by_1",
                                                                "typeString": "int_const 100"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "arguments": [
                                                                {
                                                                  "argumentTypes": null,
                                                                  "hexValue": "3935",
                                                                  "id": 1686,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "number",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "16640:2:1",
                                                                  "subdenomination": null,
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_95_by_1",
                                                                    "typeString": "int_const 95"
                                                                  },
                                                                  "value": "95"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": [
                                                                  {
                                                                    "typeIdentifier": "t_rational_95_by_1",
                                                                    "typeString": "int_const 95"
                                                                  }
                                                                ],
                                                                "expression": {
                                                                  "argumentTypes": null,
                                                                  "baseExpression": {
                                                                    "argumentTypes": null,
                                                                    "id": 1682,
                                                                    "name": "seed_balance",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 49,
                                                                    "src": "16615:12:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                      "typeString": "mapping(address => uint256)"
                                                                    }
                                                                  },
                                                                  "id": 1684,
                                                                  "indexExpression": {
                                                                    "argumentTypes": null,
                                                                    "id": 1683,
                                                                    "name": "sender",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1441,
                                                                    "src": "16628:6:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_address",
                                                                      "typeString": "address"
                                                                    }
                                                                  },
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "nodeType": "IndexAccess",
                                                                  "src": "16615:20:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                "id": 1685,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "mul",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 3532,
                                                                "src": "16615:24:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                }
                                                              },
                                                              "id": 1687,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "kind": "functionCall",
                                                              "lValueRequested": false,
                                                              "names": [],
                                                              "nodeType": "FunctionCall",
                                                              "src": "16615:28:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "id": 1688,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "div",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3557,
                                                            "src": "16615:32:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                          },
                                                          "id": 1690,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "kind": "functionCall",
                                                          "lValueRequested": false,
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "16615:37:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "functionReturnParameters": 1445,
                                                        "id": 1691,
                                                        "nodeType": "Return",
                                                        "src": "16608:44:1"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "id": 1699,
                                                "nodeType": "IfStatement",
                                                "src": "16423:298:1",
                                                "trueBody": {
                                                  "id": 1677,
                                                  "nodeType": "Block",
                                                  "src": "16457:83:1",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "hexValue": "313030",
                                                            "id": 1674,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "16525:3:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_100_by_1",
                                                              "typeString": "int_const 100"
                                                            },
                                                            "value": "100"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_rational_100_by_1",
                                                              "typeString": "int_const 100"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                              {
                                                                "argumentTypes": null,
                                                                "hexValue": "3930",
                                                                "id": 1671,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "16517:2:1",
                                                                "subdenomination": null,
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_rational_90_by_1",
                                                                  "typeString": "int_const 90"
                                                                },
                                                                "value": "90"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_rational_90_by_1",
                                                                  "typeString": "int_const 90"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": null,
                                                                "baseExpression": {
                                                                  "argumentTypes": null,
                                                                  "id": 1667,
                                                                  "name": "seed_balance",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 49,
                                                                  "src": "16492:12:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                    "typeString": "mapping(address => uint256)"
                                                                  }
                                                                },
                                                                "id": 1669,
                                                                "indexExpression": {
                                                                  "argumentTypes": null,
                                                                  "id": 1668,
                                                                  "name": "sender",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 1441,
                                                                  "src": "16505:6:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "16492:20:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              },
                                                              "id": 1670,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "memberName": "mul",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 3532,
                                                              "src": "16492:24:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                              }
                                                            },
                                                            "id": 1672,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "16492:28:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 1673,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "div",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 3557,
                                                          "src": "16492:32:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 1675,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "16492:37:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "functionReturnParameters": 1445,
                                                      "id": 1676,
                                                      "nodeType": "Return",
                                                      "src": "16485:44:1"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 1700,
                                              "nodeType": "IfStatement",
                                              "src": "16300:421:1",
                                              "trueBody": {
                                                "id": 1662,
                                                "nodeType": "Block",
                                                "src": "16334:83:1",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "313030",
                                                          "id": 1659,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "16402:3:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                          },
                                                          "value": "100"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "arguments": [
                                                            {
                                                              "argumentTypes": null,
                                                              "hexValue": "3835",
                                                              "id": 1656,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "16394:2:1",
                                                              "subdenomination": null,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_85_by_1",
                                                                "typeString": "int_const 85"
                                                              },
                                                              "value": "85"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_85_by_1",
                                                                "typeString": "int_const 85"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "baseExpression": {
                                                                "argumentTypes": null,
                                                                "id": 1652,
                                                                "name": "seed_balance",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 49,
                                                                "src": "16369:12:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                  "typeString": "mapping(address => uint256)"
                                                                }
                                                              },
                                                              "id": 1654,
                                                              "indexExpression": {
                                                                "argumentTypes": null,
                                                                "id": 1653,
                                                                "name": "sender",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1441,
                                                                "src": "16382:6:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "nodeType": "IndexAccess",
                                                              "src": "16369:20:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "id": 1655,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "mul",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3532,
                                                            "src": "16369:24:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                          },
                                                          "id": 1657,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "kind": "functionCall",
                                                          "lValueRequested": false,
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "16369:28:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 1658,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "div",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3557,
                                                        "src": "16369:32:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 1660,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "16369:37:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "functionReturnParameters": 1445,
                                                    "id": 1661,
                                                    "nodeType": "Return",
                                                    "src": "16362:44:1"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 1701,
                                            "nodeType": "IfStatement",
                                            "src": "16177:544:1",
                                            "trueBody": {
                                              "id": 1647,
                                              "nodeType": "Block",
                                              "src": "16211:83:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "313030",
                                                        "id": 1644,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "16279:3:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_100_by_1",
                                                          "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_100_by_1",
                                                          "typeString": "int_const 100"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "hexValue": "3830",
                                                            "id": 1641,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "16271:2:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_80_by_1",
                                                              "typeString": "int_const 80"
                                                            },
                                                            "value": "80"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_rational_80_by_1",
                                                              "typeString": "int_const 80"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                              "argumentTypes": null,
                                                              "id": 1637,
                                                              "name": "seed_balance",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 49,
                                                              "src": "16246:12:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                "typeString": "mapping(address => uint256)"
                                                              }
                                                            },
                                                            "id": 1639,
                                                            "indexExpression": {
                                                              "argumentTypes": null,
                                                              "id": 1638,
                                                              "name": "sender",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 1441,
                                                              "src": "16259:6:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "16246:20:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 1640,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "mul",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 3532,
                                                          "src": "16246:24:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 1642,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "16246:28:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1643,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "div",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3557,
                                                      "src": "16246:32:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1645,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "16246:37:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "functionReturnParameters": 1445,
                                                  "id": 1646,
                                                  "nodeType": "Return",
                                                  "src": "16239:44:1"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 1702,
                                          "nodeType": "IfStatement",
                                          "src": "16054:667:1",
                                          "trueBody": {
                                            "id": 1632,
                                            "nodeType": "Block",
                                            "src": "16088:83:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "313030",
                                                      "id": 1629,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "16156:3:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      },
                                                      "value": "100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "3735",
                                                          "id": 1626,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "16148:2:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_75_by_1",
                                                            "typeString": "int_const 75"
                                                          },
                                                          "value": "75"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_75_by_1",
                                                            "typeString": "int_const 75"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 1622,
                                                            "name": "seed_balance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 49,
                                                            "src": "16123:12:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                              "typeString": "mapping(address => uint256)"
                                                            }
                                                          },
                                                          "id": 1624,
                                                          "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 1623,
                                                            "name": "sender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1441,
                                                            "src": "16136:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "16123:20:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 1625,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "mul",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3532,
                                                        "src": "16123:24:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 1627,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "16123:28:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1628,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "div",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3557,
                                                    "src": "16123:32:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1630,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "16123:37:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "functionReturnParameters": 1445,
                                                "id": 1631,
                                                "nodeType": "Return",
                                                "src": "16116:44:1"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1703,
                                        "nodeType": "IfStatement",
                                        "src": "15931:790:1",
                                        "trueBody": {
                                          "id": 1617,
                                          "nodeType": "Block",
                                          "src": "15965:83:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "313030",
                                                    "id": 1614,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "16033:3:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "3730",
                                                        "id": 1611,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "16025:2:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_70_by_1",
                                                          "typeString": "int_const 70"
                                                        },
                                                        "value": "70"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_70_by_1",
                                                          "typeString": "int_const 70"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "baseExpression": {
                                                          "argumentTypes": null,
                                                          "id": 1607,
                                                          "name": "seed_balance",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 49,
                                                          "src": "16000:12:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                            "typeString": "mapping(address => uint256)"
                                                          }
                                                        },
                                                        "id": 1609,
                                                        "indexExpression": {
                                                          "argumentTypes": null,
                                                          "id": 1608,
                                                          "name": "sender",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1441,
                                                          "src": "16013:6:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "16000:20:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1610,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "mul",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3532,
                                                      "src": "16000:24:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1612,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "16000:28:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1613,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "div",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3557,
                                                  "src": "16000:32:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1615,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "16000:37:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "functionReturnParameters": 1445,
                                              "id": 1616,
                                              "nodeType": "Return",
                                              "src": "15993:44:1"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1704,
                                      "nodeType": "IfStatement",
                                      "src": "15808:913:1",
                                      "trueBody": {
                                        "id": 1602,
                                        "nodeType": "Block",
                                        "src": "15842:83:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "313030",
                                                  "id": 1599,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "15910:3:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  },
                                                  "value": "100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "3635",
                                                      "id": 1596,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "15902:2:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_65_by_1",
                                                        "typeString": "int_const 65"
                                                      },
                                                      "value": "65"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_65_by_1",
                                                        "typeString": "int_const 65"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 1592,
                                                        "name": "seed_balance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 49,
                                                        "src": "15877:12:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                          "typeString": "mapping(address => uint256)"
                                                        }
                                                      },
                                                      "id": 1594,
                                                      "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 1593,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1441,
                                                        "src": "15890:6:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "15877:20:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1595,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3532,
                                                    "src": "15877:24:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1597,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "15877:28:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1598,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3557,
                                                "src": "15877:32:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1600,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "15877:37:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 1445,
                                            "id": 1601,
                                            "nodeType": "Return",
                                            "src": "15870:44:1"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1705,
                                    "nodeType": "IfStatement",
                                    "src": "15685:1036:1",
                                    "trueBody": {
                                      "id": 1587,
                                      "nodeType": "Block",
                                      "src": "15719:83:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "313030",
                                                "id": 1584,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "15787:3:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "3630",
                                                    "id": 1581,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "15779:2:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_60_by_1",
                                                      "typeString": "int_const 60"
                                                    },
                                                    "value": "60"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_60_by_1",
                                                      "typeString": "int_const 60"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                      "argumentTypes": null,
                                                      "id": 1577,
                                                      "name": "seed_balance",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 49,
                                                      "src": "15754:12:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                        "typeString": "mapping(address => uint256)"
                                                      }
                                                    },
                                                    "id": 1579,
                                                    "indexExpression": {
                                                      "argumentTypes": null,
                                                      "id": 1578,
                                                      "name": "sender",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1441,
                                                      "src": "15767:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "15754:20:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1580,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3532,
                                                  "src": "15754:24:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1582,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "15754:28:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1583,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "div",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3557,
                                              "src": "15754:32:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1585,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15754:37:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 1445,
                                          "id": 1586,
                                          "nodeType": "Return",
                                          "src": "15747:44:1"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 1706,
                                  "nodeType": "IfStatement",
                                  "src": "15562:1159:1",
                                  "trueBody": {
                                    "id": 1572,
                                    "nodeType": "Block",
                                    "src": "15596:83:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "313030",
                                              "id": 1569,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "15664:3:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "3535",
                                                  "id": 1566,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "15656:2:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_55_by_1",
                                                    "typeString": "int_const 55"
                                                  },
                                                  "value": "55"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_55_by_1",
                                                    "typeString": "int_const 55"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 1562,
                                                    "name": "seed_balance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 49,
                                                    "src": "15631:12:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                      "typeString": "mapping(address => uint256)"
                                                    }
                                                  },
                                                  "id": 1564,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 1563,
                                                    "name": "sender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1441,
                                                    "src": "15644:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "15631:20:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1565,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "mul",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3532,
                                                "src": "15631:24:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1567,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "15631:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1568,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3557,
                                            "src": "15631:32:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1570,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15631:37:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 1445,
                                        "id": 1571,
                                        "nodeType": "Return",
                                        "src": "15624:44:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 1707,
                                "nodeType": "IfStatement",
                                "src": "15439:1282:1",
                                "trueBody": {
                                  "id": 1557,
                                  "nodeType": "Block",
                                  "src": "15473:83:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 1554,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15541:3:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "3530",
                                                "id": 1551,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "15533:2:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_50_by_1",
                                                  "typeString": "int_const 50"
                                                },
                                                "value": "50"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_50_by_1",
                                                  "typeString": "int_const 50"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 1547,
                                                  "name": "seed_balance",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 49,
                                                  "src": "15508:12:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                  }
                                                },
                                                "id": 1549,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 1548,
                                                  "name": "sender",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1441,
                                                  "src": "15521:6:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "15508:20:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1550,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3532,
                                              "src": "15508:24:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1552,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "15508:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1553,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3557,
                                          "src": "15508:32:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1555,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15508:37:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 1445,
                                      "id": 1556,
                                      "nodeType": "Return",
                                      "src": "15501:44:1"
                                    }
                                  ]
                                }
                              },
                              "id": 1708,
                              "nodeType": "IfStatement",
                              "src": "15316:1405:1",
                              "trueBody": {
                                "id": 1542,
                                "nodeType": "Block",
                                "src": "15350:83:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 1539,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15418:3:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3435",
                                              "id": 1536,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "15410:2:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_45_by_1",
                                                "typeString": "int_const 45"
                                              },
                                              "value": "45"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_45_by_1",
                                                "typeString": "int_const 45"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1532,
                                                "name": "seed_balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 49,
                                                "src": "15385:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 1534,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1533,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1441,
                                                "src": "15398:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "15385:20:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1535,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3532,
                                            "src": "15385:24:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1537,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15385:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1538,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3557,
                                        "src": "15385:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1540,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15385:37:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 1445,
                                    "id": 1541,
                                    "nodeType": "Return",
                                    "src": "15378:44:1"
                                  }
                                ]
                              }
                            },
                            "id": 1709,
                            "nodeType": "IfStatement",
                            "src": "15193:1528:1",
                            "trueBody": {
                              "id": 1527,
                              "nodeType": "Block",
                              "src": "15227:83:1",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 1524,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15295:3:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "3430",
                                            "id": 1521,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15287:2:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_40_by_1",
                                              "typeString": "int_const 40"
                                            },
                                            "value": "40"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_40_by_1",
                                              "typeString": "int_const 40"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1517,
                                              "name": "seed_balance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 49,
                                              "src": "15262:12:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 1519,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 1518,
                                              "name": "sender",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1441,
                                              "src": "15275:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15262:20:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1520,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3532,
                                          "src": "15262:24:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1522,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "15262:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1523,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3557,
                                      "src": "15262:32:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15262:37:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 1445,
                                  "id": 1526,
                                  "nodeType": "Return",
                                  "src": "15255:44:1"
                                }
                              ]
                            }
                          },
                          "id": 1710,
                          "nodeType": "IfStatement",
                          "src": "15070:1651:1",
                          "trueBody": {
                            "id": 1512,
                            "nodeType": "Block",
                            "src": "15104:83:1",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 1509,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15172:3:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "3335",
                                          "id": 1506,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15164:2:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_35_by_1",
                                            "typeString": "int_const 35"
                                          },
                                          "value": "35"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_35_by_1",
                                            "typeString": "int_const 35"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 1502,
                                            "name": "seed_balance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 49,
                                            "src": "15139:12:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 1504,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1503,
                                            "name": "sender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1441,
                                            "src": "15152:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15139:20:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1505,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3532,
                                        "src": "15139:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1507,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15139:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1508,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3557,
                                    "src": "15139:32:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1510,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15139:37:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 1445,
                                "id": 1511,
                                "nodeType": "Return",
                                "src": "15132:44:1"
                              }
                            ]
                          }
                        },
                        "id": 1711,
                        "nodeType": "IfStatement",
                        "src": "14947:1774:1",
                        "trueBody": {
                          "id": 1497,
                          "nodeType": "Block",
                          "src": "14981:83:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "313030",
                                    "id": 1494,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15049:3:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "3330",
                                        "id": 1491,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15041:2:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_30_by_1",
                                          "typeString": "int_const 30"
                                        },
                                        "value": "30"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_30_by_1",
                                          "typeString": "int_const 30"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1487,
                                          "name": "seed_balance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 49,
                                          "src": "15016:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 1489,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1488,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1441,
                                          "src": "15029:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15016:20:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1490,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3532,
                                      "src": "15016:24:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15016:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3557,
                                  "src": "15016:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15016:37:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1445,
                              "id": 1496,
                              "nodeType": "Return",
                              "src": "15009:44:1"
                            }
                          ]
                        }
                      },
                      "id": 1712,
                      "nodeType": "IfStatement",
                      "src": "14824:1897:1",
                      "trueBody": {
                        "id": 1482,
                        "nodeType": "Block",
                        "src": "14858:83:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "313030",
                                  "id": 1479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14926:3:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "3235",
                                      "id": 1476,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14918:2:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_25_by_1",
                                        "typeString": "int_const 25"
                                      },
                                      "value": "25"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_25_by_1",
                                        "typeString": "int_const 25"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1472,
                                        "name": "seed_balance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49,
                                        "src": "14893:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1474,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1473,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1441,
                                        "src": "14906:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14893:20:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1475,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3532,
                                    "src": "14893:24:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14893:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3557,
                                "src": "14893:32:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14893:37:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 1445,
                            "id": 1481,
                            "nodeType": "Return",
                            "src": "14886:44:1"
                          }
                        ]
                      }
                    },
                    "id": 1713,
                    "nodeType": "IfStatement",
                    "src": "14701:2020:1",
                    "trueBody": {
                      "id": 1467,
                      "nodeType": "Block",
                      "src": "14735:83:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 1464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14803:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3230",
                                    "id": 1461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14795:2:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_20_by_1",
                                      "typeString": "int_const 20"
                                    },
                                    "value": "20"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_20_by_1",
                                      "typeString": "int_const 20"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1457,
                                      "name": "seed_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 49,
                                      "src": "14770:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1459,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1458,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1441,
                                      "src": "14783:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14770:20:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3532,
                                  "src": "14770:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14770:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3557,
                              "src": "14770:32:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14770:37:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1445,
                          "id": 1466,
                          "nodeType": "Return",
                          "src": "14763:44:1"
                        }
                      ]
                    }
                  },
                  "id": 1714,
                  "nodeType": "IfStatement",
                  "src": "14614:2107:1",
                  "trueBody": {
                    "id": 1452,
                    "nodeType": "Block",
                    "src": "14648:47:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14683:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1445,
                        "id": 1451,
                        "nodeType": "Return",
                        "src": "14676:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_available_seed_balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "14525:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14525:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14515:30:1"
            },
            "returnParameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1444,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1716,
                  "src": "14591:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14591:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14590:9:1"
            },
            "scope": 2509,
            "src": "14480:2247:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2008,
              "nodeType": "Block",
              "src": "16860:2300:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1723,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "16874:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16874:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31353735313538343030",
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16892:10:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1575158400_by_1",
                        "typeString": "int_const 1575158400"
                      },
                      "value": "1575158400"
                    },
                    "src": "16874:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1730,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9949,
                          "src": "16961:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "16961:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31353830353135323030",
                        "id": 1732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16979:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1580515200_by_1",
                          "typeString": "int_const 1580515200"
                        },
                        "value": "1580515200"
                      },
                      "src": "16961:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1745,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "17087:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "17087:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31353838323931323030",
                          "id": 1747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17105:10:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1588291200_by_1",
                            "typeString": "int_const 1588291200"
                          },
                          "value": "1588291200"
                        },
                        "src": "17087:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1760,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9949,
                              "src": "17213:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "17213:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31363036373830383030",
                            "id": 1762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17231:10:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1606780800_by_1",
                              "typeString": "int_const 1606780800"
                            },
                            "value": "1606780800"
                          },
                          "src": "17213:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1775,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9949,
                                "src": "17339:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "17339:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31363137323335323030",
                              "id": 1777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17357:10:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1617235200_by_1",
                                "typeString": "int_const 1617235200"
                              },
                              "value": "1617235200"
                            },
                            "src": "17339:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1790,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9949,
                                  "src": "17465:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "17465:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31363139383237323030",
                                "id": 1792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17483:10:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1619827200_by_1",
                                  "typeString": "int_const 1619827200"
                                },
                                "value": "1619827200"
                              },
                              "src": "17465:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1805,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9949,
                                    "src": "17591:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "17591:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31363237373736303030",
                                  "id": 1807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17609:10:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1627776000_by_1",
                                    "typeString": "int_const 1627776000"
                                  },
                                  "value": "1627776000"
                                },
                                "src": "17591:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1823,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1820,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9949,
                                      "src": "17717:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1821,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "17717:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31363338333136383030",
                                    "id": 1822,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17735:10:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1638316800_by_1",
                                      "typeString": "int_const 1638316800"
                                    },
                                    "value": "1638316800"
                                  },
                                  "src": "17717:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1835,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9949,
                                        "src": "17843:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1836,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "17843:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31363436303932383030",
                                      "id": 1837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17861:10:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1646092800_by_1",
                                        "typeString": "int_const 1646092800"
                                      },
                                      "value": "1646092800"
                                    },
                                    "src": "17843:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1853,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1850,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9949,
                                          "src": "17969:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1851,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "17969:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31363536363333363030",
                                        "id": 1852,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17987:10:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1656633600_by_1",
                                          "typeString": "int_const 1656633600"
                                        },
                                        "value": "1656633600"
                                      },
                                      "src": "17969:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1868,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1865,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9949,
                                            "src": "18095:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1866,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "18095:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31363634353832343030",
                                          "id": 1867,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18113:10:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1664582400_by_1",
                                            "typeString": "int_const 1664582400"
                                          },
                                          "value": "1664582400"
                                        },
                                        "src": "18095:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1883,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1880,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9949,
                                              "src": "18221:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 1881,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "18221:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31363639383532383030",
                                            "id": 1882,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "18239:10:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1669852800_by_1",
                                              "typeString": "int_const 1669852800"
                                            },
                                            "value": "1669852800"
                                          },
                                          "src": "18221:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1898,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1895,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9949,
                                                "src": "18347:5:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 1896,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "18347:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31363830333037323030",
                                              "id": 1897,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "18365:10:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1680307200_by_1",
                                                "typeString": "int_const 1680307200"
                                              },
                                              "value": "1680307200"
                                            },
                                            "src": "18347:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1913,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1910,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 9949,
                                                  "src": "18473:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 1911,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "18473:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31363838313639363030",
                                                "id": 1912,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "18491:10:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1688169600_by_1",
                                                  "typeString": "int_const 1688169600"
                                                },
                                                "value": "1688169600"
                                              },
                                              "src": "18473:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 1928,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 1925,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 9949,
                                                    "src": "18599:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_block",
                                                      "typeString": "block"
                                                    }
                                                  },
                                                  "id": 1926,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "timestamp",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": null,
                                                  "src": "18599:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "31363936313138343030",
                                                  "id": 1927,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "18617:10:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1696118400_by_1",
                                                    "typeString": "int_const 1696118400"
                                                  },
                                                  "value": "1696118400"
                                                },
                                                "src": "18599:28:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": {
                                                "condition": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1943,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 1940,
                                                      "name": "block",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 9949,
                                                      "src": "18725:5:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                      }
                                                    },
                                                    "id": 1941,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "18725:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "<",
                                                  "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "31373031333838383030",
                                                    "id": 1942,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "18743:10:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_1701388800_by_1",
                                                      "typeString": "int_const 1701388800"
                                                    },
                                                    "value": "1701388800"
                                                  },
                                                  "src": "18725:28:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": {
                                                  "condition": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 1958,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 1955,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 9949,
                                                        "src": "18851:5:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_block",
                                                          "typeString": "block"
                                                        }
                                                      },
                                                      "id": 1956,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "timestamp",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "18851:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<",
                                                    "rightExpression": {
                                                      "argumentTypes": null,
                                                      "hexValue": "31373039323531323030",
                                                      "id": 1957,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "18869:10:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1709251200_by_1",
                                                        "typeString": "int_const 1709251200"
                                                      },
                                                      "value": "1709251200"
                                                    },
                                                    "src": "18851:28:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseBody": {
                                                    "condition": {
                                                      "argumentTypes": null,
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1973,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 1970,
                                                          "name": "block",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 9949,
                                                          "src": "18977:5:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                          }
                                                        },
                                                        "id": 1971,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "timestamp",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "18977:15:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "<",
                                                      "rightExpression": {
                                                        "argumentTypes": null,
                                                        "hexValue": "31373139373932303030",
                                                        "id": 1972,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "18995:10:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_1719792000_by_1",
                                                          "typeString": "int_const 1719792000"
                                                        },
                                                        "value": "1719792000"
                                                      },
                                                      "src": "18977:28:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "falseBody": {
                                                      "id": 1989,
                                                      "nodeType": "Block",
                                                      "src": "19099:55:1",
                                                      "statements": [
                                                        {
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                              "argumentTypes": null,
                                                              "id": 1985,
                                                              "name": "private_balance",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 53,
                                                              "src": "19120:15:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                "typeString": "mapping(address => uint256)"
                                                              }
                                                            },
                                                            "id": 1987,
                                                            "indexExpression": {
                                                              "argumentTypes": null,
                                                              "id": 1986,
                                                              "name": "sender",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 1718,
                                                              "src": "19136:6:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "19120:23:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "functionReturnParameters": 1722,
                                                          "id": 1988,
                                                          "nodeType": "Return",
                                                          "src": "19113:30:1"
                                                        }
                                                      ]
                                                    },
                                                    "id": 1990,
                                                    "nodeType": "IfStatement",
                                                    "src": "18973:181:1",
                                                    "trueBody": {
                                                      "id": 1984,
                                                      "nodeType": "Block",
                                                      "src": "19007:86:1",
                                                      "statements": [
                                                        {
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                              {
                                                                "argumentTypes": null,
                                                                "hexValue": "313030",
                                                                "id": 1981,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "19078:3:1",
                                                                "subdenomination": null,
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_rational_100_by_1",
                                                                  "typeString": "int_const 100"
                                                                },
                                                                "value": "100"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_rational_100_by_1",
                                                                  "typeString": "int_const 100"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": null,
                                                                "arguments": [
                                                                  {
                                                                    "argumentTypes": null,
                                                                    "hexValue": "3935",
                                                                    "id": 1978,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "19070:2:1",
                                                                    "subdenomination": null,
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_rational_95_by_1",
                                                                      "typeString": "int_const 95"
                                                                    },
                                                                    "value": "95"
                                                                  }
                                                                ],
                                                                "expression": {
                                                                  "argumentTypes": [
                                                                    {
                                                                      "typeIdentifier": "t_rational_95_by_1",
                                                                      "typeString": "int_const 95"
                                                                    }
                                                                  ],
                                                                  "expression": {
                                                                    "argumentTypes": null,
                                                                    "baseExpression": {
                                                                      "argumentTypes": null,
                                                                      "id": 1974,
                                                                      "name": "private_balance",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 53,
                                                                      "src": "19042:15:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                        "typeString": "mapping(address => uint256)"
                                                                      }
                                                                    },
                                                                    "id": 1976,
                                                                    "indexExpression": {
                                                                      "argumentTypes": null,
                                                                      "id": 1975,
                                                                      "name": "sender",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 1718,
                                                                      "src": "19058:6:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_address",
                                                                        "typeString": "address"
                                                                      }
                                                                    },
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "IndexAccess",
                                                                    "src": "19042:23:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_uint256",
                                                                      "typeString": "uint256"
                                                                    }
                                                                  },
                                                                  "id": 1977,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "memberName": "mul",
                                                                  "nodeType": "MemberAccess",
                                                                  "referencedDeclaration": 3532,
                                                                  "src": "19042:27:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                  }
                                                                },
                                                                "id": 1979,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "19042:31:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              },
                                                              "id": 1980,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "memberName": "div",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 3557,
                                                              "src": "19042:35:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                              }
                                                            },
                                                            "id": 1982,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "19042:40:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "functionReturnParameters": 1722,
                                                          "id": 1983,
                                                          "nodeType": "Return",
                                                          "src": "19035:47:1"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "id": 1991,
                                                  "nodeType": "IfStatement",
                                                  "src": "18847:307:1",
                                                  "trueBody": {
                                                    "id": 1969,
                                                    "nodeType": "Block",
                                                    "src": "18881:86:1",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "arguments": [
                                                            {
                                                              "argumentTypes": null,
                                                              "hexValue": "313030",
                                                              "id": 1966,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "18952:3:1",
                                                              "subdenomination": null,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_100_by_1",
                                                                "typeString": "int_const 100"
                                                              },
                                                              "value": "100"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_100_by_1",
                                                                "typeString": "int_const 100"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "arguments": [
                                                                {
                                                                  "argumentTypes": null,
                                                                  "hexValue": "3930",
                                                                  "id": 1963,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "number",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "18944:2:1",
                                                                  "subdenomination": null,
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_90_by_1",
                                                                    "typeString": "int_const 90"
                                                                  },
                                                                  "value": "90"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": [
                                                                  {
                                                                    "typeIdentifier": "t_rational_90_by_1",
                                                                    "typeString": "int_const 90"
                                                                  }
                                                                ],
                                                                "expression": {
                                                                  "argumentTypes": null,
                                                                  "baseExpression": {
                                                                    "argumentTypes": null,
                                                                    "id": 1959,
                                                                    "name": "private_balance",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 53,
                                                                    "src": "18916:15:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                      "typeString": "mapping(address => uint256)"
                                                                    }
                                                                  },
                                                                  "id": 1961,
                                                                  "indexExpression": {
                                                                    "argumentTypes": null,
                                                                    "id": 1960,
                                                                    "name": "sender",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1718,
                                                                    "src": "18932:6:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_address",
                                                                      "typeString": "address"
                                                                    }
                                                                  },
                                                                  "isConstant": false,
                                                                  "isLValue": true,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "nodeType": "IndexAccess",
                                                                  "src": "18916:23:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                  }
                                                                },
                                                                "id": 1962,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "mul",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": 3532,
                                                                "src": "18916:27:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                                }
                                                              },
                                                              "id": 1964,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "kind": "functionCall",
                                                              "lValueRequested": false,
                                                              "names": [],
                                                              "nodeType": "FunctionCall",
                                                              "src": "18916:31:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "id": 1965,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "div",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3557,
                                                            "src": "18916:35:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                          },
                                                          "id": 1967,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "kind": "functionCall",
                                                          "lValueRequested": false,
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "18916:40:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "functionReturnParameters": 1722,
                                                        "id": 1968,
                                                        "nodeType": "Return",
                                                        "src": "18909:47:1"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "id": 1992,
                                                "nodeType": "IfStatement",
                                                "src": "18721:433:1",
                                                "trueBody": {
                                                  "id": 1954,
                                                  "nodeType": "Block",
                                                  "src": "18755:86:1",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "hexValue": "313030",
                                                            "id": 1951,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "18826:3:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_100_by_1",
                                                              "typeString": "int_const 100"
                                                            },
                                                            "value": "100"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_rational_100_by_1",
                                                              "typeString": "int_const 100"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                              {
                                                                "argumentTypes": null,
                                                                "hexValue": "3835",
                                                                "id": 1948,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "18818:2:1",
                                                                "subdenomination": null,
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_rational_85_by_1",
                                                                  "typeString": "int_const 85"
                                                                },
                                                                "value": "85"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_rational_85_by_1",
                                                                  "typeString": "int_const 85"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": null,
                                                                "baseExpression": {
                                                                  "argumentTypes": null,
                                                                  "id": 1944,
                                                                  "name": "private_balance",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 53,
                                                                  "src": "18790:15:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                    "typeString": "mapping(address => uint256)"
                                                                  }
                                                                },
                                                                "id": 1946,
                                                                "indexExpression": {
                                                                  "argumentTypes": null,
                                                                  "id": 1945,
                                                                  "name": "sender",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 1718,
                                                                  "src": "18806:6:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_address",
                                                                    "typeString": "address"
                                                                  }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "18790:23:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              },
                                                              "id": 1947,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "memberName": "mul",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 3532,
                                                              "src": "18790:27:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                              }
                                                            },
                                                            "id": 1949,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "18790:31:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 1950,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "div",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 3557,
                                                          "src": "18790:35:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 1952,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "18790:40:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "functionReturnParameters": 1722,
                                                      "id": 1953,
                                                      "nodeType": "Return",
                                                      "src": "18783:47:1"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 1993,
                                              "nodeType": "IfStatement",
                                              "src": "18595:559:1",
                                              "trueBody": {
                                                "id": 1939,
                                                "nodeType": "Block",
                                                "src": "18629:86:1",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "313030",
                                                          "id": 1936,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "18700:3:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                          },
                                                          "value": "100"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_100_by_1",
                                                            "typeString": "int_const 100"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "arguments": [
                                                            {
                                                              "argumentTypes": null,
                                                              "hexValue": "3830",
                                                              "id": 1933,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "18692:2:1",
                                                              "subdenomination": null,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_80_by_1",
                                                                "typeString": "int_const 80"
                                                              },
                                                              "value": "80"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_80_by_1",
                                                                "typeString": "int_const 80"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "baseExpression": {
                                                                "argumentTypes": null,
                                                                "id": 1929,
                                                                "name": "private_balance",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 53,
                                                                "src": "18664:15:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                  "typeString": "mapping(address => uint256)"
                                                                }
                                                              },
                                                              "id": 1931,
                                                              "indexExpression": {
                                                                "argumentTypes": null,
                                                                "id": 1930,
                                                                "name": "sender",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1718,
                                                                "src": "18680:6:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_address",
                                                                  "typeString": "address"
                                                                }
                                                              },
                                                              "isConstant": false,
                                                              "isLValue": true,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "nodeType": "IndexAccess",
                                                              "src": "18664:23:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "id": 1932,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "mul",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3532,
                                                            "src": "18664:27:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                          },
                                                          "id": 1934,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "kind": "functionCall",
                                                          "lValueRequested": false,
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "18664:31:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 1935,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "div",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3557,
                                                        "src": "18664:35:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 1937,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "18664:40:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "functionReturnParameters": 1722,
                                                    "id": 1938,
                                                    "nodeType": "Return",
                                                    "src": "18657:47:1"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 1994,
                                            "nodeType": "IfStatement",
                                            "src": "18469:685:1",
                                            "trueBody": {
                                              "id": 1924,
                                              "nodeType": "Block",
                                              "src": "18503:86:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "313030",
                                                        "id": 1921,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "18574:3:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_100_by_1",
                                                          "typeString": "int_const 100"
                                                        },
                                                        "value": "100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_100_by_1",
                                                          "typeString": "int_const 100"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "hexValue": "3735",
                                                            "id": 1918,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "18566:2:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_75_by_1",
                                                              "typeString": "int_const 75"
                                                            },
                                                            "value": "75"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_rational_75_by_1",
                                                              "typeString": "int_const 75"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                              "argumentTypes": null,
                                                              "id": 1914,
                                                              "name": "private_balance",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 53,
                                                              "src": "18538:15:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                "typeString": "mapping(address => uint256)"
                                                              }
                                                            },
                                                            "id": 1916,
                                                            "indexExpression": {
                                                              "argumentTypes": null,
                                                              "id": 1915,
                                                              "name": "sender",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 1718,
                                                              "src": "18554:6:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "18538:23:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 1917,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "mul",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 3532,
                                                          "src": "18538:27:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 1919,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "18538:31:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1920,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "div",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3557,
                                                      "src": "18538:35:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1922,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "18538:40:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "functionReturnParameters": 1722,
                                                  "id": 1923,
                                                  "nodeType": "Return",
                                                  "src": "18531:47:1"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 1995,
                                          "nodeType": "IfStatement",
                                          "src": "18343:811:1",
                                          "trueBody": {
                                            "id": 1909,
                                            "nodeType": "Block",
                                            "src": "18377:86:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "313030",
                                                      "id": 1906,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "18448:3:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      },
                                                      "value": "100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_100_by_1",
                                                        "typeString": "int_const 100"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "3730",
                                                          "id": 1903,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "18440:2:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_70_by_1",
                                                            "typeString": "int_const 70"
                                                          },
                                                          "value": "70"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_70_by_1",
                                                            "typeString": "int_const 70"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 1899,
                                                            "name": "private_balance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 53,
                                                            "src": "18412:15:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                              "typeString": "mapping(address => uint256)"
                                                            }
                                                          },
                                                          "id": 1901,
                                                          "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 1900,
                                                            "name": "sender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1718,
                                                            "src": "18428:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "18412:23:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 1902,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "mul",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3532,
                                                        "src": "18412:27:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 1904,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "18412:31:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1905,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "div",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3557,
                                                    "src": "18412:35:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1907,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "18412:40:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "functionReturnParameters": 1722,
                                                "id": 1908,
                                                "nodeType": "Return",
                                                "src": "18405:47:1"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1996,
                                        "nodeType": "IfStatement",
                                        "src": "18217:937:1",
                                        "trueBody": {
                                          "id": 1894,
                                          "nodeType": "Block",
                                          "src": "18251:86:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "313030",
                                                    "id": 1891,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "18322:3:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "3635",
                                                        "id": 1888,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "18314:2:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_65_by_1",
                                                          "typeString": "int_const 65"
                                                        },
                                                        "value": "65"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_65_by_1",
                                                          "typeString": "int_const 65"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "baseExpression": {
                                                          "argumentTypes": null,
                                                          "id": 1884,
                                                          "name": "private_balance",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 53,
                                                          "src": "18286:15:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                            "typeString": "mapping(address => uint256)"
                                                          }
                                                        },
                                                        "id": 1886,
                                                        "indexExpression": {
                                                          "argumentTypes": null,
                                                          "id": 1885,
                                                          "name": "sender",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1718,
                                                          "src": "18302:6:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "18286:23:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1887,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "mul",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3532,
                                                      "src": "18286:27:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 1889,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "18286:31:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1890,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "div",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3557,
                                                  "src": "18286:35:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1892,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "18286:40:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "functionReturnParameters": 1722,
                                              "id": 1893,
                                              "nodeType": "Return",
                                              "src": "18279:47:1"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1997,
                                      "nodeType": "IfStatement",
                                      "src": "18091:1063:1",
                                      "trueBody": {
                                        "id": 1879,
                                        "nodeType": "Block",
                                        "src": "18125:86:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "313030",
                                                  "id": 1876,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "18196:3:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  },
                                                  "value": "100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_100_by_1",
                                                    "typeString": "int_const 100"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "3630",
                                                      "id": 1873,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "18188:2:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_60_by_1",
                                                        "typeString": "int_const 60"
                                                      },
                                                      "value": "60"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_60_by_1",
                                                        "typeString": "int_const 60"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 1869,
                                                        "name": "private_balance",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 53,
                                                        "src": "18160:15:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                          "typeString": "mapping(address => uint256)"
                                                        }
                                                      },
                                                      "id": 1871,
                                                      "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 1870,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1718,
                                                        "src": "18176:6:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "18160:23:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1872,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3532,
                                                    "src": "18160:27:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 1874,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "18160:31:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1875,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3557,
                                                "src": "18160:35:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1877,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "18160:40:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 1722,
                                            "id": 1878,
                                            "nodeType": "Return",
                                            "src": "18153:47:1"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1998,
                                    "nodeType": "IfStatement",
                                    "src": "17965:1189:1",
                                    "trueBody": {
                                      "id": 1864,
                                      "nodeType": "Block",
                                      "src": "17999:86:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "313030",
                                                "id": 1861,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "18070:3:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "3535",
                                                    "id": 1858,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "18062:2:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_55_by_1",
                                                      "typeString": "int_const 55"
                                                    },
                                                    "value": "55"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_55_by_1",
                                                      "typeString": "int_const 55"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                      "argumentTypes": null,
                                                      "id": 1854,
                                                      "name": "private_balance",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 53,
                                                      "src": "18034:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                        "typeString": "mapping(address => uint256)"
                                                      }
                                                    },
                                                    "id": 1856,
                                                    "indexExpression": {
                                                      "argumentTypes": null,
                                                      "id": 1855,
                                                      "name": "sender",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1718,
                                                      "src": "18050:6:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "18034:23:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1857,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3532,
                                                  "src": "18034:27:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 1859,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "18034:31:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1860,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "div",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3557,
                                              "src": "18034:35:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1862,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "18034:40:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 1722,
                                          "id": 1863,
                                          "nodeType": "Return",
                                          "src": "18027:47:1"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 1999,
                                  "nodeType": "IfStatement",
                                  "src": "17839:1315:1",
                                  "trueBody": {
                                    "id": 1849,
                                    "nodeType": "Block",
                                    "src": "17873:86:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "313030",
                                              "id": 1846,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "17944:3:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "3530",
                                                  "id": 1843,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "17936:2:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_50_by_1",
                                                    "typeString": "int_const 50"
                                                  },
                                                  "value": "50"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_50_by_1",
                                                    "typeString": "int_const 50"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 1839,
                                                    "name": "private_balance",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 53,
                                                    "src": "17908:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                      "typeString": "mapping(address => uint256)"
                                                    }
                                                  },
                                                  "id": 1841,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 1840,
                                                    "name": "sender",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1718,
                                                    "src": "17924:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "17908:23:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1842,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "mul",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3532,
                                                "src": "17908:27:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1844,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "17908:31:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1845,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3557,
                                            "src": "17908:35:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1847,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17908:40:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 1722,
                                        "id": 1848,
                                        "nodeType": "Return",
                                        "src": "17901:47:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 2000,
                                "nodeType": "IfStatement",
                                "src": "17713:1441:1",
                                "trueBody": {
                                  "id": 1834,
                                  "nodeType": "Block",
                                  "src": "17747:86:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 1831,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17818:3:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "3435",
                                                "id": 1828,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "17810:2:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_45_by_1",
                                                  "typeString": "int_const 45"
                                                },
                                                "value": "45"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_45_by_1",
                                                  "typeString": "int_const 45"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 1824,
                                                  "name": "private_balance",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 53,
                                                  "src": "17782:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                    "typeString": "mapping(address => uint256)"
                                                  }
                                                },
                                                "id": 1826,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 1825,
                                                  "name": "sender",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1718,
                                                  "src": "17798:6:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "17782:23:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1827,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3532,
                                              "src": "17782:27:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 1829,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "17782:31:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1830,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3557,
                                          "src": "17782:35:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1832,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17782:40:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 1722,
                                      "id": 1833,
                                      "nodeType": "Return",
                                      "src": "17775:47:1"
                                    }
                                  ]
                                }
                              },
                              "id": 2001,
                              "nodeType": "IfStatement",
                              "src": "17587:1567:1",
                              "trueBody": {
                                "id": 1819,
                                "nodeType": "Block",
                                "src": "17621:86:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "313030",
                                          "id": 1816,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17692:3:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "3430",
                                              "id": 1813,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "17684:2:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_40_by_1",
                                                "typeString": "int_const 40"
                                              },
                                              "value": "40"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_40_by_1",
                                                "typeString": "int_const 40"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1809,
                                                "name": "private_balance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 53,
                                                "src": "17656:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 1811,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1810,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1718,
                                                "src": "17672:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "17656:23:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1812,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3532,
                                            "src": "17656:27:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 1814,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "17656:31:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1815,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "div",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3557,
                                        "src": "17656:35:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1817,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17656:40:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 1722,
                                    "id": 1818,
                                    "nodeType": "Return",
                                    "src": "17649:47:1"
                                  }
                                ]
                              }
                            },
                            "id": 2002,
                            "nodeType": "IfStatement",
                            "src": "17461:1693:1",
                            "trueBody": {
                              "id": 1804,
                              "nodeType": "Block",
                              "src": "17495:86:1",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 1801,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17566:3:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "3335",
                                            "id": 1798,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17558:2:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_35_by_1",
                                              "typeString": "int_const 35"
                                            },
                                            "value": "35"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_35_by_1",
                                              "typeString": "int_const 35"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1794,
                                              "name": "private_balance",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 53,
                                              "src": "17530:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                "typeString": "mapping(address => uint256)"
                                              }
                                            },
                                            "id": 1796,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 1795,
                                              "name": "sender",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1718,
                                              "src": "17546:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "17530:23:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1797,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3532,
                                          "src": "17530:27:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 1799,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17530:31:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3557,
                                      "src": "17530:35:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1802,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17530:40:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 1722,
                                  "id": 1803,
                                  "nodeType": "Return",
                                  "src": "17523:47:1"
                                }
                              ]
                            }
                          },
                          "id": 2003,
                          "nodeType": "IfStatement",
                          "src": "17335:1819:1",
                          "trueBody": {
                            "id": 1789,
                            "nodeType": "Block",
                            "src": "17369:86:1",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "313030",
                                      "id": 1786,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17440:3:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "3330",
                                          "id": 1783,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17432:2:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_30_by_1",
                                            "typeString": "int_const 30"
                                          },
                                          "value": "30"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_30_by_1",
                                            "typeString": "int_const 30"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 1779,
                                            "name": "private_balance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 53,
                                            "src": "17404:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                              "typeString": "mapping(address => uint256)"
                                            }
                                          },
                                          "id": 1781,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1780,
                                            "name": "sender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1718,
                                            "src": "17420:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "17404:23:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1782,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3532,
                                        "src": "17404:27:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1784,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17404:31:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1785,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3557,
                                    "src": "17404:35:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1787,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17404:40:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 1722,
                                "id": 1788,
                                "nodeType": "Return",
                                "src": "17397:47:1"
                              }
                            ]
                          }
                        },
                        "id": 2004,
                        "nodeType": "IfStatement",
                        "src": "17209:1945:1",
                        "trueBody": {
                          "id": 1774,
                          "nodeType": "Block",
                          "src": "17243:86:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "313030",
                                    "id": 1771,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17314:3:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "3235",
                                        "id": 1768,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17306:2:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_25_by_1",
                                          "typeString": "int_const 25"
                                        },
                                        "value": "25"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_25_by_1",
                                          "typeString": "int_const 25"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1764,
                                          "name": "private_balance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 53,
                                          "src": "17278:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 1766,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1765,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1718,
                                          "src": "17294:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "17278:23:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3532,
                                      "src": "17278:27:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1769,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17278:31:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3557,
                                  "src": "17278:35:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17278:40:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1722,
                              "id": 1773,
                              "nodeType": "Return",
                              "src": "17271:47:1"
                            }
                          ]
                        }
                      },
                      "id": 2005,
                      "nodeType": "IfStatement",
                      "src": "17083:2071:1",
                      "trueBody": {
                        "id": 1759,
                        "nodeType": "Block",
                        "src": "17117:86:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "313030",
                                  "id": 1756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17188:3:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "3230",
                                      "id": 1753,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17180:2:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      },
                                      "value": "20"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_20_by_1",
                                        "typeString": "int_const 20"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1749,
                                        "name": "private_balance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 53,
                                        "src": "17152:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1751,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1750,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1718,
                                        "src": "17168:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17152:23:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1752,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3532,
                                    "src": "17152:27:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1754,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17152:31:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3557,
                                "src": "17152:35:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17152:40:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 1722,
                            "id": 1758,
                            "nodeType": "Return",
                            "src": "17145:47:1"
                          }
                        ]
                      }
                    },
                    "id": 2006,
                    "nodeType": "IfStatement",
                    "src": "16957:2197:1",
                    "trueBody": {
                      "id": 1744,
                      "nodeType": "Block",
                      "src": "16991:86:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 1741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17062:3:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3135",
                                    "id": 1738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17054:2:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_15_by_1",
                                      "typeString": "int_const 15"
                                    },
                                    "value": "15"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_15_by_1",
                                      "typeString": "int_const 15"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1734,
                                      "name": "private_balance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 53,
                                      "src": "17026:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1736,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1735,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1718,
                                      "src": "17042:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17026:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3532,
                                  "src": "17026:27:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17026:31:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3557,
                              "src": "17026:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17026:40:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1722,
                          "id": 1743,
                          "nodeType": "Return",
                          "src": "17019:47:1"
                        }
                      ]
                    }
                  },
                  "id": 2007,
                  "nodeType": "IfStatement",
                  "src": "16870:2284:1",
                  "trueBody": {
                    "id": 1729,
                    "nodeType": "Block",
                    "src": "16904:47:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16939:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1722,
                        "id": 1728,
                        "nodeType": "Return",
                        "src": "16932:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_available_private_balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2009,
                  "src": "16781:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16781:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16771:30:1"
            },
            "returnParameters": {
              "id": 1722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1721,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2009,
                  "src": "16847:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16847:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16846:9:1"
            },
            "scope": 2509,
            "src": "16733:2427:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2211,
              "nodeType": "Block",
              "src": "19288:1943:1",
              "statements": [
                {
                  "assignments": [
                    2017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2017,
                      "name": "available_bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 2211,
                      "src": "19298:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2016,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "19298:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2024,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3137",
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19347:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_17_by_1",
                          "typeString": "int_const 17"
                        },
                        "value": "17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_17_by_1",
                          "typeString": "int_const 17"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2018,
                          "name": "seed_bonus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "19324:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2020,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2019,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2011,
                          "src": "19335:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19324:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3557,
                      "src": "19324:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19324:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19298:52:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2025,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "19364:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "19364:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31353735313538343030",
                      "id": 2027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19382:10:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1575158400_by_1",
                        "typeString": "int_const 1575158400"
                      },
                      "value": "1575158400"
                    },
                    "src": "19364:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2032,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9949,
                          "src": "19451:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "19451:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31353833303230383030",
                        "id": 2034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19469:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1583020800_by_1",
                          "typeString": "int_const 1583020800"
                        },
                        "value": "1583020800"
                      },
                      "src": "19451:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2039,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "19552:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "19552:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31353933353631363030",
                          "id": 2041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19570:10:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1593561600_by_1",
                            "typeString": "int_const 1593561600"
                          },
                          "value": "1593561600"
                        },
                        "src": "19552:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2049,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9949,
                              "src": "19660:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "19660:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31363036373830383030",
                            "id": 2051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19678:10:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1606780800_by_1",
                              "typeString": "int_const 1606780800"
                            },
                            "value": "1606780800"
                          },
                          "src": "19660:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2059,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9949,
                                "src": "19768:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "19768:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31363137323335323030",
                              "id": 2061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19786:10:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1617235200_by_1",
                                "typeString": "int_const 1617235200"
                              },
                              "value": "1617235200"
                            },
                            "src": "19768:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2069,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9949,
                                  "src": "19876:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "19876:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31363235303937363030",
                                "id": 2071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19894:10:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1625097600_by_1",
                                  "typeString": "int_const 1625097600"
                                },
                                "value": "1625097600"
                              },
                              "src": "19876:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2079,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9949,
                                    "src": "19984:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "19984:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31363333303436343030",
                                  "id": 2081,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20002:10:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1633046400_by_1",
                                    "typeString": "int_const 1633046400"
                                  },
                                  "value": "1633046400"
                                },
                                "src": "19984:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2089,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9949,
                                      "src": "20092:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2090,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "20092:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31363338333136383030",
                                    "id": 2091,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "20110:10:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1638316800_by_1",
                                      "typeString": "int_const 1638316800"
                                    },
                                    "value": "1638316800"
                                  },
                                  "src": "20092:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2099,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9949,
                                        "src": "20200:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 2100,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "20200:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31363436303932383030",
                                      "id": 2101,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "20218:10:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1646092800_by_1",
                                        "typeString": "int_const 1646092800"
                                      },
                                      "value": "1646092800"
                                    },
                                    "src": "20200:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2112,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2109,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9949,
                                          "src": "20308:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2110,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "20308:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31363534303431363030",
                                        "id": 2111,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "20326:10:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1654041600_by_1",
                                          "typeString": "int_const 1654041600"
                                        },
                                        "value": "1654041600"
                                      },
                                      "src": "20308:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2122,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2119,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9949,
                                            "src": "20416:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 2120,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "20416:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31363631393930343030",
                                          "id": 2121,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "20434:10:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1661990400_by_1",
                                            "typeString": "int_const 1661990400"
                                          },
                                          "value": "1661990400"
                                        },
                                        "src": "20416:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2132,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 2129,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9949,
                                              "src": "20525:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 2130,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "20525:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31363639383532383030",
                                            "id": 2131,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "20543:10:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1669852800_by_1",
                                              "typeString": "int_const 1669852800"
                                            },
                                            "value": "1669852800"
                                          },
                                          "src": "20525:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2142,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 2139,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9949,
                                                "src": "20634:5:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 2140,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "20634:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31363737363238383030",
                                              "id": 2141,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "20652:10:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1677628800_by_1",
                                                "typeString": "int_const 1677628800"
                                              },
                                              "value": "1677628800"
                                            },
                                            "src": "20634:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2152,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 2149,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 9949,
                                                  "src": "20743:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 2150,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "20743:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31363832383939323030",
                                                "id": 2151,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "20761:10:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1682899200_by_1",
                                                  "typeString": "int_const 1682899200"
                                                },
                                                "value": "1682899200"
                                              },
                                              "src": "20743:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2162,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 2159,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 9949,
                                                    "src": "20852:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_block",
                                                      "typeString": "block"
                                                    }
                                                  },
                                                  "id": 2160,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "timestamp",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": null,
                                                  "src": "20852:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "31363838313639363030",
                                                  "id": 2161,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "20870:10:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1688169600_by_1",
                                                    "typeString": "int_const 1688169600"
                                                  },
                                                  "value": "1688169600"
                                                },
                                                "src": "20852:28:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": {
                                                "condition": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2172,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 2169,
                                                      "name": "block",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 9949,
                                                      "src": "20961:5:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                      }
                                                    },
                                                    "id": 2170,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "20961:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "<",
                                                  "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "31363936313138343030",
                                                    "id": 2171,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "20979:10:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_1696118400_by_1",
                                                      "typeString": "int_const 1696118400"
                                                    },
                                                    "value": "1696118400"
                                                  },
                                                  "src": "20961:28:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": {
                                                  "condition": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 2182,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 2179,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 9949,
                                                        "src": "21070:5:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_block",
                                                          "typeString": "block"
                                                        }
                                                      },
                                                      "id": 2180,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "timestamp",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "21070:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<",
                                                    "rightExpression": {
                                                      "argumentTypes": null,
                                                      "hexValue": "31373031333838383030",
                                                      "id": 2181,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "21088:10:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1701388800_by_1",
                                                        "typeString": "int_const 1701388800"
                                                      },
                                                      "value": "1701388800"
                                                    },
                                                    "src": "21070:28:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseBody": {
                                                    "id": 2193,
                                                    "nodeType": "Block",
                                                    "src": "21175:50:1",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 2189,
                                                            "name": "seed_bonus",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 57,
                                                            "src": "21196:10:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                              "typeString": "mapping(address => uint256)"
                                                            }
                                                          },
                                                          "id": 2191,
                                                          "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 2190,
                                                            "name": "sender",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2011,
                                                            "src": "21207:6:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_address",
                                                              "typeString": "address"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": true,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "21196:18:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "functionReturnParameters": 2015,
                                                        "id": 2192,
                                                        "nodeType": "Return",
                                                        "src": "21189:25:1"
                                                      }
                                                    ]
                                                  },
                                                  "id": 2194,
                                                  "nodeType": "IfStatement",
                                                  "src": "21066:159:1",
                                                  "trueBody": {
                                                    "id": 2188,
                                                    "nodeType": "Block",
                                                    "src": "21100:69:1",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "arguments": [
                                                            {
                                                              "argumentTypes": null,
                                                              "hexValue": "3136",
                                                              "id": 2185,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "21155:2:1",
                                                              "subdenomination": null,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_16_by_1",
                                                                "typeString": "int_const 16"
                                                              },
                                                              "value": "16"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_16_by_1",
                                                                "typeString": "int_const 16"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "id": 2183,
                                                              "name": "available_bonus",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2017,
                                                              "src": "21135:15:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "id": 2184,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "mul",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3532,
                                                            "src": "21135:19:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                          },
                                                          "id": 2186,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "kind": "functionCall",
                                                          "lValueRequested": false,
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "21135:23:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "functionReturnParameters": 2015,
                                                        "id": 2187,
                                                        "nodeType": "Return",
                                                        "src": "21128:30:1"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "id": 2195,
                                                "nodeType": "IfStatement",
                                                "src": "20957:268:1",
                                                "trueBody": {
                                                  "id": 2178,
                                                  "nodeType": "Block",
                                                  "src": "20991:69:1",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "hexValue": "3135",
                                                            "id": 2175,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "21046:2:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_15_by_1",
                                                              "typeString": "int_const 15"
                                                            },
                                                            "value": "15"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_rational_15_by_1",
                                                              "typeString": "int_const 15"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "id": 2173,
                                                            "name": "available_bonus",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2017,
                                                            "src": "21026:15:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 2174,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "mul",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 3532,
                                                          "src": "21026:19:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 2176,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "21026:23:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "functionReturnParameters": 2015,
                                                      "id": 2177,
                                                      "nodeType": "Return",
                                                      "src": "21019:30:1"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 2196,
                                              "nodeType": "IfStatement",
                                              "src": "20848:377:1",
                                              "trueBody": {
                                                "id": 2168,
                                                "nodeType": "Block",
                                                "src": "20882:69:1",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "3134",
                                                          "id": 2165,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "20937:2:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_14_by_1",
                                                            "typeString": "int_const 14"
                                                          },
                                                          "value": "14"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_14_by_1",
                                                            "typeString": "int_const 14"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 2163,
                                                          "name": "available_bonus",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2017,
                                                          "src": "20917:15:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 2164,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "mul",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3532,
                                                        "src": "20917:19:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 2166,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "20917:23:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "functionReturnParameters": 2015,
                                                    "id": 2167,
                                                    "nodeType": "Return",
                                                    "src": "20910:30:1"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 2197,
                                            "nodeType": "IfStatement",
                                            "src": "20739:486:1",
                                            "trueBody": {
                                              "id": 2158,
                                              "nodeType": "Block",
                                              "src": "20773:69:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "3133",
                                                        "id": 2155,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "20828:2:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_13_by_1",
                                                          "typeString": "int_const 13"
                                                        },
                                                        "value": "13"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_13_by_1",
                                                          "typeString": "int_const 13"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 2153,
                                                        "name": "available_bonus",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2017,
                                                        "src": "20808:15:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 2154,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "mul",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3532,
                                                      "src": "20808:19:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 2156,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "20808:23:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "functionReturnParameters": 2015,
                                                  "id": 2157,
                                                  "nodeType": "Return",
                                                  "src": "20801:30:1"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 2198,
                                          "nodeType": "IfStatement",
                                          "src": "20630:595:1",
                                          "trueBody": {
                                            "id": 2148,
                                            "nodeType": "Block",
                                            "src": "20664:69:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "3132",
                                                      "id": 2145,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "20719:2:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_12_by_1",
                                                        "typeString": "int_const 12"
                                                      },
                                                      "value": "12"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_12_by_1",
                                                        "typeString": "int_const 12"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 2143,
                                                      "name": "available_bonus",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2017,
                                                      "src": "20699:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 2144,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3532,
                                                    "src": "20699:19:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 2146,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "20699:23:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "functionReturnParameters": 2015,
                                                "id": 2147,
                                                "nodeType": "Return",
                                                "src": "20692:30:1"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 2199,
                                        "nodeType": "IfStatement",
                                        "src": "20521:704:1",
                                        "trueBody": {
                                          "id": 2138,
                                          "nodeType": "Block",
                                          "src": "20555:69:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "3131",
                                                    "id": 2135,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "20610:2:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_11_by_1",
                                                      "typeString": "int_const 11"
                                                    },
                                                    "value": "11"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_11_by_1",
                                                      "typeString": "int_const 11"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 2133,
                                                    "name": "available_bonus",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2017,
                                                    "src": "20590:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 2134,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3532,
                                                  "src": "20590:19:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 2136,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "20590:23:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "functionReturnParameters": 2015,
                                              "id": 2137,
                                              "nodeType": "Return",
                                              "src": "20583:30:1"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 2200,
                                      "nodeType": "IfStatement",
                                      "src": "20412:813:1",
                                      "trueBody": {
                                        "id": 2128,
                                        "nodeType": "Block",
                                        "src": "20446:69:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "3130",
                                                  "id": 2125,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "20501:2:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 2123,
                                                  "name": "available_bonus",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2017,
                                                  "src": "20481:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2124,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "mul",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3532,
                                                "src": "20481:19:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 2126,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "20481:23:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 2015,
                                            "id": 2127,
                                            "nodeType": "Return",
                                            "src": "20474:30:1"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 2201,
                                    "nodeType": "IfStatement",
                                    "src": "20304:921:1",
                                    "trueBody": {
                                      "id": 2118,
                                      "nodeType": "Block",
                                      "src": "20338:68:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "39",
                                                "id": 2115,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "20393:1:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_9_by_1",
                                                  "typeString": "int_const 9"
                                                },
                                                "value": "9"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_9_by_1",
                                                  "typeString": "int_const 9"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 2113,
                                                "name": "available_bonus",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2017,
                                                "src": "20373:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 2114,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3532,
                                              "src": "20373:19:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 2116,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "20373:22:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 2015,
                                          "id": 2117,
                                          "nodeType": "Return",
                                          "src": "20366:29:1"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 2202,
                                  "nodeType": "IfStatement",
                                  "src": "20196:1029:1",
                                  "trueBody": {
                                    "id": 2108,
                                    "nodeType": "Block",
                                    "src": "20230:68:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "38",
                                              "id": 2105,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "20285:1:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_8_by_1",
                                                "typeString": "int_const 8"
                                              },
                                              "value": "8"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_8_by_1",
                                                "typeString": "int_const 8"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 2103,
                                              "name": "available_bonus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2017,
                                              "src": "20265:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 2104,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3532,
                                            "src": "20265:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 2106,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "20265:22:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 2015,
                                        "id": 2107,
                                        "nodeType": "Return",
                                        "src": "20258:29:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 2203,
                                "nodeType": "IfStatement",
                                "src": "20088:1137:1",
                                "trueBody": {
                                  "id": 2098,
                                  "nodeType": "Block",
                                  "src": "20122:68:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "37",
                                            "id": 2095,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "20177:1:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_7_by_1",
                                              "typeString": "int_const 7"
                                            },
                                            "value": "7"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_7_by_1",
                                              "typeString": "int_const 7"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2093,
                                            "name": "available_bonus",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2017,
                                            "src": "20157:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2094,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3532,
                                          "src": "20157:19:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2096,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "20157:22:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 2015,
                                      "id": 2097,
                                      "nodeType": "Return",
                                      "src": "20150:29:1"
                                    }
                                  ]
                                }
                              },
                              "id": 2204,
                              "nodeType": "IfStatement",
                              "src": "19980:1245:1",
                              "trueBody": {
                                "id": 2088,
                                "nodeType": "Block",
                                "src": "20014:68:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "36",
                                          "id": 2085,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "20069:1:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_6_by_1",
                                            "typeString": "int_const 6"
                                          },
                                          "value": "6"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_6_by_1",
                                            "typeString": "int_const 6"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2083,
                                          "name": "available_bonus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2017,
                                          "src": "20049:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2084,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3532,
                                        "src": "20049:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2086,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20049:22:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 2015,
                                    "id": 2087,
                                    "nodeType": "Return",
                                    "src": "20042:29:1"
                                  }
                                ]
                              }
                            },
                            "id": 2205,
                            "nodeType": "IfStatement",
                            "src": "19872:1353:1",
                            "trueBody": {
                              "id": 2078,
                              "nodeType": "Block",
                              "src": "19906:68:1",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "35",
                                        "id": 2075,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19961:1:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_5_by_1",
                                          "typeString": "int_const 5"
                                        },
                                        "value": "5"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_5_by_1",
                                          "typeString": "int_const 5"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2073,
                                        "name": "available_bonus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2017,
                                        "src": "19941:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2074,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3532,
                                      "src": "19941:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2076,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "19941:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 2015,
                                  "id": 2077,
                                  "nodeType": "Return",
                                  "src": "19934:29:1"
                                }
                              ]
                            }
                          },
                          "id": 2206,
                          "nodeType": "IfStatement",
                          "src": "19764:1461:1",
                          "trueBody": {
                            "id": 2068,
                            "nodeType": "Block",
                            "src": "19798:68:1",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "34",
                                      "id": 2065,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "19853:1:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2063,
                                      "name": "available_bonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2017,
                                      "src": "19833:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2064,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3532,
                                    "src": "19833:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2066,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19833:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 2015,
                                "id": 2067,
                                "nodeType": "Return",
                                "src": "19826:29:1"
                              }
                            ]
                          }
                        },
                        "id": 2207,
                        "nodeType": "IfStatement",
                        "src": "19656:1569:1",
                        "trueBody": {
                          "id": 2058,
                          "nodeType": "Block",
                          "src": "19690:68:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "33",
                                    "id": 2055,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19745:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2053,
                                    "name": "available_bonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2017,
                                    "src": "19725:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3532,
                                  "src": "19725:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2056,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19725:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 2015,
                              "id": 2057,
                              "nodeType": "Return",
                              "src": "19718:29:1"
                            }
                          ]
                        }
                      },
                      "id": 2208,
                      "nodeType": "IfStatement",
                      "src": "19548:1677:1",
                      "trueBody": {
                        "id": 2048,
                        "nodeType": "Block",
                        "src": "19582:68:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 2045,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19637:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2043,
                                  "name": "available_bonus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2017,
                                  "src": "19617:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3532,
                                "src": "19617:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19617:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2015,
                            "id": 2047,
                            "nodeType": "Return",
                            "src": "19610:29:1"
                          }
                        ]
                      }
                    },
                    "id": 2209,
                    "nodeType": "IfStatement",
                    "src": "19447:1778:1",
                    "trueBody": {
                      "id": 2038,
                      "nodeType": "Block",
                      "src": "19481:61:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2036,
                            "name": "available_bonus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "19516:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2015,
                          "id": 2037,
                          "nodeType": "Return",
                          "src": "19509:22:1"
                        }
                      ]
                    }
                  },
                  "id": 2210,
                  "nodeType": "IfStatement",
                  "src": "19360:1865:1",
                  "trueBody": {
                    "id": 2031,
                    "nodeType": "Block",
                    "src": "19394:47:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19429:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2015,
                        "id": 2030,
                        "nodeType": "Return",
                        "src": "19422:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_available_seed_bonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2011,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2212,
                  "src": "19209:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19209:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19199:30:1"
            },
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2014,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2212,
                  "src": "19275:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19275:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19274:9:1"
            },
            "scope": 2509,
            "src": "19166:2065:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2425,
              "nodeType": "Block",
              "src": "21362:2058:1",
              "statements": [
                {
                  "assignments": [
                    2220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2220,
                      "name": "available_bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 2425,
                      "src": "21372:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21372:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2227,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 2225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21424:2:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2221,
                          "name": "private_bonus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "21398:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2223,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2222,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2214,
                          "src": "21412:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21398:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3557,
                      "src": "21398:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21398:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21372:55:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2228,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "21441:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "21441:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31353735313538343030",
                      "id": 2230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21459:10:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1575158400_by_1",
                        "typeString": "int_const 1575158400"
                      },
                      "value": "1575158400"
                    },
                    "src": "21441:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2235,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9949,
                          "src": "21528:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "21528:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31353830353135323030",
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21546:10:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1580515200_by_1",
                          "typeString": "int_const 1580515200"
                        },
                        "value": "1580515200"
                      },
                      "src": "21528:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2242,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9949,
                            "src": "21629:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "21629:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31353838323931323030",
                          "id": 2244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21647:10:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1588291200_by_1",
                            "typeString": "int_const 1588291200"
                          },
                          "value": "1588291200"
                        },
                        "src": "21629:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2252,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9949,
                              "src": "21737:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "21737:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31363036373830383030",
                            "id": 2254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21755:10:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1606780800_by_1",
                              "typeString": "int_const 1606780800"
                            },
                            "value": "1606780800"
                          },
                          "src": "21737:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2262,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9949,
                                "src": "21845:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "21845:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31363137323335323030",
                              "id": 2264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21863:10:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1617235200_by_1",
                                "typeString": "int_const 1617235200"
                              },
                              "value": "1617235200"
                            },
                            "src": "21845:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2272,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9949,
                                  "src": "21953:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "21953:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31363139383237323030",
                                "id": 2274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "21971:10:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1619827200_by_1",
                                  "typeString": "int_const 1619827200"
                                },
                                "value": "1619827200"
                              },
                              "src": "21953:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2282,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9949,
                                    "src": "22061:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "22061:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31363237373736303030",
                                  "id": 2284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22079:10:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1627776000_by_1",
                                    "typeString": "int_const 1627776000"
                                  },
                                  "value": "1627776000"
                                },
                                "src": "22061:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2292,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9949,
                                      "src": "22169:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2293,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "22169:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31363338333136383030",
                                    "id": 2294,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "22187:10:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1638316800_by_1",
                                      "typeString": "int_const 1638316800"
                                    },
                                    "value": "1638316800"
                                  },
                                  "src": "22169:28:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2302,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9949,
                                        "src": "22277:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 2303,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "22277:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31363436303932383030",
                                      "id": 2304,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "22295:10:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1646092800_by_1",
                                        "typeString": "int_const 1646092800"
                                      },
                                      "value": "1646092800"
                                    },
                                    "src": "22277:28:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2315,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2312,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9949,
                                          "src": "22385:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 2313,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "22385:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "31363536363333363030",
                                        "id": 2314,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22403:10:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1656633600_by_1",
                                          "typeString": "int_const 1656633600"
                                        },
                                        "value": "1656633600"
                                      },
                                      "src": "22385:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2325,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2322,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9949,
                                            "src": "22493:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 2323,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "22493:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "31363634353832343030",
                                          "id": 2324,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "22511:10:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1664582400_by_1",
                                            "typeString": "int_const 1664582400"
                                          },
                                          "value": "1664582400"
                                        },
                                        "src": "22493:28:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2335,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 2332,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 9949,
                                              "src": "22602:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 2333,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "timestamp",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "22602:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31363639383532383030",
                                            "id": 2334,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "22620:10:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1669852800_by_1",
                                              "typeString": "int_const 1669852800"
                                            },
                                            "value": "1669852800"
                                          },
                                          "src": "22602:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2345,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 2342,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 9949,
                                                "src": "22711:5:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_block",
                                                  "typeString": "block"
                                                }
                                              },
                                              "id": 2343,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timestamp",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "22711:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "hexValue": "31363830333037323030",
                                              "id": 2344,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "22729:10:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1680307200_by_1",
                                                "typeString": "int_const 1680307200"
                                              },
                                              "value": "1680307200"
                                            },
                                            "src": "22711:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2355,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 2352,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 9949,
                                                  "src": "22820:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 2353,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": null,
                                                "src": "22820:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31363838313639363030",
                                                "id": 2354,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "22838:10:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1688169600_by_1",
                                                  "typeString": "int_const 1688169600"
                                                },
                                                "value": "1688169600"
                                              },
                                              "src": "22820:28:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 2365,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "argumentTypes": null,
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 2362,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 9949,
                                                    "src": "22929:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_block",
                                                      "typeString": "block"
                                                    }
                                                  },
                                                  "id": 2363,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "timestamp",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": null,
                                                  "src": "22929:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "31363936313138343030",
                                                  "id": 2364,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "22947:10:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1696118400_by_1",
                                                    "typeString": "int_const 1696118400"
                                                  },
                                                  "value": "1696118400"
                                                },
                                                "src": "22929:28:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": {
                                                "condition": {
                                                  "argumentTypes": null,
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 2375,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 2372,
                                                      "name": "block",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 9949,
                                                      "src": "23038:5:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_block",
                                                        "typeString": "block"
                                                      }
                                                    },
                                                    "id": 2373,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "timestamp",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "23038:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "<",
                                                  "rightExpression": {
                                                    "argumentTypes": null,
                                                    "hexValue": "31373031333838383030",
                                                    "id": 2374,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "23056:10:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_1701388800_by_1",
                                                      "typeString": "int_const 1701388800"
                                                    },
                                                    "value": "1701388800"
                                                  },
                                                  "src": "23038:28:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": {
                                                  "condition": {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 2385,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "argumentTypes": null,
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 2382,
                                                        "name": "block",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 9949,
                                                        "src": "23147:5:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_block",
                                                          "typeString": "block"
                                                        }
                                                      },
                                                      "id": 2383,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "timestamp",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": null,
                                                      "src": "23147:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<",
                                                    "rightExpression": {
                                                      "argumentTypes": null,
                                                      "hexValue": "31373039323531323030",
                                                      "id": 2384,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "23165:10:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1709251200_by_1",
                                                        "typeString": "int_const 1709251200"
                                                      },
                                                      "value": "1709251200"
                                                    },
                                                    "src": "23147:28:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseBody": {
                                                    "condition": {
                                                      "argumentTypes": null,
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 2395,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 2392,
                                                          "name": "block",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 9949,
                                                          "src": "23256:5:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_block",
                                                            "typeString": "block"
                                                          }
                                                        },
                                                        "id": 2393,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "timestamp",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "23256:15:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "<",
                                                      "rightExpression": {
                                                        "argumentTypes": null,
                                                        "hexValue": "31373139373932303030",
                                                        "id": 2394,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "23274:10:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_1719792000_by_1",
                                                          "typeString": "int_const 1719792000"
                                                        },
                                                        "value": "1719792000"
                                                      },
                                                      "src": "23256:28:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "falseBody": {
                                                      "id": 2406,
                                                      "nodeType": "Block",
                                                      "src": "23361:53:1",
                                                      "statements": [
                                                        {
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                              "argumentTypes": null,
                                                              "id": 2402,
                                                              "name": "private_bonus",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 61,
                                                              "src": "23382:13:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                                "typeString": "mapping(address => uint256)"
                                                              }
                                                            },
                                                            "id": 2404,
                                                            "indexExpression": {
                                                              "argumentTypes": null,
                                                              "id": 2403,
                                                              "name": "sender",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2214,
                                                              "src": "23396:6:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                              }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "23382:21:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "functionReturnParameters": 2218,
                                                          "id": 2405,
                                                          "nodeType": "Return",
                                                          "src": "23375:28:1"
                                                        }
                                                      ]
                                                    },
                                                    "id": 2407,
                                                    "nodeType": "IfStatement",
                                                    "src": "23252:162:1",
                                                    "trueBody": {
                                                      "id": 2401,
                                                      "nodeType": "Block",
                                                      "src": "23286:69:1",
                                                      "statements": [
                                                        {
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "arguments": [
                                                              {
                                                                "argumentTypes": null,
                                                                "hexValue": "3137",
                                                                "id": 2398,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "23341:2:1",
                                                                "subdenomination": null,
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_rational_17_by_1",
                                                                  "typeString": "int_const 17"
                                                                },
                                                                "value": "17"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": [
                                                                {
                                                                  "typeIdentifier": "t_rational_17_by_1",
                                                                  "typeString": "int_const 17"
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": null,
                                                                "id": 2396,
                                                                "name": "available_bonus",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2220,
                                                                "src": "23321:15:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              },
                                                              "id": 2397,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "memberName": "mul",
                                                              "nodeType": "MemberAccess",
                                                              "referencedDeclaration": 3532,
                                                              "src": "23321:19:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                              }
                                                            },
                                                            "id": 2399,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "23321:23:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "functionReturnParameters": 2218,
                                                          "id": 2400,
                                                          "nodeType": "Return",
                                                          "src": "23314:30:1"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "id": 2408,
                                                  "nodeType": "IfStatement",
                                                  "src": "23143:271:1",
                                                  "trueBody": {
                                                    "id": 2391,
                                                    "nodeType": "Block",
                                                    "src": "23177:69:1",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "arguments": [
                                                            {
                                                              "argumentTypes": null,
                                                              "hexValue": "3136",
                                                              "id": 2388,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "23232:2:1",
                                                              "subdenomination": null,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_16_by_1",
                                                                "typeString": "int_const 16"
                                                              },
                                                              "value": "16"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": [
                                                              {
                                                                "typeIdentifier": "t_rational_16_by_1",
                                                                "typeString": "int_const 16"
                                                              }
                                                            ],
                                                            "expression": {
                                                              "argumentTypes": null,
                                                              "id": 2386,
                                                              "name": "available_bonus",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 2220,
                                                              "src": "23212:15:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "id": 2387,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "mul",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3532,
                                                            "src": "23212:19:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                            }
                                                          },
                                                          "id": 2389,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "kind": "functionCall",
                                                          "lValueRequested": false,
                                                          "names": [],
                                                          "nodeType": "FunctionCall",
                                                          "src": "23212:23:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "functionReturnParameters": 2218,
                                                        "id": 2390,
                                                        "nodeType": "Return",
                                                        "src": "23205:30:1"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "id": 2409,
                                                "nodeType": "IfStatement",
                                                "src": "23034:380:1",
                                                "trueBody": {
                                                  "id": 2381,
                                                  "nodeType": "Block",
                                                  "src": "23068:69:1",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "arguments": [
                                                          {
                                                            "argumentTypes": null,
                                                            "hexValue": "3135",
                                                            "id": 2378,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "23123:2:1",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_15_by_1",
                                                              "typeString": "int_const 15"
                                                            },
                                                            "value": "15"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": [
                                                            {
                                                              "typeIdentifier": "t_rational_15_by_1",
                                                              "typeString": "int_const 15"
                                                            }
                                                          ],
                                                          "expression": {
                                                            "argumentTypes": null,
                                                            "id": 2376,
                                                            "name": "available_bonus",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 2220,
                                                            "src": "23103:15:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 2377,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "memberName": "mul",
                                                          "nodeType": "MemberAccess",
                                                          "referencedDeclaration": 3532,
                                                          "src": "23103:19:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                          }
                                                        },
                                                        "id": 2379,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "functionCall",
                                                        "lValueRequested": false,
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "23103:23:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "functionReturnParameters": 2218,
                                                      "id": 2380,
                                                      "nodeType": "Return",
                                                      "src": "23096:30:1"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 2410,
                                              "nodeType": "IfStatement",
                                              "src": "22925:489:1",
                                              "trueBody": {
                                                "id": 2371,
                                                "nodeType": "Block",
                                                "src": "22959:69:1",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "hexValue": "3134",
                                                          "id": 2368,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "23014:2:1",
                                                          "subdenomination": null,
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_14_by_1",
                                                            "typeString": "int_const 14"
                                                          },
                                                          "value": "14"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_rational_14_by_1",
                                                            "typeString": "int_const 14"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 2366,
                                                          "name": "available_bonus",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 2220,
                                                          "src": "22994:15:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 2367,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "mul",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 3532,
                                                        "src": "22994:19:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                        }
                                                      },
                                                      "id": 2369,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "22994:23:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "functionReturnParameters": 2218,
                                                    "id": 2370,
                                                    "nodeType": "Return",
                                                    "src": "22987:30:1"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 2411,
                                            "nodeType": "IfStatement",
                                            "src": "22816:598:1",
                                            "trueBody": {
                                              "id": 2361,
                                              "nodeType": "Block",
                                              "src": "22850:69:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "hexValue": "3133",
                                                        "id": 2358,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "22905:2:1",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_13_by_1",
                                                          "typeString": "int_const 13"
                                                        },
                                                        "value": "13"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_rational_13_by_1",
                                                          "typeString": "int_const 13"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": null,
                                                        "id": 2356,
                                                        "name": "available_bonus",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2220,
                                                        "src": "22885:15:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 2357,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "mul",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 3532,
                                                      "src": "22885:19:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                      }
                                                    },
                                                    "id": 2359,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "22885:23:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "functionReturnParameters": 2218,
                                                  "id": 2360,
                                                  "nodeType": "Return",
                                                  "src": "22878:30:1"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 2412,
                                          "nodeType": "IfStatement",
                                          "src": "22707:707:1",
                                          "trueBody": {
                                            "id": 2351,
                                            "nodeType": "Block",
                                            "src": "22741:69:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "hexValue": "3132",
                                                      "id": 2348,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "22796:2:1",
                                                      "subdenomination": null,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_12_by_1",
                                                        "typeString": "int_const 12"
                                                      },
                                                      "value": "12"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_rational_12_by_1",
                                                        "typeString": "int_const 12"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 2346,
                                                      "name": "available_bonus",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2220,
                                                      "src": "22776:15:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 2347,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "mul",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 3532,
                                                    "src": "22776:19:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                    }
                                                  },
                                                  "id": 2349,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "22776:23:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "functionReturnParameters": 2218,
                                                "id": 2350,
                                                "nodeType": "Return",
                                                "src": "22769:30:1"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 2413,
                                        "nodeType": "IfStatement",
                                        "src": "22598:816:1",
                                        "trueBody": {
                                          "id": 2341,
                                          "nodeType": "Block",
                                          "src": "22632:69:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "hexValue": "3131",
                                                    "id": 2338,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "22687:2:1",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_11_by_1",
                                                      "typeString": "int_const 11"
                                                    },
                                                    "value": "11"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_11_by_1",
                                                      "typeString": "int_const 11"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 2336,
                                                    "name": "available_bonus",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2220,
                                                    "src": "22667:15:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 2337,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "mul",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 3532,
                                                  "src": "22667:19:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                  }
                                                },
                                                "id": 2339,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "22667:23:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "functionReturnParameters": 2218,
                                              "id": 2340,
                                              "nodeType": "Return",
                                              "src": "22660:30:1"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 2414,
                                      "nodeType": "IfStatement",
                                      "src": "22489:925:1",
                                      "trueBody": {
                                        "id": 2331,
                                        "nodeType": "Block",
                                        "src": "22523:69:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "hexValue": "3130",
                                                  "id": 2328,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "22578:2:1",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 2326,
                                                  "name": "available_bonus",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2220,
                                                  "src": "22558:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2327,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "mul",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 3532,
                                                "src": "22558:19:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 2329,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "22558:23:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "functionReturnParameters": 2218,
                                            "id": 2330,
                                            "nodeType": "Return",
                                            "src": "22551:30:1"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 2415,
                                    "nodeType": "IfStatement",
                                    "src": "22381:1033:1",
                                    "trueBody": {
                                      "id": 2321,
                                      "nodeType": "Block",
                                      "src": "22415:68:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "39",
                                                "id": 2318,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "22470:1:1",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_9_by_1",
                                                  "typeString": "int_const 9"
                                                },
                                                "value": "9"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_9_by_1",
                                                  "typeString": "int_const 9"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 2316,
                                                "name": "available_bonus",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2220,
                                                "src": "22450:15:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 2317,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "mul",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3532,
                                              "src": "22450:19:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                                              }
                                            },
                                            "id": 2319,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "22450:22:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "functionReturnParameters": 2218,
                                          "id": 2320,
                                          "nodeType": "Return",
                                          "src": "22443:29:1"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 2416,
                                  "nodeType": "IfStatement",
                                  "src": "22273:1141:1",
                                  "trueBody": {
                                    "id": 2311,
                                    "nodeType": "Block",
                                    "src": "22307:68:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "38",
                                              "id": 2308,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "22362:1:1",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_8_by_1",
                                                "typeString": "int_const 8"
                                              },
                                              "value": "8"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_rational_8_by_1",
                                                "typeString": "int_const 8"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 2306,
                                              "name": "available_bonus",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2220,
                                              "src": "22342:15:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 2307,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "mul",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3532,
                                            "src": "22342:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                                            }
                                          },
                                          "id": 2309,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "22342:22:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "functionReturnParameters": 2218,
                                        "id": 2310,
                                        "nodeType": "Return",
                                        "src": "22335:29:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 2417,
                                "nodeType": "IfStatement",
                                "src": "22165:1249:1",
                                "trueBody": {
                                  "id": 2301,
                                  "nodeType": "Block",
                                  "src": "22199:68:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "hexValue": "37",
                                            "id": 2298,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "22254:1:1",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_7_by_1",
                                              "typeString": "int_const 7"
                                            },
                                            "value": "7"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_7_by_1",
                                              "typeString": "int_const 7"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 2296,
                                            "name": "available_bonus",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2220,
                                            "src": "22234:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2297,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3532,
                                          "src": "22234:19:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2299,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "22234:22:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "functionReturnParameters": 2218,
                                      "id": 2300,
                                      "nodeType": "Return",
                                      "src": "22227:29:1"
                                    }
                                  ]
                                }
                              },
                              "id": 2418,
                              "nodeType": "IfStatement",
                              "src": "22057:1357:1",
                              "trueBody": {
                                "id": 2291,
                                "nodeType": "Block",
                                "src": "22091:68:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "36",
                                          "id": 2288,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "22146:1:1",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_6_by_1",
                                            "typeString": "int_const 6"
                                          },
                                          "value": "6"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_6_by_1",
                                            "typeString": "int_const 6"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 2286,
                                          "name": "available_bonus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2220,
                                          "src": "22126:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 2287,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3532,
                                        "src": "22126:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 2289,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22126:22:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 2218,
                                    "id": 2290,
                                    "nodeType": "Return",
                                    "src": "22119:29:1"
                                  }
                                ]
                              }
                            },
                            "id": 2419,
                            "nodeType": "IfStatement",
                            "src": "21949:1465:1",
                            "trueBody": {
                              "id": 2281,
                              "nodeType": "Block",
                              "src": "21983:68:1",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "35",
                                        "id": 2278,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22038:1:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_5_by_1",
                                          "typeString": "int_const 5"
                                        },
                                        "value": "5"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_5_by_1",
                                          "typeString": "int_const 5"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2276,
                                        "name": "available_bonus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2220,
                                        "src": "22018:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2277,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3532,
                                      "src": "22018:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2279,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "22018:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "functionReturnParameters": 2218,
                                  "id": 2280,
                                  "nodeType": "Return",
                                  "src": "22011:29:1"
                                }
                              ]
                            }
                          },
                          "id": 2420,
                          "nodeType": "IfStatement",
                          "src": "21841:1573:1",
                          "trueBody": {
                            "id": 2271,
                            "nodeType": "Block",
                            "src": "21875:68:1",
                            "statements": [
                              {
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "34",
                                      "id": 2268,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21930:1:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      },
                                      "value": "4"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_4_by_1",
                                        "typeString": "int_const 4"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2266,
                                      "name": "available_bonus",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2220,
                                      "src": "21910:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2267,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3532,
                                    "src": "21910:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21910:22:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 2218,
                                "id": 2270,
                                "nodeType": "Return",
                                "src": "21903:29:1"
                              }
                            ]
                          }
                        },
                        "id": 2421,
                        "nodeType": "IfStatement",
                        "src": "21733:1681:1",
                        "trueBody": {
                          "id": 2261,
                          "nodeType": "Block",
                          "src": "21767:68:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "33",
                                    "id": 2258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21822:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2256,
                                    "name": "available_bonus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2220,
                                    "src": "21802:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3532,
                                  "src": "21802:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21802:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 2218,
                              "id": 2260,
                              "nodeType": "Return",
                              "src": "21795:29:1"
                            }
                          ]
                        }
                      },
                      "id": 2422,
                      "nodeType": "IfStatement",
                      "src": "21625:1789:1",
                      "trueBody": {
                        "id": 2251,
                        "nodeType": "Block",
                        "src": "21659:68:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 2248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21714:1:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2246,
                                  "name": "available_bonus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2220,
                                  "src": "21694:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3532,
                                "src": "21694:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21694:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2218,
                            "id": 2250,
                            "nodeType": "Return",
                            "src": "21687:29:1"
                          }
                        ]
                      }
                    },
                    "id": 2423,
                    "nodeType": "IfStatement",
                    "src": "21524:1890:1",
                    "trueBody": {
                      "id": 2241,
                      "nodeType": "Block",
                      "src": "21558:61:1",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2239,
                            "name": "available_bonus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2220,
                            "src": "21593:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 2218,
                          "id": 2240,
                          "nodeType": "Return",
                          "src": "21586:22:1"
                        }
                      ]
                    }
                  },
                  "id": 2424,
                  "nodeType": "IfStatement",
                  "src": "21437:1977:1",
                  "trueBody": {
                    "id": 2234,
                    "nodeType": "Block",
                    "src": "21471:47:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21506:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2218,
                        "id": 2233,
                        "nodeType": "Return",
                        "src": "21499:8:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_available_private_bonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2214,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "21283:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21283:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21273:30:1"
            },
            "returnParameters": {
              "id": 2218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "21349:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21349:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21348:9:1"
            },
            "scope": 2509,
            "src": "21237:2183:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2507,
              "nodeType": "Block",
              "src": "23547:999:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2435,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9949,
                        "src": "23561:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "23561:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2437,
                      "name": "STOP_ALL_LOCKS_TIME",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "23579:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23561:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2498,
                  "nodeType": "IfStatement",
                  "src": "23557:931:1",
                  "trueBody": {
                    "id": 2497,
                    "nodeType": "Block",
                    "src": "23600:888:1",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2439,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2430,
                            "src": "23618:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2441,
                                "name": "bank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45,
                                "src": "23639:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IsinaBank_$2880",
                                  "typeString": "contract IsinaBank"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IsinaBank_$2880",
                                  "typeString": "contract IsinaBank"
                                }
                              ],
                              "id": 2440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23631:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23631:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "23618:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2495,
                          "nodeType": "Block",
                          "src": "24315:163:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2491,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 2487,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2432,
                                      "src": "24362:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 2489,
                                          "name": "sender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2428,
                                          "src": "24394:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2488,
                                        "name": "get_available_balance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 856,
                                        "src": "24372:21:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view returns (uint256)"
                                        }
                                      },
                                      "id": 2490,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "24372:29:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "24362:39:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4e6f20617661696c61626c652062616c616e6365",
                                    "id": 2492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "24423:22:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_302f5796aad9afa83ea0eb57518e87edc16c591b592cd3db4c3418a574b28f31",
                                      "typeString": "literal_string \"No available balance\""
                                    },
                                    "value": "No available balance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_302f5796aad9afa83ea0eb57518e87edc16c591b592cd3db4c3418a574b28f31",
                                      "typeString": "literal_string \"No available balance\""
                                    }
                                  ],
                                  "id": 2486,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9962,
                                    9963
                                  ],
                                  "referencedDeclaration": 9963,
                                  "src": "24333:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24333:130:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2494,
                              "nodeType": "ExpressionStatement",
                              "src": "24333:130:1"
                            }
                          ]
                        },
                        "id": 2496,
                        "nodeType": "IfStatement",
                        "src": "23614:864:1",
                        "trueBody": {
                          "id": 2485,
                          "nodeType": "Block",
                          "src": "23646:663:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2449,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2445,
                                        "name": "tokens_for_sell",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 73,
                                        "src": "23693:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 2447,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2446,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2428,
                                        "src": "23709:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "23693:23:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 2448,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2432,
                                      "src": "23720:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "23693:33:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "546f6b656e73206d75737420626520756e6c6f636b6564",
                                    "id": 2450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23748:25:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_6e167375b5a65fb7cdb3221373988165b3ed26094f0e1b8719bc276687998c2a",
                                      "typeString": "literal_string \"Tokens must be unlocked\""
                                    },
                                    "value": "Tokens must be unlocked"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_6e167375b5a65fb7cdb3221373988165b3ed26094f0e1b8719bc276687998c2a",
                                      "typeString": "literal_string \"Tokens must be unlocked\""
                                    }
                                  ],
                                  "id": 2444,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9962,
                                    9963
                                  ],
                                  "referencedDeclaration": 9963,
                                  "src": "23664:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23664:127:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2452,
                              "nodeType": "ExpressionStatement",
                              "src": "23664:127:1"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2457,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2454,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 9949,
                                        "src": "23838:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 2455,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "23838:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 2456,
                                      "name": "STOP_SELL_TIME",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23,
                                      "src": "23856:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "23838:32:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "5468652074696d65206d757374206265206c657373207468616e207468652073746f702073656c6c2074696d65",
                                    "id": 2458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "23892:47:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_b0b3061581107db8ce05c91c1aa699b00a8458c8fd95d8d5bbc4de2bd202c266",
                                      "typeString": "literal_string \"The time must be less than the stop sell time\""
                                    },
                                    "value": "The time must be less than the stop sell time"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_b0b3061581107db8ce05c91c1aa699b00a8458c8fd95d8d5bbc4de2bd202c266",
                                      "typeString": "literal_string \"The time must be less than the stop sell time\""
                                    }
                                  ],
                                  "id": 2453,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9962,
                                    9963
                                  ],
                                  "referencedDeclaration": 9963,
                                  "src": "23809:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23809:148:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2460,
                              "nodeType": "ExpressionStatement",
                              "src": "23809:148:1"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 2466,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2428,
                                                "src": "24061:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2465,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "24053:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint160_$",
                                                "typeString": "type(uint160)"
                                              },
                                              "typeName": "uint160"
                                            },
                                            "id": 2467,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "24053:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint160",
                                              "typeString": "uint160"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint160",
                                              "typeString": "uint160"
                                            }
                                          ],
                                          "id": 2464,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "24045:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 2468,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "24045:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 2469,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2432,
                                        "src": "24095:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2462,
                                        "name": "bank",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45,
                                        "src": "24004:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IsinaBank_$2880",
                                          "typeString": "contract IsinaBank"
                                        }
                                      },
                                      "id": 2463,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "send_ether",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2622,
                                      "src": "24004:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address payable,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 2470,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24004:119:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "42616e6b2070726f626c656d",
                                    "id": 2471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "24145:14:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_994c9231c68d2de9a34395b3dd46f184497c38dec6904ab1e03965b31b8f662b",
                                      "typeString": "literal_string \"Bank problem\""
                                    },
                                    "value": "Bank problem"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_994c9231c68d2de9a34395b3dd46f184497c38dec6904ab1e03965b31b8f662b",
                                      "typeString": "literal_string \"Bank problem\""
                                    }
                                  ],
                                  "id": 2461,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    9962,
                                    9963
                                  ],
                                  "referencedDeclaration": 9963,
                                  "src": "23975:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 2472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23975:202:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2473,
                              "nodeType": "ExpressionStatement",
                              "src": "23975:202:1"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 2483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2474,
                                    "name": "tokens_for_sell",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 73,
                                    "src": "24195:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2476,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2475,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2428,
                                    "src": "24211:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "24195:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2481,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2432,
                                      "src": "24270:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2477,
                                        "name": "tokens_for_sell",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 73,
                                        "src": "24221:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 2479,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2478,
                                        "name": "sender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2428,
                                        "src": "24237:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "24221:23:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2480,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3498,
                                    "src": "24221:27:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2482,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "24221:73:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24195:99:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2484,
                              "nodeType": "ExpressionStatement",
                              "src": "24195:99:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2502,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2428,
                        "src": "24513:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2503,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2430,
                        "src": "24521:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2504,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "24532:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2499,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9996,
                        "src": "24497:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_IsinaToken_$2509",
                          "typeString": "contract super IsinaToken"
                        }
                      },
                      "id": 2501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3231,
                      "src": "24497:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24497:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2506,
                  "nodeType": "ExpressionStatement",
                  "src": "24497:42:1"
                }
              ]
            },
            "documentation": null,
            "id": 2508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2428,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "23454:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23454:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2430,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "23478:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23478:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2432,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2508,
                  "src": "23505:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23505:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23444:81:1"
            },
            "returnParameters": {
              "id": 2434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23547:0:1"
            },
            "scope": 2509,
            "src": "23426:1120:1",
            "stateMutability": "nonpayable",
            "superFunction": 3231,
            "visibility": "internal"
          }
        ],
        "scope": 2510,
        "src": "597:23951:1"
      }
    ],
    "src": "0:24549:1"
  },
  "bytecode": "",
  "bytecodeSha1": "64ed05262a12bb9e2322053ae5f35ba65a814679",
  "compiler": {
    "minify_source": false,
    "optimize": true,
    "runs": 200,
    "version": "Version: 0.5.7+commit.6da8b019.Darwin.appleclang"
  },
  "contractName": "IsinaToken",
  "coverageMap": {
    "branches": {
      "contracts/IsinaToken.sol": {
        "IsinaToken._transfer": {
          "341": [
            23561,
            23598,
            false
          ],
          "342": [
            23618,
            23644,
            false
          ],
          "343": [
            23693,
            23726,
            true
          ],
          "344": [
            23838,
            23870,
            true
          ],
          "345": [
            24004,
            24123,
            true
          ],
          "346": [
            24362,
            24401,
            true
          ]
        },
        "IsinaToken.get_available_balance": {
          "320": [
            7675,
            7689,
            false
          ],
          "321": [
            7885,
            7904,
            false
          ],
          "322": [
            8110,
            8127,
            false
          ],
          "323": [
            8341,
            8360,
            false
          ],
          "324": [
            8752,
            8774,
            false
          ]
        },
        "IsinaToken.get_available_marketing_balance": {
          "287": [
            11134,
            11162,
            false
          ],
          "288": [
            11221,
            11249,
            false
          ],
          "289": [
            11340,
            11368,
            false
          ],
          "290": [
            11459,
            11487,
            false
          ],
          "291": [
            11578,
            11606,
            false
          ],
          "292": [
            11697,
            11725,
            false
          ],
          "293": [
            11816,
            11844,
            false
          ],
          "294": [
            11935,
            11963,
            false
          ],
          "295": [
            12054,
            12082,
            false
          ],
          "296": [
            12173,
            12201,
            false
          ],
          "297": [
            12292,
            12320,
            false
          ],
          "298": [
            12411,
            12439,
            false
          ],
          "299": [
            12530,
            12558,
            false
          ]
        },
        "IsinaToken.get_available_private_balance": {
          "234": [
            16874,
            16902,
            false
          ],
          "235": [
            16961,
            16989,
            false
          ],
          "236": [
            17087,
            17115,
            false
          ],
          "237": [
            17213,
            17241,
            false
          ],
          "238": [
            17339,
            17367,
            false
          ],
          "239": [
            17465,
            17493,
            false
          ],
          "240": [
            17591,
            17619,
            false
          ],
          "241": [
            17717,
            17745,
            false
          ],
          "242": [
            17843,
            17871,
            false
          ],
          "243": [
            17969,
            17997,
            false
          ],
          "244": [
            18095,
            18123,
            false
          ],
          "245": [
            18221,
            18249,
            false
          ],
          "246": [
            18347,
            18375,
            false
          ],
          "247": [
            18473,
            18501,
            false
          ],
          "248": [
            18599,
            18627,
            false
          ],
          "249": [
            18725,
            18753,
            false
          ],
          "250": [
            18851,
            18879,
            false
          ],
          "251": [
            18977,
            19005,
            false
          ]
        },
        "IsinaToken.get_available_private_bonus": {
          "252": [
            21441,
            21469,
            false
          ],
          "253": [
            21528,
            21556,
            false
          ],
          "254": [
            21629,
            21657,
            false
          ],
          "255": [
            21737,
            21765,
            false
          ],
          "256": [
            21845,
            21873,
            false
          ],
          "257": [
            21953,
            21981,
            false
          ],
          "258": [
            22061,
            22089,
            false
          ],
          "259": [
            22169,
            22197,
            false
          ],
          "260": [
            22277,
            22305,
            false
          ],
          "261": [
            22385,
            22413,
            false
          ],
          "262": [
            22493,
            22521,
            false
          ],
          "263": [
            22602,
            22630,
            false
          ],
          "264": [
            22711,
            22739,
            false
          ],
          "265": [
            22820,
            22848,
            false
          ],
          "266": [
            22929,
            22957,
            false
          ],
          "267": [
            23038,
            23066,
            false
          ],
          "268": [
            23147,
            23175,
            false
          ],
          "269": [
            23256,
            23284,
            false
          ]
        },
        "IsinaToken.get_available_reserve_balance": {
          "326": [
            12818,
            12846,
            false
          ],
          "327": [
            12905,
            12933,
            false
          ],
          "328": [
            13022,
            13050,
            false
          ],
          "329": [
            13139,
            13167,
            false
          ],
          "330": [
            13256,
            13284,
            false
          ],
          "331": [
            13373,
            13401,
            false
          ],
          "332": [
            13490,
            13518,
            false
          ],
          "333": [
            13607,
            13635,
            false
          ],
          "334": [
            13724,
            13752,
            false
          ],
          "335": [
            13841,
            13869,
            false
          ],
          "336": [
            13958,
            13986,
            false
          ],
          "337": [
            14075,
            14103,
            false
          ],
          "338": [
            14192,
            14220,
            false
          ],
          "339": [
            14309,
            14337,
            false
          ]
        },
        "IsinaToken.get_available_seed_balance": {
          "270": [
            14618,
            14646,
            false
          ],
          "271": [
            14705,
            14733,
            false
          ],
          "272": [
            14828,
            14856,
            false
          ],
          "273": [
            14951,
            14979,
            false
          ],
          "274": [
            15074,
            15102,
            false
          ],
          "275": [
            15197,
            15225,
            false
          ],
          "276": [
            15320,
            15348,
            false
          ],
          "277": [
            15443,
            15471,
            false
          ],
          "278": [
            15566,
            15594,
            false
          ],
          "279": [
            15689,
            15717,
            false
          ],
          "280": [
            15812,
            15840,
            false
          ],
          "281": [
            15935,
            15963,
            false
          ],
          "282": [
            16058,
            16086,
            false
          ],
          "283": [
            16181,
            16209,
            false
          ],
          "284": [
            16304,
            16332,
            false
          ],
          "285": [
            16427,
            16455,
            false
          ],
          "286": [
            16550,
            16578,
            false
          ]
        },
        "IsinaToken.get_available_seed_bonus": {
          "303": [
            19364,
            19392,
            false
          ],
          "304": [
            19451,
            19479,
            false
          ],
          "305": [
            19552,
            19580,
            false
          ],
          "306": [
            19660,
            19688,
            false
          ],
          "307": [
            19768,
            19796,
            false
          ],
          "308": [
            19876,
            19904,
            false
          ],
          "309": [
            19984,
            20012,
            false
          ],
          "310": [
            20092,
            20120,
            false
          ],
          "311": [
            20200,
            20228,
            false
          ],
          "312": [
            20308,
            20336,
            false
          ],
          "313": [
            20416,
            20444,
            false
          ],
          "314": [
            20525,
            20553,
            false
          ],
          "315": [
            20634,
            20662,
            false
          ],
          "316": [
            20743,
            20771,
            false
          ],
          "317": [
            20852,
            20880,
            false
          ],
          "318": [
            20961,
            20989,
            false
          ],
          "319": [
            21070,
            21098,
            false
          ]
        },
        "IsinaToken.get_available_team_balance": {
          "218": [
            9399,
            9427,
            false
          ],
          "219": [
            9486,
            9514,
            false
          ],
          "220": [
            9600,
            9628,
            false
          ],
          "221": [
            9714,
            9742,
            false
          ],
          "222": [
            9828,
            9856,
            false
          ],
          "223": [
            9942,
            9970,
            false
          ],
          "224": [
            10056,
            10084,
            false
          ],
          "225": [
            10170,
            10198,
            false
          ],
          "226": [
            10284,
            10312,
            false
          ],
          "227": [
            10398,
            10426,
            false
          ],
          "228": [
            10512,
            10540,
            false
          ],
          "229": [
            10626,
            10654,
            false
          ],
          "230": [
            10740,
            10768,
            false
          ],
          "231": [
            10854,
            10882,
            false
          ]
        },
        "IsinaToken.send_launchpad_tokens": {
          "325": [
            7289,
            7309,
            true
          ]
        },
        "IsinaToken.send_private_tokens": {
          "340": [
            6618,
            6636,
            true
          ]
        },
        "IsinaToken.send_seed_tokens": {
          "300": [
            5970,
            5985,
            true
          ]
        },
        "IsinaToken.unlock_private": {
          "301": [
            3939,
            3965,
            true
          ],
          "302": [
            4045,
            4077,
            true
          ]
        },
        "IsinaToken.unlock_seed": {
          "232": [
            3139,
            3162,
            true
          ],
          "233": [
            3242,
            3274,
            true
          ]
        }
      },
      "contracts/open-zeppelin/contracts/math/SafeMath.sol": {
        "SafeMath.add": {
          "356": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "354": [
            2757,
            2762,
            true
          ]
        },
        "SafeMath.mul": {
          "352": [
            1991,
            1997,
            false
          ],
          "353": [
            2077,
            2087,
            true
          ]
        },
        "SafeMath.sub": {
          "355": [
            1359,
            1365,
            true
          ]
        }
      },
      "contracts/open-zeppelin/contracts/ownership/Ownable.sol": {
        "Ownable._transferOwnership": {
          "357": [
            2167,
            2189,
            true
          ]
        }
      },
      "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20._approve": {
          "347": [
            7209,
            7228,
            true
          ],
          "348": [
            7287,
            7308,
            true
          ]
        },
        "ERC20._burn": {
          "349": [
            6466,
            6487,
            true
          ]
        },
        "ERC20._transfer": {
          "350": [
            5176,
            5196,
            true
          ],
          "351": [
            5256,
            5279,
            true
          ]
        }
      },
      "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol": {},
      "contracts/open-zeppelin/contracts/token/ERC20/IERC20.sol": {}
    },
    "statements": {
      "contracts/IsinaToken.sol": {
        "IsinaToken._transfer": {
          "196": [
            23664,
            23791
          ],
          "197": [
            23809,
            23957
          ],
          "198": [
            23975,
            24177
          ],
          "199": [
            24195,
            24294
          ],
          "200": [
            24333,
            24463
          ],
          "201": [
            24497,
            24539
          ]
        },
        "IsinaToken.burn_launchpad_tokens": {
          "158": [
            5033,
            5071
          ],
          "159": [
            5081,
            5101
          ]
        },
        "IsinaToken.burn_private_tokens": {
          "177": [
            4885,
            4921
          ],
          "178": [
            4931,
            4949
          ]
        },
        "IsinaToken.burn_seed_tokens": {
          "30": [
            4745,
            4778
          ],
          "31": [
            4788,
            4803
          ]
        },
        "IsinaToken.get_available_balance": {
          "141": [
            7616,
            7661
          ],
          "142": [
            7705,
            7861
          ],
          "143": [
            7920,
            8086
          ],
          "144": [
            8143,
            8317
          ],
          "145": [
            8376,
            8547
          ],
          "146": [
            8561,
            8728
          ],
          "147": [
            8790,
            8967
          ],
          "148": [
            8981,
            9154
          ],
          "149": [
            9174,
            9240
          ]
        },
        "IsinaToken.get_available_marketing_balance": {
          "93": [
            11199,
            11200
          ],
          "94": [
            11286,
            11319
          ],
          "95": [
            11405,
            11438
          ],
          "96": [
            11524,
            11557
          ],
          "97": [
            11643,
            11676
          ],
          "98": [
            11762,
            11795
          ],
          "99": [
            11881,
            11914
          ],
          "100": [
            12000,
            12033
          ],
          "101": [
            12119,
            12152
          ],
          "102": [
            12238,
            12271
          ],
          "103": [
            12357,
            12390
          ],
          "104": [
            12476,
            12509
          ],
          "105": [
            12595,
            12628
          ],
          "106": [
            12666,
            12682
          ]
        },
        "IsinaToken.get_available_private_balance": {
          "33": [
            16939,
            16940
          ],
          "34": [
            17026,
            17066
          ],
          "35": [
            17152,
            17192
          ],
          "36": [
            17278,
            17318
          ],
          "37": [
            17404,
            17444
          ],
          "38": [
            17530,
            17570
          ],
          "39": [
            17656,
            17696
          ],
          "40": [
            17782,
            17822
          ],
          "41": [
            17908,
            17948
          ],
          "42": [
            18034,
            18074
          ],
          "43": [
            18160,
            18200
          ],
          "44": [
            18286,
            18326
          ],
          "45": [
            18412,
            18452
          ],
          "46": [
            18538,
            18578
          ],
          "47": [
            18664,
            18704
          ],
          "48": [
            18790,
            18830
          ],
          "49": [
            18916,
            18956
          ],
          "50": [
            19042,
            19082
          ],
          "51": [
            19120,
            19143
          ]
        },
        "IsinaToken.get_available_private_bonus": {
          "55": [
            21372,
            21427
          ],
          "56": [
            21506,
            21507
          ],
          "57": [
            21593,
            21608
          ],
          "58": [
            21694,
            21716
          ],
          "59": [
            21802,
            21824
          ],
          "60": [
            21910,
            21932
          ],
          "61": [
            22018,
            22040
          ],
          "62": [
            22126,
            22148
          ],
          "63": [
            22234,
            22256
          ],
          "64": [
            22342,
            22364
          ],
          "65": [
            22450,
            22472
          ],
          "66": [
            22558,
            22581
          ],
          "67": [
            22667,
            22690
          ],
          "68": [
            22776,
            22799
          ],
          "69": [
            22885,
            22908
          ],
          "70": [
            22994,
            23017
          ],
          "71": [
            23103,
            23126
          ],
          "72": [
            23212,
            23235
          ],
          "73": [
            23321,
            23344
          ],
          "74": [
            23382,
            23403
          ]
        },
        "IsinaToken.get_available_reserve_balance": {
          "160": [
            12883,
            12884
          ],
          "161": [
            12970,
            13001
          ],
          "162": [
            13087,
            13118
          ],
          "163": [
            13204,
            13235
          ],
          "164": [
            13321,
            13352
          ],
          "165": [
            13438,
            13469
          ],
          "166": [
            13555,
            13586
          ],
          "167": [
            13672,
            13703
          ],
          "168": [
            13789,
            13820
          ],
          "169": [
            13906,
            13937
          ],
          "170": [
            14023,
            14054
          ],
          "171": [
            14140,
            14171
          ],
          "172": [
            14257,
            14288
          ],
          "173": [
            14374,
            14405
          ],
          "174": [
            14443,
            14457
          ]
        },
        "IsinaToken.get_available_seed_balance": {
          "75": [
            14683,
            14684
          ],
          "76": [
            14770,
            14807
          ],
          "77": [
            14893,
            14930
          ],
          "78": [
            15016,
            15053
          ],
          "79": [
            15139,
            15176
          ],
          "80": [
            15262,
            15299
          ],
          "81": [
            15385,
            15422
          ],
          "82": [
            15508,
            15545
          ],
          "83": [
            15631,
            15668
          ],
          "84": [
            15754,
            15791
          ],
          "85": [
            15877,
            15914
          ],
          "86": [
            16000,
            16037
          ],
          "87": [
            16123,
            16160
          ],
          "88": [
            16246,
            16283
          ],
          "89": [
            16369,
            16406
          ],
          "90": [
            16492,
            16529
          ],
          "91": [
            16615,
            16652
          ],
          "92": [
            16690,
            16710
          ]
        },
        "IsinaToken.get_available_seed_bonus": {
          "121": [
            19298,
            19350
          ],
          "122": [
            19429,
            19430
          ],
          "123": [
            19516,
            19531
          ],
          "124": [
            19617,
            19639
          ],
          "125": [
            19725,
            19747
          ],
          "126": [
            19833,
            19855
          ],
          "127": [
            19941,
            19963
          ],
          "128": [
            20049,
            20071
          ],
          "129": [
            20157,
            20179
          ],
          "130": [
            20265,
            20287
          ],
          "131": [
            20373,
            20395
          ],
          "132": [
            20481,
            20504
          ],
          "133": [
            20590,
            20613
          ],
          "134": [
            20699,
            20722
          ],
          "135": [
            20808,
            20831
          ],
          "136": [
            20917,
            20940
          ],
          "137": [
            21026,
            21049
          ],
          "138": [
            21135,
            21158
          ],
          "139": [
            21196,
            21214
          ]
        },
        "IsinaToken.get_available_team_balance": {
          "0": [
            9464,
            9465
          ],
          "1": [
            9551,
            9579
          ],
          "2": [
            9665,
            9693
          ],
          "3": [
            9779,
            9807
          ],
          "4": [
            9893,
            9921
          ],
          "5": [
            10007,
            10035
          ],
          "6": [
            10121,
            10149
          ],
          "7": [
            10235,
            10263
          ],
          "8": [
            10349,
            10377
          ],
          "9": [
            10463,
            10491
          ],
          "10": [
            10577,
            10605
          ],
          "11": [
            10691,
            10719
          ],
          "12": [
            10805,
            10833
          ],
          "13": [
            10919,
            10947
          ],
          "14": [
            10985,
            10996
          ]
        },
        "IsinaToken.send_launchpad_tokens": {
          "153": [
            7268,
            7367
          ],
          "154": [
            7377,
            7424
          ],
          "155": [
            7441,
            7474
          ]
        },
        "IsinaToken.send_private_tokens": {
          "180": [
            6597,
            6694
          ],
          "181": [
            6704,
            6771
          ],
          "182": [
            6781,
            6828
          ],
          "183": [
            6838,
            6907
          ],
          "184": [
            6917,
            6949
          ],
          "185": [
            6959,
            7020
          ],
          "186": [
            7037,
            7088
          ]
        },
        "IsinaToken.send_seed_tokens": {
          "107": [
            5949,
            6043
          ],
          "108": [
            6053,
            6114
          ],
          "109": [
            6124,
            6174
          ],
          "110": [
            6184,
            6247
          ],
          "111": [
            6257,
            6286
          ],
          "112": [
            6296,
            6351
          ],
          "113": [
            6368,
            6419
          ]
        },
        "IsinaToken.set_bank": {
          "175": [
            5191,
            5221
          ]
        },
        "IsinaToken.transfer": {
          "157": [
            5361,
            5401
          ]
        },
        "IsinaToken.transferFrom": {
          "19": [
            5590,
            5626
          ],
          "20": [
            5636,
            5753
          ],
          "21": [
            5770,
            5774
          ]
        },
        "IsinaToken.transfer_from_bank": {
          "151": [
            2996,
            3045
          ]
        },
        "IsinaToken.unlock_private": {
          "114": [
            3918,
            4014
          ],
          "115": [
            4024,
            4148
          ],
          "116": [
            4158,
            4192
          ],
          "117": [
            4202,
            4391
          ],
          "118": [
            4401,
            4432
          ],
          "119": [
            4442,
            4627
          ],
          "120": [
            4637,
            4666
          ]
        },
        "IsinaToken.unlock_seed": {
          "22": [
            3118,
            3211
          ],
          "23": [
            3221,
            3345
          ],
          "24": [
            3355,
            3386
          ],
          "25": [
            3396,
            3579
          ],
          "26": [
            3589,
            3617
          ],
          "27": [
            3627,
            3806
          ],
          "28": [
            3816,
            3842
          ]
        }
      },
      "contracts/open-zeppelin/contracts/math/SafeMath.sol": {
        "SafeMath.add": {
          "204": [
            911,
            928
          ],
          "205": [
            938,
            984
          ]
        },
        "SafeMath.div": {
          "190": [
            2749,
            2793
          ],
          "191": [
            2803,
            2820
          ]
        },
        "SafeMath.mul": {
          "187": [
            2020,
            2021
          ],
          "188": [
            2042,
            2059
          ],
          "189": [
            2069,
            2125
          ]
        },
        "SafeMath.sub": {
          "202": [
            1351,
            1400
          ],
          "203": [
            1410,
            1427
          ]
        }
      },
      "contracts/open-zeppelin/contracts/ownership/Ownable.sol": {
        "Ownable._transferOwnership": {
          "215": [
            2159,
            2232
          ],
          "216": [
            2242,
            2285
          ],
          "217": [
            2295,
            2312
          ]
        },
        "Ownable.isOwner": {
          "150": [
            1229,
            1249
          ]
        },
        "Ownable.owner": {
          "140": [
            879,
            885
          ]
        },
        "Ownable.renounceOwnership": {
          "53": [
            1656,
            1701
          ],
          "54": [
            1711,
            1730
          ]
        },
        "Ownable.transferOwnership": {
          "179": [
            1958,
            1986
          ]
        }
      },
      "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20._approve": {
          "192": [
            7201,
            7269
          ],
          "193": [
            7279,
            7347
          ],
          "194": [
            7358,
            7393
          ],
          "195": [
            7403,
            7439
          ]
        },
        "ERC20._burn": {
          "206": [
            6458,
            6525
          ],
          "207": [
            6536,
            6574
          ],
          "208": [
            6584,
            6634
          ],
          "209": [
            6644,
            6685
          ]
        },
        "ERC20._transfer": {
          "210": [
            5168,
            5238
          ],
          "211": [
            5248,
            5319
          ],
          "212": [
            5330,
            5379
          ],
          "213": [
            5389,
            5444
          ],
          "214": [
            5454,
            5494
          ]
        },
        "ERC20.allowance": {
          "176": [
            2281,
            2308
          ]
        },
        "ERC20.approve": {
          "16": [
            2534,
            2570
          ],
          "17": [
            2587,
            2591
          ]
        },
        "ERC20.balanceOf": {
          "52": [
            1744,
            1762
          ]
        },
        "ERC20.decreaseAllowance": {
          "156": [
            4493,
            4577
          ]
        },
        "ERC20.increaseAllowance": {
          "32": [
            3798,
            3877
          ]
        },
        "ERC20.totalSupply": {
          "18": [
            1584,
            1596
          ]
        }
      },
      "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol": {
        "ERC20Detailed.decimals": {
          "29": [
            1543,
            1552
          ]
        },
        "ERC20Detailed.name": {
          "15": [
            713,
            718
          ]
        },
        "ERC20Detailed.symbol": {
          "152": [
            909,
            916
          ]
        }
      },
      "contracts/open-zeppelin/contracts/token/ERC20/IERC20.sol": {}
    }
  },
  "dependencies": [
    "ERC20",
    "ERC20Detailed",
    "IERC20",
    "Ownable",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103425760003560e01c806385cde77f116101b8578063ab3e21ca11610104578063d973d490116100a2578063e02362041161007c578063e023620414610874578063eba5d84f1461087c578063f2fde38b146108a2578063ff6e1492146108c857610342565b8063d973d49014610818578063dacf64e214610820578063dd62ed3e1461084657610342565b8063bc109f9c116100de578063bc109f9c146107da578063bd7e700714610800578063cd3293de14610808578063d4fb3be91461081057610342565b8063ab3e21ca146107a4578063b22683fa146107ac578063b8c563f3146107d257610342565b80638e8a8d611161017157806395d89b411161014b57806395d89b41146107185780639cf5b6df14610720578063a457c2d71461074c578063a9059cbb1461077857610342565b80638e8a8d61146106be5780638f32d59b146106e457806393c2c682146106ec57610342565b806385cde77f1461056657806385f2aef21461067857806389807b6e146106805780638b74730c146106885780638c800d17146106ae5780638da5cb5b146106b657610342565b80633950935111610292578063715018a6116102305780637766fe6a1161020a5780637766fe6a146105f85780637891df9a1461061e57806382cf50641461064457806385cbc9261461064c57610342565b8063715018a6146105c257806372918a78146105ca57806376cdb03b146105f057610342565b806357fbc9401161026c57806357fbc940146105665780636c1030671461056e5780636f4a48e21461059457806370a082311461059c57610342565b8063395093511461050c57806341319831146105385780634f98fb101461054057610342565b806318160ddd116102ff5780632d3e474a116102d95780632d3e474a146104b85780632f8b4b7d146104dc578063313ce567146104e65780633918e59f1461050457610342565b806318160ddd146104545780631febcfee1461045c57806323b872dd1461048257610342565b80630253040114610347578063027c4ed2146103615780630655949c1461036957806306fdde0314610371578063095ea7b3146103ee5780630aa1d3f31461042e575b600080fd5b61034f6108f4565b60408051918252519081900360200190f35b61034f6108fa565b61034f610900565b610379610b2c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103b357818101518382015260200161039b565b50505050905090810190601f1680156103e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61041a6004803603604081101561040457600080fd5b506001600160a01b038135169060200135610bc2565b604080519115158252519081900360200190f35b61034f6004803603602081101561044457600080fd5b50356001600160a01b0316610bd9565b61034f610beb565b61034f6004803603602081101561047257600080fd5b50356001600160a01b0316610bf1565b61041a6004803603606081101561049857600080fd5b506001600160a01b03813581169160208101359091169060400135610c03565b6104c0610c3e565b604080516001600160a01b039092168252519081900360200190f35b6104e4610c4d565b005b6104ee610e0a565b6040805160ff9092168252519081900360200190f35b6104e4610e13565b61041a6004803603604081101561052257600080fd5b506001600160a01b038135169060200135610e83565b61034f610ebf565b61034f6004803603602081101561055657600080fd5b50356001600160a01b0316610ec4565b61034f61130e565b61034f6004803603602081101561058457600080fd5b50356001600160a01b0316611316565b61034f611328565b61034f600480360360208110156105b257600080fd5b50356001600160a01b031661132e565b6104e4611349565b61034f600480360360208110156105e057600080fd5b50356001600160a01b03166113e3565b6104c0611632565b61041a6004803603602081101561060e57600080fd5b50356001600160a01b0316611641565b61034f6004803603602081101561063457600080fd5b50356001600160a01b0316611656565b61034f611a5b565b61041a6004803603604081101561066257600080fd5b506001600160a01b038135169060200135611c4e565b6104c0611df0565b6104e4611dff565b61034f6004803603602081101561069e57600080fd5b50356001600160a01b0316611fa0565b61034f6121ca565b6104c06121d0565b61034f600480360360208110156106d457600080fd5b50356001600160a01b03166121e4565b61041a6123ef565b6104e46004803603604081101561070257600080fd5b506001600160a01b038135169060200135612405565b61037961246a565b61041a6004803603604081101561073657600080fd5b506001600160a01b0381351690602001356124cb565b61041a6004803603604081101561076257600080fd5b506001600160a01b038135169060200135612598565b61041a6004803603604081101561078e57600080fd5b506001600160a01b0381351690602001356125d4565b6104c06125e1565b61034f600480360360208110156107c257600080fd5b50356001600160a01b03166125f0565b6104e4612602565b61041a600480360360208110156107f057600080fd5b50356001600160a01b0316612672565b61034f612687565b6104c06128a1565b61034f6128b0565b61034f6128b6565b6104e46004803603602081101561083657600080fd5b50356001600160a01b03166128bc565b61034f6004803603604081101561085c57600080fd5b506001600160a01b0381358116916020013516612928565b6104e4612953565b61034f6004803603602081101561089257600080fd5b50356001600160a01b03166129c3565b6104e4600480360360208110156108b857600080fd5b50356001600160a01b03166129d5565b61041a600480360360408110156108de57600080fd5b506001600160a01b038135169060200135612a2b565b60095481565b600a5481565b6000635ed4450042101561091657506000610b29565b63603c2e8042101561095057610949606461093d600a600654612bbf90919063ffffffff16565b9063ffffffff612c1b16565b9050610b29565b63621d620042101561097757610949606461093d6014600654612bbf90919063ffffffff16565b636387ee8042101561099e57610949606461093d601e600654612bbf90919063ffffffff16565b6363fe95804210156109c557610949606461093d6023600654612bbf90919063ffffffff16565b6364c84b004210156109ec57610949606461093d6028600654612bbf90919063ffffffff16565b6365badf00421015610a1357610949606461093d602d600654612bbf90919063ffffffff16565b636609f900421015610a3a57610949606461093d6032600654612bbf90919063ffffffff16565b6366aad000421015610a6157610949606461093d6037600654612bbf90919063ffffffff16565b6366fb3b80421015610a8857610949606461093d603c600654612bbf90919063ffffffff16565b63674ba700421015610aaf57610949606461093d6041600654612bbf90919063ffffffff16565b6367c24e00421015610ad657610949606461093d6046600654612bbf90919063ffffffff16565b6368632500421015610afd57610949606461093d6050600654612bbf90919063ffffffff16565b63692cda80421015610b2457610949606461093d605a600654612bbf90919063ffffffff16565b506006545b90565b60038054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610bb85780601f10610b8d57610100808354040283529160200191610bb8565b820191906000526020600020905b815481529060010190602001808311610b9b57829003601f168201915b5050505050905090565b6000610bcf338484612c88565b5060015b92915050565b60116020526000908152604090205481565b60025490565b60126020526000908152604090205481565b6000610c10848484612d7a565b610c348433610c2f85610c238933612928565b9063ffffffff612fe116565b612c88565b5060019392505050565b600e546001600160a01b031681565b6001421015610c9057604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613395602c913960400191505060405180910390fd5b3360009081526015602052604090205460ff16610cf75760408051600160e51b62461bcd02815260206004820152601760248201527f546f6b656e73206d75737420626520756e6c6f636b6564000000000000000000604482015290519081900360640190fd5b63692cda804210610d3c57604051600160e51b62461bcd02815260040180806020018281038252602d81526020018061344a602d913960400191505060405180910390fd5b336000818152601560205260409020805460ff19169055610d9c90610d8090610d6490611656565b336000908152601160205260409020549063ffffffff612fe116565b336000908152601760205260409020549063ffffffff61304116565b336000818152601760209081526040808320949094556011905291822091909155610dea90610d8090610dce90611fa0565b336000908152601360205260409020549063ffffffff612fe116565b336000908152601760209081526040808320939093556013905290812055565b60055460ff1690565b600c546001600160a01b03163314610e635760408051600160e51b62461bcd02815260206004820152601e60248201526000805160206134bd833981519152604482015290519081900360640190fd5b600c54600954610e7c916001600160a01b03169061309e565b6000600955565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610bcf918590610c2f908663ffffffff61304116565b600181565b6000635de30280421015610eda57506000611309565b635e34bf80421015610f1e576001600160a01b038216600090815260126020526040902054610f179060649061093d90600f63ffffffff612bbf16565b9050611309565b635eab6680421015610f5b576001600160a01b038216600090815260126020526040902054610f179060649061093d90601463ffffffff612bbf16565b635fc58780421015610f98576001600160a01b038216600090815260126020526040902054610f179060649061093d90601963ffffffff612bbf16565b6360650d00421015610fd5576001600160a01b038216600090815260126020526040902054610f179060649061093d90601e63ffffffff612bbf16565b63608c9a00421015611012576001600160a01b038216600090815260126020526040902054610f179060649061093d90602363ffffffff612bbf16565b636105e40042101561104f576001600160a01b038216600090815260126020526040902054610f179060649061093d90602863ffffffff612bbf16565b6361a6bb0042101561108c576001600160a01b038216600090815260126020526040902054610f179060649061093d90602d63ffffffff612bbf16565b63621d62004210156110c9576001600160a01b038216600090815260126020526040902054610f179060649061093d90603263ffffffff612bbf16565b6362be3900421015611106576001600160a01b038216600090815260126020526040902054610f179060649061093d90603763ffffffff612bbf16565b6363378300421015611143576001600160a01b038216600090815260126020526040902054610f179060649061093d90603c63ffffffff612bbf16565b636387ee80421015611180576001600160a01b038216600090815260126020526040902054610f179060649061093d90604163ffffffff612bbf16565b63642774004210156111bd576001600160a01b038216600090815260126020526040902054610f179060649061093d90604663ffffffff612bbf16565b63649f6c804210156111fa576001600160a01b038216600090815260126020526040902054610f179060649061093d90604b63ffffffff612bbf16565b636518b680421015611237576001600160a01b038216600090815260126020526040902054610f179060649061093d90605063ffffffff612bbf16565b6365692200421015611274576001600160a01b038216600090815260126020526040902054610f179060649061093d90605563ffffffff612bbf16565b6365e11a804210156112b1576001600160a01b038216600090815260126020526040902054610f179060649061093d90605a63ffffffff612bbf16565b636681f1804210156112ee576001600160a01b038216600090815260126020526040902054610f179060649061093d90605f63ffffffff612bbf16565b506001600160a01b0381166000908152601260205260409020545b919050565b63692cda8081565b60136020526000908152604090205481565b60085481565b6001600160a01b031660009081526020819052604090205490565b6113516123ef565b6113935760408051600160e51b62461bcd028152602060048201819052602482015260008051602061342a833981519152604482015290519081900360640190fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b6001600160a01b038116600090815260146020526040812054819061140f90601263ffffffff612c1b16565b9050635de30280421015611427576000915050611309565b635e34bf8042101561143a579050611309565b635eab668042101561145f5761145781600263ffffffff612bbf16565b915050611309565b635fc5878042101561147c5761145781600363ffffffff612bbf16565b6360650d004210156114995761145781600463ffffffff612bbf16565b63608c9a004210156114b65761145781600563ffffffff612bbf16565b636105e4004210156114d35761145781600663ffffffff612bbf16565b6361a6bb004210156114f05761145781600763ffffffff612bbf16565b63621d620042101561150d5761145781600863ffffffff612bbf16565b6362be390042101561152a5761145781600963ffffffff612bbf16565b63633783004210156115475761145781600a63ffffffff612bbf16565b636387ee804210156115645761145781600b63ffffffff612bbf16565b63642774004210156115815761145781600c63ffffffff612bbf16565b63649f6c8042101561159e5761145781600d63ffffffff612bbf16565b636518b6804210156115bb5761145781600e63ffffffff612bbf16565b63656922004210156115d85761145781600f63ffffffff612bbf16565b6365e11a804210156115f55761145781601063ffffffff612bbf16565b636681f1804210156116125761145781601163ffffffff612bbf16565b50506001600160a01b038116600090815260146020526040902054611309565b6010546001600160a01b031681565b60156020526000908152604090205460ff1681565b6000635de3028042101561166c57506000611309565b635e5afb004210156116a9576001600160a01b038216600090815260116020526040902054610f179060649061093d90601463ffffffff612bbf16565b635efbd2004210156116e6576001600160a01b038216600090815260116020526040902054610f179060649061093d90601963ffffffff612bbf16565b635fc58780421015611723576001600160a01b038216600090815260116020526040902054610f179060649061093d90601e63ffffffff612bbf16565b6360650d00421015611760576001600160a01b038216600090815260116020526040902054610f179060649061093d90602363ffffffff612bbf16565b6360dd058042101561179d576001600160a01b038216600090815260116020526040902054610f179060649061093d90602863ffffffff612bbf16565b6361564f804210156117da576001600160a01b038216600090815260116020526040902054610f179060649061093d90602d63ffffffff612bbf16565b6361a6bb00421015611817576001600160a01b038216600090815260116020526040902054610f179060649061093d90603263ffffffff612bbf16565b63621d6200421015611854576001600160a01b038216600090815260116020526040902054610f179060649061093d90603763ffffffff612bbf16565b636296ac00421015611891576001600160a01b038216600090815260116020526040902054610f179060649061093d90603c63ffffffff612bbf16565b63630ff6004210156118ce576001600160a01b038216600090815260116020526040902054610f179060649061093d90604163ffffffff612bbf16565b636387ee8042101561190b576001600160a01b038216600090815260116020526040902054610f179060649061093d90604663ffffffff612bbf16565b6363fe9580421015611948576001600160a01b038216600090815260116020526040902054610f179060649061093d90604b63ffffffff612bbf16565b63644f0100421015611985576001600160a01b038216600090815260116020526040902054610f179060649061093d90605063ffffffff612bbf16565b63649f6c804210156119c2576001600160a01b038216600090815260116020526040902054610f179060649061093d90605563ffffffff612bbf16565b636518b6804210156119ff576001600160a01b038216600090815260116020526040902054610f179060649061093d90605a63ffffffff612bbf16565b6365692200421015611a3c576001600160a01b038216600090815260116020526040902054610f179060649061093d90605f63ffffffff612bbf16565b506001600160a01b038116600090815260116020526040902054611309565b6000635eab6680421015611a7157506000610b29565b63603c2e80421015611a9857610949606461093d600a600754612bbf90919063ffffffff16565b6362464080421015611abf57610949606461093d6014600754612bbf90919063ffffffff16565b6362be3900421015611ae657610949606461093d601e600754612bbf90919063ffffffff16565b636387ee80421015611b0d57610949606461093d6023600754612bbf90919063ffffffff16565b63644f0100421015611b3457610949606461093d6028600754612bbf90919063ffffffff16565b6364c84b00421015611b5b57610949606461093d6032600754612bbf90919063ffffffff16565b636609f900421015611b8257610949606461093d6037600754612bbf90919063ffffffff16565b6366aad000421015611ba957610949606461093d603c600754612bbf90919063ffffffff16565b63674ba700421015611bd057610949606461093d6041600754612bbf90919063ffffffff16565b6367eb2c80421015611bf757610949606461093d6046600754612bbf90919063ffffffff16565b63688c0380421015611c1e57610949606461093d6050600754612bbf90919063ffffffff16565b63692cda80421015611c4557610949606461093d605a600754612bbf90919063ffffffff16565b50600754610b29565b600c546000906001600160a01b03163314611ca15760408051600160e51b62461bcd02815260206004820152601e60248201526000805160206134bd833981519152604482015290519081900360640190fd5b600060095411611cfb5760408051600160e51b62461bcd02815260206004820181905260248201527f546f6b656e7320617265206f766572206f722073616c6520697320656e646564604482015290519081900360640190fd5b6001600160a01b038316600090815260116020526040902054611d24908363ffffffff61304116565b6001600160a01b038416600090815260116020526040812091909155611d5861271061093d856105d863ffffffff612bbf16565b6001600160a01b038516600090815260136020526040902054909150611d84908263ffffffff61304116565b6001600160a01b0385166000908152601360209081526040808320939093556015905220805460ff19166001179055600954611dcc908290610c23908663ffffffff612fe116565b600955611de884611de3858463ffffffff61304116565b6125d4565b949350505050565b600d546001600160a01b031681565b6001421015611e4257604051600160e51b62461bcd02815260040180806020018281038252602c815260200180613395602c913960400191505060405180910390fd5b3360009081526016602052604090205460ff16611ea95760408051600160e51b62461bcd02815260206004820152601760248201527f546f6b656e73206d75737420626520756e6c6f636b6564000000000000000000604482015290519081900360640190fd5b63692cda804210611eee57604051600160e51b62461bcd02815260040180806020018281038252602d81526020018061344a602d913960400191505060405180910390fd5b336000818152601660205260409020805460ff19169055611f3290610d8090611f1690610ec4565b336000908152601260205260409020549063ffffffff612fe116565b336000818152601760209081526040808320949094556012905291822091909155611f8090610d8090611f64906113e3565b336000908152601460205260409020549063ffffffff612fe116565b336000908152601760209081526040808320939093556014905290812055565b6001600160a01b0381166000908152601360205260408120548190611fcc90601163ffffffff612c1b16565b9050635de30280421015611fe4576000915050611309565b635e5afb00421015611ff7579050611309565b635efbd2004210156120145761145781600263ffffffff612bbf16565b635fc587804210156120315761145781600363ffffffff612bbf16565b6360650d0042101561204e5761145781600463ffffffff612bbf16565b6360dd058042101561206b5761145781600563ffffffff612bbf16565b6361564f804210156120885761145781600663ffffffff612bbf16565b6361a6bb004210156120a55761145781600763ffffffff612bbf16565b63621d62004210156120c25761145781600863ffffffff612bbf16565b636296ac004210156120df5761145781600963ffffffff612bbf16565b63630ff6004210156120fc5761145781600a63ffffffff612bbf16565b636387ee804210156121195761145781600b63ffffffff612bbf16565b6363fe95804210156121365761145781600c63ffffffff612bbf16565b63644f01004210156121535761145781600d63ffffffff612bbf16565b63649f6c804210156121705761145781600e63ffffffff612bbf16565b636518b68042101561218d5761145781600f63ffffffff612bbf16565b63656922004210156121aa5761145781601063ffffffff612bbf16565b50506001600160a01b038116600090815260136020526040902054611309565b60075481565b60055461010090046001600160a01b031690565b6000806121f08361132e565b600d549091506001600160a01b038481169116141561223657612233612226612217610900565b6006549063ffffffff612fe116565b829063ffffffff612fe116565b90505b600e546001600160a01b038481169116141561226c5761226961222661225a611a5b565b6007549063ffffffff612fe116565b90505b600f546001600160a01b03848116911614156122a25761229f612226612290612687565b6008549063ffffffff612fe116565b90505b6001600160a01b03831660009081526015602052604090205460ff1615612330576122f76122266122d285611656565b6001600160a01b0386166000908152601160205260409020549063ffffffff612fe116565b905061232d61222661230885611fa0565b6001600160a01b0386166000908152601360205260409020549063ffffffff612fe116565b90505b6001600160a01b03831660009081526016602052604090205460ff16156123be5761238561222661236085610ec4565b6001600160a01b0386166000908152601260205260409020549063ffffffff612fe116565b90506123bb612226612396856113e3565b6001600160a01b0386166000908152601460205260409020549063ffffffff612fe116565b90505b6001600160a01b0383166000908152601760205260409020546123e890829063ffffffff612fe116565b9392505050565b60055461010090046001600160a01b0316331490565b61240d6123ef565b61244f5760408051600160e51b62461bcd028152602060048201819052602482015260008051602061342a833981519152604482015290519081900360640190fd5b601054612466906001600160a01b0316838361317a565b5050565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610bb85780601f10610b8d57610100808354040283529160200191610bb8565b600c546000906001600160a01b0316331461251e5760408051600160e51b62461bcd02815260206004820152601e60248201526000805160206134bd833981519152604482015290519081900360640190fd5b6000600b54116125785760408051600160e51b62461bcd02815260206004820181905260248201527f546f6b656e7320617265206f766572206f722073616c6520697320656e646564604482015290519081900360640190fd5b600b5461258b908363ffffffff612fe116565b600b556123e883836125d4565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610bcf918590610c2f908663ffffffff612fe116565b6000610bcf338484612d7a565b600c546001600160a01b031681565b60176020526000908152604090205481565b600c546001600160a01b031633146126525760408051600160e51b62461bcd02815260206004820152601e60248201526000805160206134bd833981519152604482015290519081900360640190fd5b600c54600b5461266b916001600160a01b03169061309e565b6000600b55565b60166020526000908152604090205460ff1681565b6000635f4d8f0042101561269d57506000610b29565b63608c9a004210156126c457610949606461093d600a600854612bbf90919063ffffffff16565b63612ec2804210156126eb57610949606461093d600f600854612bbf90919063ffffffff16565b636296ac0042101561271257610949606461093d6014600854612bbf90919063ffffffff16565b636337830042101561273957610949606461093d6019600854612bbf90919063ffffffff16565b63644f010042101561276057610949606461093d601e600854612bbf90919063ffffffff16565b6364c84b0042101561278757610949606461093d6028600854612bbf90919063ffffffff16565b63663186004210156127ae57610949606461093d602d600854612bbf90919063ffffffff16565b636681f1804210156127d557610949606461093d6037600854612bbf90919063ffffffff16565b6366fb3b804210156127fc57610949606461093d603c600854612bbf90919063ffffffff16565b63674ba70042101561282357610949606461093d6041600854612bbf90919063ffffffff16565b636812b98042101561284a57610949606461093d6046600854612bbf90919063ffffffff16565b6368b4e20042101561287157610949606461093d6050600854612bbf90919063ffffffff16565b63692cda8042101561289857610949606461093d605a600854612bbf90919063ffffffff16565b50600854610b29565b600f546001600160a01b031681565b600b5481565b60065481565b6128c46123ef565b6129065760408051600160e51b62461bcd028152602060048201819052602482015260008051602061342a833981519152604482015290519081900360640190fd5b601080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600c546001600160a01b031633146129a35760408051600160e51b62461bcd02815260206004820152601e60248201526000805160206134bd833981519152604482015290519081900360640190fd5b600c54600a546129bc916001600160a01b03169061309e565b6000600a55565b60146020526000908152604090205481565b6129dd6123ef565b612a1f5760408051600160e51b62461bcd028152602060048201819052602482015260008051602061342a833981519152604482015290519081900360640190fd5b612a28816132c2565b50565b600c546000906001600160a01b03163314612a7e5760408051600160e51b62461bcd02815260206004820152601e60248201526000805160206134bd833981519152604482015290519081900360640190fd5b6000600a5411612ad85760408051600160e51b62461bcd02815260206004820181905260248201527f546f6b656e7320617265206f766572206f722073616c6520697320656e646564604482015290519081900360640190fd5b6001600160a01b038316600090815260126020526040902054612b01908363ffffffff61304116565b6001600160a01b038416600090815260126020526040812091909155612b346103e861093d85606363ffffffff612bbf16565b6001600160a01b038516600090815260146020526040902054909150612b60908263ffffffff61304116565b6001600160a01b0385166000908152601460209081526040808320939093556016905220805460ff19166001179055600a54612ba8908290610c23908663ffffffff612fe116565b600a55611de884611de3858463ffffffff61304116565b600082612bce57506000610bd3565b82820282848281612bdb57fe5b04146123e857604051600160e51b62461bcd0281526004018080602001828103825260218152602001806134096021913960400191505060405180910390fd5b6000808211612c745760408051600160e51b62461bcd02815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481612c7f57fe5b04949350505050565b6001600160a01b038316612cd057604051600160e51b62461bcd0281526004018080602001828103825260248152602001806134dd6024913960400191505060405180910390fd5b6001600160a01b038216612d1857604051600160e51b62461bcd0281526004018080602001828103825260228152602001806133e76022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b63692cda80421015612fd1576010546001600160a01b0383811691161415612f71576001600160a01b038316600090815260176020526040902054811115612e0c5760408051600160e51b62461bcd02815260206004820152601760248201527f546f6b656e73206d75737420626520756e6c6f636b6564000000000000000000604482015290519081900360640190fd5b63692cda804210612e5157604051600160e51b62461bcd02815260040180806020018281038252602d81526020018061344a602d913960400191505060405180910390fd5b60105460408051600160e31b6309444b130281526001600160a01b0386811660048301526024820185905291519190921691634a2258989160448083019260209291908290030181600087803b158015612eaa57600080fd5b505af1158015612ebe573d6000803e3d6000fd5b505050506040513d6020811015612ed457600080fd5b5051612f2a5760408051600160e51b62461bcd02815260206004820152600c60248201527f42616e6b2070726f626c656d0000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038316600090815260176020526040902054612f53908263ffffffff612fe116565b6001600160a01b038416600090815260176020526040902055612fd1565b612f7a836121e4565b811115612fd15760408051600160e51b62461bcd02815260206004820152601460248201527f4e6f20617661696c61626c652062616c616e6365000000000000000000000000604482015290519081900360640190fd5b612fdc83838361317a565b505050565b60008282111561303b5760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156123e85760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166130e657604051600160e51b62461bcd0281526004018080602001828103825260218152602001806134776021913960400191505060405180910390fd5b6002546130f9908263ffffffff612fe116565b6002556001600160a01b038216600090815260208190526040902054613125908263ffffffff612fe116565b6001600160a01b038316600081815260208181526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b6001600160a01b0383166131c257604051600160e51b62461bcd0281526004018080602001828103825260258152602001806134986025913960400191505060405180910390fd5b6001600160a01b03821661320a57604051600160e51b62461bcd0281526004018080602001828103825260238152602001806133726023913960400191505060405180910390fd5b6001600160a01b038316600090815260208190526040902054613233908263ffffffff612fe116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054613268908263ffffffff61304116565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b03811661330a57604051600160e51b62461bcd0281526004018080602001828103825260268152602001806133c16026913960400191505060405180910390fd5b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b031990921691909117905556fe45524332303a207472616e7366657220746f20746865207a65726f20616464726573735468652074696d65206d757374206265206c6f6e676572207468616e2074686520756e6c6f636b2074696d654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725468652074696d65206d757374206265206c657373207468616e207468652073746f702073656c6c2074696d6545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737353656e646572206d757374206265206120746f6b656e7320686f6c646572000045524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a723058206cf9d88efc1353e9467216f803ac40a96208cecb29dc5c7717a77a7e600cdae80029",
  "deployedSourceMap": "597:23951:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;597:23951:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:26;;;:::i;:::-;;;;;;;;;;;;;;;;1004:29;;;:::i;9289:1724::-;;;:::i;644:81:5:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2453:145:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1223:47:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1223:47:1;-1:-1:-1;;;;;1223:47:1;;:::i;1514:89:4:-;;;:::i;1276:50:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1276:50:1;-1:-1:-1;;;;;1276:50:1;;:::i;5435:346::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5435:346:1;;;;;;;;;;;;;;;;;:::i;1136:24::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1136:24:1;;;;;;;;;;;;;;3058:791;;;:::i;:::-;;1478:81:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4679:131:1;;;:::i;3702:203:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3702:203:4;;;;;;;;:::i;689:39:1:-;;;:::i;16733:2427::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16733:2427:1;-1:-1:-1;;;;;16733:2427:1;;:::i;734:56::-;;;:::i;1332:45::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1332:45:1;-1:-1:-1;;;;;1332:45:1;;:::i;937:29::-;;;:::i;1661:108:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1661:108:4;-1:-1:-1;;;;;1661:108:4;;:::i;1600:137:3:-;;;:::i;21237:2183:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21237:2183:1;-1:-1:-1;;;;;21237:2183:1;;:::i;1195:21::-;;;:::i;1437:43::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1437:43:1;-1:-1:-1;;;;;1437:43:1;;:::i;14480:2247::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14480:2247:1;-1:-1:-1;;;;;14480:2247:1;;:::i;11019:1680::-;;;:::i;5787:639::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5787:639:1;;;;;;;;:::i;1111:19::-;;;:::i;3855:818::-;;;:::i;19166:2065::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19166:2065:1;-1:-1:-1;;;;;19166:2065:1;;:::i;900:31::-;;;:::i;815:77:3:-;;;:::i;7487:1796:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7487:1796:1;-1:-1:-1;;;;;7487:1796:1;;:::i;1166:90:3:-;;;:::i;2862:190:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2862:190:1;;;;;;;;:::i;838:85:5:-;;;:::i;7101:380:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7101:380:1;;;;;;;;:::i;4392:213:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4392:213:4;;;;;;;;:::i;5234:195:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5234:195:1;;;;;;;;:::i;1077:28::-;;;:::i;1538:50::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1538:50:1;-1:-1:-1;;;;;1538:50:1;;:::i;4962:146::-;;;:::i;1486:46::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1486:46:1;-1:-1:-1;;;;;1486:46:1;;:::i;12705:1769::-;;;:::i;1166:22::-;;;:::i;1039:31::-;;;:::i;868:26::-;;;:::i;5114:114::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5114:114:1;-1:-1:-1;;;;;5114:114:1;;:::i;2183:132:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2183:132:4;;;;;;;;;;:::i;4816:140:1:-;;;:::i;1383:48::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:48:1;-1:-1:-1;;;;;1383:48:1;;:::i;1886:107:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1886:107:3;-1:-1:-1;;;;;1886:107:3;;:::i;6432:663:1:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6432:663:1;;;;;;;;:::i;972:26::-;;;;:::o;1004:29::-;;;;:::o;9289:1724::-;9372:7;9417:10;9399:15;:28;9395:1612;;;-1:-1:-1;9464:1:1;9457:8;;9395:1612;9504:10;9486:15;:28;9482:1525;;;9551:28;9575:3;9551:19;9567:2;9551:11;;:15;;:19;;;;:::i;:::-;:23;:28;:23;:28;:::i;:::-;9544:35;;;;9482:1525;9618:10;9600:15;:28;9596:1411;;;9665:28;9689:3;9665:19;9681:2;9665:11;;:15;;:19;;;;:::i;9596:1411::-;9732:10;9714:15;:28;9710:1297;;;9779:28;9803:3;9779:19;9795:2;9779:11;;:15;;:19;;;;:::i;9710:1297::-;9846:10;9828:15;:28;9824:1183;;;9893:28;9917:3;9893:19;9909:2;9893:11;;:15;;:19;;;;:::i;9824:1183::-;9960:10;9942:15;:28;9938:1069;;;10007:28;10031:3;10007:19;10023:2;10007:11;;:15;;:19;;;;:::i;9938:1069::-;10074:10;10056:15;:28;10052:955;;;10121:28;10145:3;10121:19;10137:2;10121:11;;:15;;:19;;;;:::i;10052:955::-;10188:10;10170:15;:28;10166:841;;;10235:28;10259:3;10235:19;10251:2;10235:11;;:15;;:19;;;;:::i;10166:841::-;10302:10;10284:15;:28;10280:727;;;10349:28;10373:3;10349:19;10365:2;10349:11;;:15;;:19;;;;:::i;10280:727::-;10416:10;10398:15;:28;10394:613;;;10463:28;10487:3;10463:19;10479:2;10463:11;;:15;;:19;;;;:::i;10394:613::-;10530:10;10512:15;:28;10508:499;;;10577:28;10601:3;10577:19;10593:2;10577:11;;:15;;:19;;;;:::i;10508:499::-;10644:10;10626:15;:28;10622:385;;;10691:28;10715:3;10691:19;10707:2;10691:11;;:15;;:19;;;;:::i;10622:385::-;10758:10;10740:15;:28;10736:271;;;10805:28;10829:3;10805:19;10821:2;10805:11;;:15;;:19;;;;:::i;10736:271::-;10872:10;10854:15;:28;10850:157;;;10919:28;10943:3;10919:19;10935:2;10919:11;;:15;;:19;;;;:::i;10850:157::-;-1:-1:-1;10985:11:1;;10850:157;9289:1724;:::o;644:81:5:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2453:145:4:-;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;-1:-1:-1;2587:4:4;2453:145;;;;;:::o;1223:47:1:-;;;;;;;;;;;;;:::o;1514:89:4:-;1584:12;;1514:89;:::o;1276:50:1:-;;;;;;;;;;;;;:::o;5435:346::-;5570:4;5590:36;5600:6;5608:9;5619:6;5590:9;:36::i;:::-;5636:117;5658:6;5678:10;5702:41;5736:6;5702:29;5712:6;5720:10;5702:9;:29::i;:::-;:33;:41;:33;:41;:::i;:::-;5636:8;:117::i;:::-;-1:-1:-1;5770:4:1;5435:346;;;;;:::o;1136:24::-;;;-1:-1:-1;;;;;1136:24:1;;:::o;3058:791::-;727:1;1823:15;:30;;1802:121;;;;-1:-1:-1;;;;;1802:121:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:10;3139:23;;;;:11;:23;;;;;;;;3118:93;;;;;-1:-1:-1;;;;;3118:93:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:10;3242:15;:32;3221:124;;;;-1:-1:-1;;;;;3221:124:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:10;3381:5;3355:23;;;:11;:23;;;;;:31;;-1:-1:-1;;3355:31:1;;;3426:153;;3471:98;;3517:38;;:26;:38::i;:::-;3484:10;3471:24;;;;:12;:24;;;;;;;:98;:28;:98;:::i;:::-;3442:10;3426:27;;;;:15;:27;;;;;;;:153;:31;:153;:::i;:::-;3412:10;3396:27;;;;:15;:27;;;;;;;;:183;;;;3589:12;:24;;;;;:28;;;;3657:149;;3702:94;;3746:36;;:24;:36::i;:::-;3713:10;3702:22;;;;:10;:22;;;;;;;:94;:26;:94;:::i;3657:149::-;3643:10;3627:27;;;;:15;:27;;;;;;;;:179;;;;3816:10;:22;;;;;:26;3058:791::o;1478:81:5:-;1543:9;;;;1478:81;:::o;4679:131:1:-;1670:13;;-1:-1:-1;;;;;1670:13:1;1656:10;:27;1635:104;;;;;-1:-1:-1;;;;;1635:104:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1635:104:1;;;;;;;;;;;;;;;4751:13;;4766:11;;4745:33;;-1:-1:-1;;;;;4751:13:1;;4745:5;:33::i;:::-;4802:1;4788:11;:15;4679:131::o;3702:203:4:-;3807:10;3782:4;3828:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3828:32:4;;;;;;;;;;3782:4;;3798:79;;3819:7;;3828:48;;3865:10;3828:48;:36;:48;:::i;689:39:1:-;727:1;689:39;:::o;16733:2427::-;16847:7;16892:10;16874:15;:28;16870:2284;;;-1:-1:-1;16939:1:1;16932:8;;16870:2284;16979:10;16961:15;:28;16957:2197;;;-1:-1:-1;;;;;17026:23:1;;;;;;:15;:23;;;;;;:40;;17062:3;;17026:31;;17054:2;17026:31;:27;:31;:::i;:40::-;17019:47;;;;16957:2197;17105:10;17087:15;:28;17083:2071;;;-1:-1:-1;;;;;17152:23:1;;;;;;:15;:23;;;;;;:40;;17188:3;;17152:31;;17180:2;17152:31;:27;:31;:::i;17083:2071::-;17231:10;17213:15;:28;17209:1945;;;-1:-1:-1;;;;;17278:23:1;;;;;;:15;:23;;;;;;:40;;17314:3;;17278:31;;17306:2;17278:31;:27;:31;:::i;17209:1945::-;17357:10;17339:15;:28;17335:1819;;;-1:-1:-1;;;;;17404:23:1;;;;;;:15;:23;;;;;;:40;;17440:3;;17404:31;;17432:2;17404:31;:27;:31;:::i;17335:1819::-;17483:10;17465:15;:28;17461:1693;;;-1:-1:-1;;;;;17530:23:1;;;;;;:15;:23;;;;;;:40;;17566:3;;17530:31;;17558:2;17530:31;:27;:31;:::i;17461:1693::-;17609:10;17591:15;:28;17587:1567;;;-1:-1:-1;;;;;17656:23:1;;;;;;:15;:23;;;;;;:40;;17692:3;;17656:31;;17684:2;17656:31;:27;:31;:::i;17587:1567::-;17735:10;17717:15;:28;17713:1441;;;-1:-1:-1;;;;;17782:23:1;;;;;;:15;:23;;;;;;:40;;17818:3;;17782:31;;17810:2;17782:31;:27;:31;:::i;17713:1441::-;17861:10;17843:15;:28;17839:1315;;;-1:-1:-1;;;;;17908:23:1;;;;;;:15;:23;;;;;;:40;;17944:3;;17908:31;;17936:2;17908:31;:27;:31;:::i;17839:1315::-;17987:10;17969:15;:28;17965:1189;;;-1:-1:-1;;;;;18034:23:1;;;;;;:15;:23;;;;;;:40;;18070:3;;18034:31;;18062:2;18034:31;:27;:31;:::i;17965:1189::-;18113:10;18095:15;:28;18091:1063;;;-1:-1:-1;;;;;18160:23:1;;;;;;:15;:23;;;;;;:40;;18196:3;;18160:31;;18188:2;18160:31;:27;:31;:::i;18091:1063::-;18239:10;18221:15;:28;18217:937;;;-1:-1:-1;;;;;18286:23:1;;;;;;:15;:23;;;;;;:40;;18322:3;;18286:31;;18314:2;18286:31;:27;:31;:::i;18217:937::-;18365:10;18347:15;:28;18343:811;;;-1:-1:-1;;;;;18412:23:1;;;;;;:15;:23;;;;;;:40;;18448:3;;18412:31;;18440:2;18412:31;:27;:31;:::i;18343:811::-;18491:10;18473:15;:28;18469:685;;;-1:-1:-1;;;;;18538:23:1;;;;;;:15;:23;;;;;;:40;;18574:3;;18538:31;;18566:2;18538:31;:27;:31;:::i;18469:685::-;18617:10;18599:15;:28;18595:559;;;-1:-1:-1;;;;;18664:23:1;;;;;;:15;:23;;;;;;:40;;18700:3;;18664:31;;18692:2;18664:31;:27;:31;:::i;18595:559::-;18743:10;18725:15;:28;18721:433;;;-1:-1:-1;;;;;18790:23:1;;;;;;:15;:23;;;;;;:40;;18826:3;;18790:31;;18818:2;18790:31;:27;:31;:::i;18721:433::-;18869:10;18851:15;:28;18847:307;;;-1:-1:-1;;;;;18916:23:1;;;;;;:15;:23;;;;;;:40;;18952:3;;18916:31;;18944:2;18916:31;:27;:31;:::i;18847:307::-;18995:10;18977:15;:28;18973:181;;;-1:-1:-1;;;;;19042:23:1;;;;;;:15;:23;;;;;;:40;;19078:3;;19042:31;;19070:2;19042:31;:27;:31;:::i;18973:181::-;-1:-1:-1;;;;;;19120:23:1;;;;;;:15;:23;;;;;;18973:181;16733:2427;;;:::o;734:56::-;780:10;734:56;:::o;1332:45::-;;;;;;;;;;;;;:::o;937:29::-;;;;:::o;1661:108:4:-;-1:-1:-1;;;;;1744:18:4;1718:7;1744:18;;;;;;;;;;;;1661:108::o;1600:137:3:-;1019:9;:7;:9::i;:::-;1011:54;;;;;-1:-1:-1;;;;;1011:54:3;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1011:54:3;;;;;;;;;;;;;;;1682:6;;1661:40;;1698:1;;1682:6;;;-1:-1:-1;;;;;1682:6:3;;1661:40;;1698:1;;1661:40;1711:6;:19;;-1:-1:-1;;;;;;1711:19:3;;;1600:137::o;21237:2183:1:-;-1:-1:-1;;;;;21398:21:1;;21349:7;21398:21;;;:13;:21;;;;;;21349:7;;21398:29;;21424:2;21398:29;:25;:29;:::i;:::-;21372:55;;21459:10;21441:15;:28;21437:1977;;;21506:1;21499:8;;;;;21437:1977;21546:10;21528:15;:28;21524:1890;;;21593:15;-1:-1:-1;21586:22:1;;21524:1890;21647:10;21629:15;:28;21625:1789;;;21694:22;:15;21714:1;21694:22;:19;:22;:::i;:::-;21687:29;;;;;21625:1789;21755:10;21737:15;:28;21733:1681;;;21802:22;:15;21822:1;21802:22;:19;:22;:::i;21733:1681::-;21863:10;21845:15;:28;21841:1573;;;21910:22;:15;21930:1;21910:22;:19;:22;:::i;21841:1573::-;21971:10;21953:15;:28;21949:1465;;;22018:22;:15;22038:1;22018:22;:19;:22;:::i;21949:1465::-;22079:10;22061:15;:28;22057:1357;;;22126:22;:15;22146:1;22126:22;:19;:22;:::i;22057:1357::-;22187:10;22169:15;:28;22165:1249;;;22234:22;:15;22254:1;22234:22;:19;:22;:::i;22165:1249::-;22295:10;22277:15;:28;22273:1141;;;22342:22;:15;22362:1;22342:22;:19;:22;:::i;22273:1141::-;22403:10;22385:15;:28;22381:1033;;;22450:22;:15;22470:1;22450:22;:19;:22;:::i;22381:1033::-;22511:10;22493:15;:28;22489:925;;;22558:23;:15;22578:2;22558:23;:19;:23;:::i;22489:925::-;22620:10;22602:15;:28;22598:816;;;22667:23;:15;22687:2;22667:23;:19;:23;:::i;22598:816::-;22729:10;22711:15;:28;22707:707;;;22776:23;:15;22796:2;22776:23;:19;:23;:::i;22707:707::-;22838:10;22820:15;:28;22816:598;;;22885:23;:15;22905:2;22885:23;:19;:23;:::i;22816:598::-;22947:10;22929:15;:28;22925:489;;;22994:23;:15;23014:2;22994:23;:19;:23;:::i;22925:489::-;23056:10;23038:15;:28;23034:380;;;23103:23;:15;23123:2;23103:23;:19;:23;:::i;23034:380::-;23165:10;23147:15;:28;23143:271;;;23212:23;:15;23232:2;23212:23;:19;:23;:::i;23143:271::-;23274:10;23256:15;:28;23252:162;;;23321:23;:15;23341:2;23321:23;:19;:23;:::i;23252:162::-;-1:-1:-1;;;;;;;23382:21:1;;;;;;:13;:21;;;;;;23375:28;;1195:21;;;-1:-1:-1;;;;;1195:21:1;;:::o;1437:43::-;;;;;;;;;;;;;;;:::o;14480:2247::-;14591:7;14636:10;14618:15;:28;14614:2107;;;-1:-1:-1;14683:1:1;14676:8;;14614:2107;14723:10;14705:15;:28;14701:2020;;;-1:-1:-1;;;;;14770:20:1;;;;;;:12;:20;;;;;;:37;;14803:3;;14770:28;;14795:2;14770:28;:24;:28;:::i;14701:2020::-;14846:10;14828:15;:28;14824:1897;;;-1:-1:-1;;;;;14893:20:1;;;;;;:12;:20;;;;;;:37;;14926:3;;14893:28;;14918:2;14893:28;:24;:28;:::i;14824:1897::-;14969:10;14951:15;:28;14947:1774;;;-1:-1:-1;;;;;15016:20:1;;;;;;:12;:20;;;;;;:37;;15049:3;;15016:28;;15041:2;15016:28;:24;:28;:::i;14947:1774::-;15092:10;15074:15;:28;15070:1651;;;-1:-1:-1;;;;;15139:20:1;;;;;;:12;:20;;;;;;:37;;15172:3;;15139:28;;15164:2;15139:28;:24;:28;:::i;15070:1651::-;15215:10;15197:15;:28;15193:1528;;;-1:-1:-1;;;;;15262:20:1;;;;;;:12;:20;;;;;;:37;;15295:3;;15262:28;;15287:2;15262:28;:24;:28;:::i;15193:1528::-;15338:10;15320:15;:28;15316:1405;;;-1:-1:-1;;;;;15385:20:1;;;;;;:12;:20;;;;;;:37;;15418:3;;15385:28;;15410:2;15385:28;:24;:28;:::i;15316:1405::-;15461:10;15443:15;:28;15439:1282;;;-1:-1:-1;;;;;15508:20:1;;;;;;:12;:20;;;;;;:37;;15541:3;;15508:28;;15533:2;15508:28;:24;:28;:::i;15439:1282::-;15584:10;15566:15;:28;15562:1159;;;-1:-1:-1;;;;;15631:20:1;;;;;;:12;:20;;;;;;:37;;15664:3;;15631:28;;15656:2;15631:28;:24;:28;:::i;15562:1159::-;15707:10;15689:15;:28;15685:1036;;;-1:-1:-1;;;;;15754:20:1;;;;;;:12;:20;;;;;;:37;;15787:3;;15754:28;;15779:2;15754:28;:24;:28;:::i;15685:1036::-;15830:10;15812:15;:28;15808:913;;;-1:-1:-1;;;;;15877:20:1;;;;;;:12;:20;;;;;;:37;;15910:3;;15877:28;;15902:2;15877:28;:24;:28;:::i;15808:913::-;15953:10;15935:15;:28;15931:790;;;-1:-1:-1;;;;;16000:20:1;;;;;;:12;:20;;;;;;:37;;16033:3;;16000:28;;16025:2;16000:28;:24;:28;:::i;15931:790::-;16076:10;16058:15;:28;16054:667;;;-1:-1:-1;;;;;16123:20:1;;;;;;:12;:20;;;;;;:37;;16156:3;;16123:28;;16148:2;16123:28;:24;:28;:::i;16054:667::-;16199:10;16181:15;:28;16177:544;;;-1:-1:-1;;;;;16246:20:1;;;;;;:12;:20;;;;;;:37;;16279:3;;16246:28;;16271:2;16246:28;:24;:28;:::i;16177:544::-;16322:10;16304:15;:28;16300:421;;;-1:-1:-1;;;;;16369:20:1;;;;;;:12;:20;;;;;;:37;;16402:3;;16369:28;;16394:2;16369:28;:24;:28;:::i;16300:421::-;16445:10;16427:15;:28;16423:298;;;-1:-1:-1;;;;;16492:20:1;;;;;;:12;:20;;;;;;:37;;16525:3;;16492:28;;16517:2;16492:28;:24;:28;:::i;16423:298::-;16568:10;16550:15;:28;16546:175;;;-1:-1:-1;;;;;16615:20:1;;;;;;:12;:20;;;;;;:37;;16648:3;;16615:28;;16640:2;16615:28;:24;:28;:::i;16546:175::-;-1:-1:-1;;;;;;16690:20:1;;;;;;:12;:20;;;;;;16683:27;;11019:1680;11107:7;11152:10;11134:15;:28;11130:1563;;;-1:-1:-1;11199:1:1;11192:8;;11130:1563;11239:10;11221:15;:28;11217:1476;;;11286:33;11315:3;11286:24;11307:2;11286:16;;:20;;:24;;;;:::i;11217:1476::-;11358:10;11340:15;:28;11336:1357;;;11405:33;11434:3;11405:24;11426:2;11405:16;;:20;;:24;;;;:::i;11336:1357::-;11477:10;11459:15;:28;11455:1238;;;11524:33;11553:3;11524:24;11545:2;11524:16;;:20;;:24;;;;:::i;11455:1238::-;11596:10;11578:15;:28;11574:1119;;;11643:33;11672:3;11643:24;11664:2;11643:16;;:20;;:24;;;;:::i;11574:1119::-;11715:10;11697:15;:28;11693:1000;;;11762:33;11791:3;11762:24;11783:2;11762:16;;:20;;:24;;;;:::i;11693:1000::-;11834:10;11816:15;:28;11812:881;;;11881:33;11910:3;11881:24;11902:2;11881:16;;:20;;:24;;;;:::i;11812:881::-;11953:10;11935:15;:28;11931:762;;;12000:33;12029:3;12000:24;12021:2;12000:16;;:20;;:24;;;;:::i;11931:762::-;12072:10;12054:15;:28;12050:643;;;12119:33;12148:3;12119:24;12140:2;12119:16;;:20;;:24;;;;:::i;12050:643::-;12191:10;12173:15;:28;12169:524;;;12238:33;12267:3;12238:24;12259:2;12238:16;;:20;;:24;;;;:::i;12169:524::-;12310:10;12292:15;:28;12288:405;;;12357:33;12386:3;12357:24;12378:2;12357:16;;:20;;:24;;;;:::i;12288:405::-;12429:10;12411:15;:28;12407:286;;;12476:33;12505:3;12476:24;12497:2;12476:16;;:20;;:24;;;;:::i;12407:286::-;12548:10;12530:15;:28;12526:167;;;12595:33;12624:3;12595:24;12616:2;12595:16;;:20;;:24;;;;:::i;12526:167::-;-1:-1:-1;12666:16:1;;12659:23;;5787:639;1670:13;;5929:4;;-1:-1:-1;;;;;1670:13:1;1656:10;:27;1635:104;;;;;-1:-1:-1;;;;;1635:104:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1635:104:1;;;;;;;;;;;;;;;5984:1;5970:11;;:15;5949:94;;;;;-1:-1:-1;;;;;5949:94:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6079:23:1;;;;;;:12;:23;;;;;;:35;;6107:6;6079:35;:27;:35;:::i;:::-;-1:-1:-1;;;;;6053:23:1;;;;;;:12;:23;;;;;:61;;;;6147:27;6168:5;6147:16;:6;6158:4;6147:16;:10;:16;:::i;:27::-;-1:-1:-1;;;;;6208:21:1;;;;;;:10;:21;;;;;;6124:50;;-1:-1:-1;6208:39:1;;6124:50;6208:39;:25;:39;:::i;:::-;-1:-1:-1;;;;;6184:21:1;;;;;;:10;:21;;;;;;;;:63;;;;6257:11;:22;;;:29;;-1:-1:-1;;6257:29:1;6282:4;6257:29;;;6310:11;;:41;;6338:12;;6310:23;;6326:6;6310:23;:15;:23;:::i;:41::-;6296:11;:55;6368:51;6383:9;6394:24;:6;6405:12;6394:24;:10;:24;:::i;:::-;6368:14;:51::i;:::-;6361:58;5787:639;-1:-1:-1;;;;5787:639:1:o;1111:19::-;;;-1:-1:-1;;;;;1111:19:1;;:::o;3855:818::-;727:1;1823:15;:30;;1802:121;;;;-1:-1:-1;;;;;1802:121:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3954:10;3939:26;;;;:14;:26;;;;;;;;3918:96;;;;;-1:-1:-1;;;;;3918:96:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:10;4045:15;:32;4024:124;;;;-1:-1:-1;;;;;4024:124:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4173:10;4187:5;4158:26;;;:14;:26;;;;;:34;;-1:-1:-1;;4158:34:1;;;4232:159;;4277:104;;4326:41;;:29;:41::i;:::-;4293:10;4277:27;;;;:15;:27;;;;;;;:104;:31;:104;:::i;4232:159::-;4218:10;4202:27;;;;:15;:27;;;;;;;;:189;;;;4401:15;:27;;;;;:31;;;;4472:155;;4517:100;;4564:39;;:27;:39::i;:::-;4531:10;4517:25;;;;:13;:25;;;;;;;:100;:29;:100;:::i;4472:155::-;4458:10;4442:27;;;;:15;:27;;;;;;;;:185;;;;4637:13;:25;;;;;:29;3855:818::o;19166:2065::-;-1:-1:-1;;;;;19324:18:1;;19275:7;19324:18;;;:10;:18;;;;;;19275:7;;19324:26;;19347:2;19324:26;:22;:26;:::i;:::-;19298:52;;19382:10;19364:15;:28;19360:1865;;;19429:1;19422:8;;;;;19360:1865;19469:10;19451:15;:28;19447:1778;;;19516:15;-1:-1:-1;19509:22:1;;19447:1778;19570:10;19552:15;:28;19548:1677;;;19617:22;:15;19637:1;19617:22;:19;:22;:::i;19548:1677::-;19678:10;19660:15;:28;19656:1569;;;19725:22;:15;19745:1;19725:22;:19;:22;:::i;19656:1569::-;19786:10;19768:15;:28;19764:1461;;;19833:22;:15;19853:1;19833:22;:19;:22;:::i;19764:1461::-;19894:10;19876:15;:28;19872:1353;;;19941:22;:15;19961:1;19941:22;:19;:22;:::i;19872:1353::-;20002:10;19984:15;:28;19980:1245;;;20049:22;:15;20069:1;20049:22;:19;:22;:::i;19980:1245::-;20110:10;20092:15;:28;20088:1137;;;20157:22;:15;20177:1;20157:22;:19;:22;:::i;20088:1137::-;20218:10;20200:15;:28;20196:1029;;;20265:22;:15;20285:1;20265:22;:19;:22;:::i;20196:1029::-;20326:10;20308:15;:28;20304:921;;;20373:22;:15;20393:1;20373:22;:19;:22;:::i;20304:921::-;20434:10;20416:15;:28;20412:813;;;20481:23;:15;20501:2;20481:23;:19;:23;:::i;20412:813::-;20543:10;20525:15;:28;20521:704;;;20590:23;:15;20610:2;20590:23;:19;:23;:::i;20521:704::-;20652:10;20634:15;:28;20630:595;;;20699:23;:15;20719:2;20699:23;:19;:23;:::i;20630:595::-;20761:10;20743:15;:28;20739:486;;;20808:23;:15;20828:2;20808:23;:19;:23;:::i;20739:486::-;20870:10;20852:15;:28;20848:377;;;20917:23;:15;20937:2;20917:23;:19;:23;:::i;20848:377::-;20979:10;20961:15;:28;20957:268;;;21026:23;:15;21046:2;21026:23;:19;:23;:::i;20957:268::-;21088:10;21070:15;:28;21066:159;;;21135:23;:15;21155:2;21135:23;:19;:23;:::i;21066:159::-;-1:-1:-1;;;;;;;21196:18:1;;;;;;:10;:18;;;;;;21189:25;;900:31;;;;:::o;815:77:3:-;879:6;;;;;-1:-1:-1;;;;;879:6:3;;815:77::o;7487:1796:1:-;7593:7;7616:25;7644:17;7654:6;7644:9;:17::i;:::-;7685:4;;7616:45;;-1:-1:-1;;;;;;7675:14:1;;;7685:4;;7675:14;7671:201;;;7725:136;7764:83;7801:28;:26;:28::i;:::-;7764:11;;;:83;:15;:83;:::i;:::-;7725:17;;:136;:21;:136;:::i;:::-;7705:156;;7671:201;7895:9;;-1:-1:-1;;;;;7885:19:1;;;7895:9;;7885:19;7881:216;;;7940:146;7979:93;8021:33;:31;:33::i;:::-;7979:16;;;:93;:20;:93;:::i;7940:146::-;7920:166;;7881:216;8120:7;;-1:-1:-1;;;;;8110:17:1;;;8120:7;;8110:17;8106:222;;;8163:154;8206:97;8250:31;:29;:31::i;:::-;8206:14;;;:97;:18;:97;:::i;8163:154::-;8143:174;;8106:222;-1:-1:-1;;;;;8341:19:1;;;;;;:11;:19;;;;;;;;8337:402;;;8396:151;8435:98;8481:34;8508:6;8481:26;:34::i;:::-;-1:-1:-1;;;;;8435:20:1;;;;;;:12;:20;;;;;;;:98;:24;:98;:::i;8396:151::-;8376:171;;8581:147;8620:94;8664:32;8689:6;8664:24;:32::i;:::-;-1:-1:-1;;;;;8620:18:1;;;;;;:10;:18;;;;;;;:94;:22;:94;:::i;8581:147::-;8561:167;;8337:402;-1:-1:-1;;;;;8752:22:1;;;;;;:14;:22;;;;;;;;8748:417;;;8810:157;8849:104;8898:37;8928:6;8898:29;:37::i;:::-;-1:-1:-1;;;;;8849:23:1;;;;;;:15;:23;;;;;;;:104;:27;:104;:::i;8810:157::-;8790:177;;9001:153;9040:100;9087:35;9115:6;9087:27;:35::i;:::-;-1:-1:-1;;;;;9040:21:1;;;;;;:13;:21;;;;;;;:100;:25;:100;:::i;9001:153::-;8981:173;;8748:417;-1:-1:-1;;;;;9216:23:1;;;;;;:15;:23;;;;;;9194:46;;:17;;:46;:21;:46;:::i;:::-;9174:66;7487:1796;-1:-1:-1;;;7487:1796:1:o;1166:90:3:-;1243:6;;;;;-1:-1:-1;;;;;1243:6:3;1229:10;:20;;1166:90::o;2862:190:1:-;1019:9:3;:7;:9::i;:::-;1011:54;;;;;-1:-1:-1;;;;;1011:54:3;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1011:54:3;;;;;;;;;;;;;;;3020:4:1;;2996:49;;-1:-1:-1;;;;;3020:4:1;3027:9;3038:6;2996:15;:49::i;:::-;2862:190;;:::o;838:85:5:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;7101:380:1;1670:13;;7248:4;;-1:-1:-1;;;;;1670:13:1;1656:10;:27;1635:104;;;;;-1:-1:-1;;;;;1635:104:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1635:104:1;;;;;;;;;;;;;;;7308:1;7289:16;;:20;7268:99;;;;;-1:-1:-1;;;;;7268:99:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7396:16;;:28;;7417:6;7396:28;:20;:28;:::i;:::-;7377:16;:47;7441:33;7456:9;7467:6;7441:14;:33::i;4392:213:4:-;4502:10;4477:4;4523:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4523:32:4;;;;;;;;;;4477:4;;4493:84;;4514:7;;4523:53;;4560:15;4523:53;:36;:53;:::i;5234:195:1:-;5341:4;5361:40;5371:10;5383:9;5394:6;5361:9;:40::i;1077:28::-;;;-1:-1:-1;;;;;1077:28:1;;:::o;1538:50::-;;;;;;;;;;;;;:::o;4962:146::-;1670:13;;-1:-1:-1;;;;;1670:13:1;1656:10;:27;1635:104;;;;;-1:-1:-1;;;;;1635:104:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1635:104:1;;;;;;;;;;;;;;;5039:13;;5054:16;;5033:38;;-1:-1:-1;;;;;5039:13:1;;5033:5;:38::i;:::-;5100:1;5081:16;:20;4962:146::o;1486:46::-;;;;;;;;;;;;;;;:::o;12705:1769::-;12791:7;12836:10;12818:15;:28;12814:1654;;;-1:-1:-1;12883:1:1;12876:8;;12814:1654;12923:10;12905:15;:28;12901:1567;;;12970:31;12997:3;12970:22;12989:2;12970:14;;:18;;:22;;;;:::i;12901:1567::-;13040:10;13022:15;:28;13018:1450;;;13087:31;13114:3;13087:22;13106:2;13087:14;;:18;;:22;;;;:::i;13018:1450::-;13157:10;13139:15;:28;13135:1333;;;13204:31;13231:3;13204:22;13223:2;13204:14;;:18;;:22;;;;:::i;13135:1333::-;13274:10;13256:15;:28;13252:1216;;;13321:31;13348:3;13321:22;13340:2;13321:14;;:18;;:22;;;;:::i;13252:1216::-;13391:10;13373:15;:28;13369:1099;;;13438:31;13465:3;13438:22;13457:2;13438:14;;:18;;:22;;;;:::i;13369:1099::-;13508:10;13490:15;:28;13486:982;;;13555:31;13582:3;13555:22;13574:2;13555:14;;:18;;:22;;;;:::i;13486:982::-;13625:10;13607:15;:28;13603:865;;;13672:31;13699:3;13672:22;13691:2;13672:14;;:18;;:22;;;;:::i;13603:865::-;13742:10;13724:15;:28;13720:748;;;13789:31;13816:3;13789:22;13808:2;13789:14;;:18;;:22;;;;:::i;13720:748::-;13859:10;13841:15;:28;13837:631;;;13906:31;13933:3;13906:22;13925:2;13906:14;;:18;;:22;;;;:::i;13837:631::-;13976:10;13958:15;:28;13954:514;;;14023:31;14050:3;14023:22;14042:2;14023:14;;:18;;:22;;;;:::i;13954:514::-;14093:10;14075:15;:28;14071:397;;;14140:31;14167:3;14140:22;14159:2;14140:14;;:18;;:22;;;;:::i;14071:397::-;14210:10;14192:15;:28;14188:280;;;14257:31;14284:3;14257:22;14276:2;14257:14;;:18;;:22;;;;:::i;14188:280::-;14327:10;14309:15;:28;14305:163;;;14374:31;14401:3;14374:22;14393:2;14374:14;;:18;;:22;;;;:::i;14305:163::-;-1:-1:-1;14443:14:1;;14436:21;;1166:22;;;-1:-1:-1;;;;;1166:22:1;;:::o;1039:31::-;;;;:::o;868:26::-;;;;:::o;5114:114::-;1019:9:3;:7;:9::i;:::-;1011:54;;;;;-1:-1:-1;;;;;1011:54:3;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1011:54:3;;;;;;;;;;;;;;;5191:4:1;:30;;-1:-1:-1;;;;;;5191:30:1;-1:-1:-1;;;;;5191:30:1;;;;;;;;;;5114:114::o;2183:132:4:-;-1:-1:-1;;;;;2281:18:4;;;2255:7;2281:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2183:132::o;4816:140:1:-;1670:13;;-1:-1:-1;;;;;1670:13:1;1656:10;:27;1635:104;;;;;-1:-1:-1;;;;;1635:104:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1635:104:1;;;;;;;;;;;;;;;4891:13;;4906:14;;4885:36;;-1:-1:-1;;;;;4891:13:1;;4885:5;:36::i;:::-;4948:1;4931:14;:18;4816:140::o;1383:48::-;;;;;;;;;;;;;:::o;1886:107:3:-;1019:9;:7;:9::i;:::-;1011:54;;;;;-1:-1:-1;;;;;1011:54:3;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1011:54:3;;;;;;;;;;;;;;;1958:28;1977:8;1958:18;:28::i;:::-;1886:107;:::o;6432:663:1:-;1670:13;;6577:4;;-1:-1:-1;;;;;1670:13:1;1656:10;:27;1635:104;;;;;-1:-1:-1;;;;;1635:104:1;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1635:104:1;;;;;;;;;;;;;;;6635:1;6618:14;;:18;6597:97;;;;;-1:-1:-1;;;;;6597:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6733:26:1;;;;;;:15;:26;;;;;;:38;;6764:6;6733:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;6704:26:1;;;;;;:15;:26;;;;;:67;;;;6804:24;6823:4;6804:14;:6;6815:2;6804:14;:10;:14;:::i;:24::-;-1:-1:-1;;;;;6865:24:1;;;;;;:13;:24;;;;;;6781:47;;-1:-1:-1;6865:42:1;;6781:47;6865:42;:28;:42;:::i;:::-;-1:-1:-1;;;;;6838:24:1;;;;;;:13;:24;;;;;;;;:69;;;;6917:14;:25;;;:32;;-1:-1:-1;;6917:32:1;6945:4;6917:32;;;6976:14;;:44;;7007:12;;6976:26;;6995:6;6976:26;:18;:26;:::i;:44::-;6959:14;:61;7037:51;7052:9;7063:24;:6;7074:12;7063:24;:10;:24;:::i;1693:458:2:-;1751:7;1991:6;1987:45;;-1:-1:-1;2020:1:2;2013:8;;1987:45;2054:5;;;2058:1;2054;:5;:1;2077:5;;;;;:10;2069:56;;;;-1:-1:-1;;;;;2069:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:326;2664:7;2761:1;2757;:5;2749:44;;;;;-1:-1:-1;;;;;2749:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;;2606:326;-1:-1:-1;;;;2606:326:2:o;7117:329:4:-;-1:-1:-1;;;;;7209:19:4;;7201:68;;;;-1:-1:-1;;;;;7201:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7287:21:4;;7279:68;;;;-1:-1:-1;;;;;7279:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7358:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7408:31;;;;;;;;;;;;;;;;;7117:329;;;:::o;23426:1120:1:-;780:10;23561:15;:37;23557:931;;;23639:4;;-1:-1:-1;;;;;23618:26:1;;;23639:4;;23618:26;23614:864;;;-1:-1:-1;;;;;23693:23:1;;;;;;:15;:23;;;;;;:33;-1:-1:-1;23693:33:1;23664:127;;;;;-1:-1:-1;;;;;23664:127:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;851:10;23838:15;:32;23809:148;;;;-1:-1:-1;;;;;23809:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24004:4;;:119;;;-1:-1:-1;;;;;24004:119:1;;-1:-1:-1;;;;;24004:119:1;;;;;;;;;;;;;;;:4;;;;;:15;;:119;;;;;;;;;;;;;;:4;;:119;;;5:2:-1;;;;30:1;27;20:12;5:2;24004:119:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24004:119:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24004:119:1;23975:202;;;;;-1:-1:-1;;;;;23975:202:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;24221:23:1;;;;;;:15;:23;;;;;;:73;;24270:6;24221:73;:27;:73;:::i;:::-;-1:-1:-1;;;;;24195:23:1;;;;;;:15;:23;;;;;:99;23614:864;;;24372:29;24394:6;24372:21;:29::i;:::-;24362:6;:39;;24333:130;;;;;-1:-1:-1;;;;;24333:130:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;24497:42;24513:6;24521:9;24532:6;24497:15;:42::i;:::-;23426:1120;;;:::o;1274:179:2:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;;;1351:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:2;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;6392:300:4;-1:-1:-1;;;;;6466:21:4;;6458:67;;;;-1:-1:-1;;;;;6458:67:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6551:12;;:23;;6568:5;6551:23;:16;:23;:::i;:::-;6536:12;:38;-1:-1:-1;;;;;6605:18:4;;:9;:18;;;;;;;;;;;:29;;6628:5;6605:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6584:18:4;;:9;:18;;;;;;;;;;;:50;;;;6649:36;;;;;;;6584:9;;6649:36;;;;;;;;;;;6392:300;;:::o;5079:422::-;-1:-1:-1;;;;;5176:20:4;;5168:70;;;;-1:-1:-1;;;;;5168:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5256:23:4;;5248:71;;;;-1:-1:-1;;;;;5248:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5350:17:4;;:9;:17;;;;;;;;;;;:29;;5372:6;5350:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5330:17:4;;;:9;:17;;;;;;;;;;;:49;;;;5412:20;;;;;;;:32;;5437:6;5412:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5389:20:4;;;:9;:20;;;;;;;;;;;;:55;;;;5459:35;;;;;;;5389:20;;5459:35;;;;;;;;;;;;;5079:422;;;:::o;2094:225:3:-;-1:-1:-1;;;;;2167:22:3;;2159:73;;;;-1:-1:-1;;;;;2159:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2268:6;;2247:38;;-1:-1:-1;;;;;2247:38:3;;;;2268:6;;;;;2247:38;;;;;2295:6;:17;;-1:-1:-1;;;;;2295:17:3;;;;;-1:-1:-1;;;;;;2295:17:3;;;;;;;;;2094:225::o",
  "offset": [
    597,
    24548
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x342 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85CDE77F GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xAB3E21CA GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xD973D490 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE0236204 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE0236204 EQ PUSH2 0x874 JUMPI DUP1 PUSH4 0xEBA5D84F EQ PUSH2 0x87C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8A2 JUMPI DUP1 PUSH4 0xFF6E1492 EQ PUSH2 0x8C8 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xD973D490 EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xDACF64E2 EQ PUSH2 0x820 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x846 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xBC109F9C GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBC109F9C EQ PUSH2 0x7DA JUMPI DUP1 PUSH4 0xBD7E7007 EQ PUSH2 0x800 JUMPI DUP1 PUSH4 0xCD3293DE EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0xD4FB3BE9 EQ PUSH2 0x810 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0xAB3E21CA EQ PUSH2 0x7A4 JUMPI DUP1 PUSH4 0xB22683FA EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0xB8C563F3 EQ PUSH2 0x7D2 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x8E8A8D61 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x718 JUMPI DUP1 PUSH4 0x9CF5B6DF EQ PUSH2 0x720 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x74C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x778 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x8E8A8D61 EQ PUSH2 0x6BE JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0x93C2C682 EQ PUSH2 0x6EC JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x85CDE77F EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0x85F2AEF2 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x89807B6E EQ PUSH2 0x680 JUMPI DUP1 PUSH4 0x8B74730C EQ PUSH2 0x688 JUMPI DUP1 PUSH4 0x8C800D17 EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6B6 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x292 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x230 JUMPI DUP1 PUSH4 0x7766FE6A GT PUSH2 0x20A JUMPI DUP1 PUSH4 0x7766FE6A EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x7891DF9A EQ PUSH2 0x61E JUMPI DUP1 PUSH4 0x82CF5064 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x85CBC926 EQ PUSH2 0x64C JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x72918A78 EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0x76CDB03B EQ PUSH2 0x5F0 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x57FBC940 GT PUSH2 0x26C JUMPI DUP1 PUSH4 0x57FBC940 EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0x6C103067 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x6F4A48E2 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x59C JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0x41319831 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x4F98FB10 EQ PUSH2 0x540 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x2FF JUMPI DUP1 PUSH4 0x2D3E474A GT PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x2D3E474A EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x2F8B4B7D EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x3918E59F EQ PUSH2 0x504 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x1FEBCFEE EQ PUSH2 0x45C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x482 JUMPI PUSH2 0x342 JUMP JUMPDEST DUP1 PUSH4 0x2530401 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x27C4ED2 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0x655949C EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xAA1D3F3 EQ PUSH2 0x42E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34F PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH2 0x8FA JUMP JUMPDEST PUSH2 0x34F PUSH2 0x900 JUMP JUMPDEST PUSH2 0x379 PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3E0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x34F PUSH2 0xBEB JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x498 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0xC4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EE PUSH2 0xE0A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x34F PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x130E JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x1328 JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x132E JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13E3 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1656 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FA0 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x21D0 JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x41A PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2405 JUMP JUMPDEST PUSH2 0x379 PUSH2 0x246A JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x24CB JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x762 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x25D4 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x25E1 JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25F0 JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2672 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x2687 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0x28A1 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x28B0 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x28B6 JUMP JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28BC JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x85C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x2928 JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x2953 JUMP JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29C3 JUMP JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29D5 JUMP JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2A2B JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5ED44500 TIMESTAMP LT ISZERO PUSH2 0x916 JUMPI POP PUSH1 0x0 PUSH2 0xB29 JUMP JUMPDEST PUSH4 0x603C2E80 TIMESTAMP LT ISZERO PUSH2 0x950 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0xA PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2C1B AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB29 JUMP JUMPDEST PUSH4 0x621D6200 TIMESTAMP LT ISZERO PUSH2 0x977 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x14 PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x6387EE80 TIMESTAMP LT ISZERO PUSH2 0x99E JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x1E PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x63FE9580 TIMESTAMP LT ISZERO PUSH2 0x9C5 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x23 PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x64C84B00 TIMESTAMP LT ISZERO PUSH2 0x9EC JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x28 PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x65BADF00 TIMESTAMP LT ISZERO PUSH2 0xA13 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x2D PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x6609F900 TIMESTAMP LT ISZERO PUSH2 0xA3A JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x32 PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x66AAD000 TIMESTAMP LT ISZERO PUSH2 0xA61 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x37 PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x66FB3B80 TIMESTAMP LT ISZERO PUSH2 0xA88 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x3C PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x674BA700 TIMESTAMP LT ISZERO PUSH2 0xAAF JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x41 PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x67C24E00 TIMESTAMP LT ISZERO PUSH2 0xAD6 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x46 PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x68632500 TIMESTAMP LT ISZERO PUSH2 0xAFD JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x50 PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x692CDA80 TIMESTAMP LT ISZERO PUSH2 0xB24 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x5A PUSH1 0x6 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x6 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCF CALLER DUP5 DUP5 PUSH2 0x2C88 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC10 DUP5 DUP5 DUP5 PUSH2 0x2D7A JUMP JUMPDEST PUSH2 0xC34 DUP5 CALLER PUSH2 0xC2F DUP6 PUSH2 0xC23 DUP10 CALLER PUSH2 0x2928 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH2 0x2C88 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 TIMESTAMP LT ISZERO PUSH2 0xC90 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3395 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCF7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206D75737420626520756E6C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0x692CDA80 TIMESTAMP LT PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x344A PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD9C SWAP1 PUSH2 0xD80 SWAP1 PUSH2 0xD64 SWAP1 PUSH2 0x1656 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x11 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xDEA SWAP1 PUSH2 0xD80 SWAP1 PUSH2 0xDCE SWAP1 PUSH2 0x1FA0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x13 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE63 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x9 SLOAD PUSH2 0xE7C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xBCF SWAP2 DUP6 SWAP1 PUSH2 0xC2F SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5DE30280 TIMESTAMP LT ISZERO PUSH2 0xEDA JUMPI POP PUSH1 0x0 PUSH2 0x1309 JUMP JUMPDEST PUSH4 0x5E34BF80 TIMESTAMP LT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0xF PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1309 JUMP JUMPDEST PUSH4 0x5EAB6680 TIMESTAMP LT ISZERO PUSH2 0xF5B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x14 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x5FC58780 TIMESTAMP LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x60650D00 TIMESTAMP LT ISZERO PUSH2 0xFD5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x1E PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x608C9A00 TIMESTAMP LT ISZERO PUSH2 0x1012 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x23 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6105E400 TIMESTAMP LT ISZERO PUSH2 0x104F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x28 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x61A6BB00 TIMESTAMP LT ISZERO PUSH2 0x108C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x2D PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x621D6200 TIMESTAMP LT ISZERO PUSH2 0x10C9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x32 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x62BE3900 TIMESTAMP LT ISZERO PUSH2 0x1106 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x37 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x63378300 TIMESTAMP LT ISZERO PUSH2 0x1143 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x3C PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6387EE80 TIMESTAMP LT ISZERO PUSH2 0x1180 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x41 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x64277400 TIMESTAMP LT ISZERO PUSH2 0x11BD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x46 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x649F6C80 TIMESTAMP LT ISZERO PUSH2 0x11FA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x4B PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6518B680 TIMESTAMP LT ISZERO PUSH2 0x1237 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x50 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x65692200 TIMESTAMP LT ISZERO PUSH2 0x1274 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x55 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x65E11A80 TIMESTAMP LT ISZERO PUSH2 0x12B1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x5A PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6681F180 TIMESTAMP LT ISZERO PUSH2 0x12EE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x5F PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x692CDA80 DUP2 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1351 PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x1393 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x342A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x140F SWAP1 PUSH1 0x12 PUSH4 0xFFFFFFFF PUSH2 0x2C1B AND JUMP JUMPDEST SWAP1 POP PUSH4 0x5DE30280 TIMESTAMP LT ISZERO PUSH2 0x1427 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1309 JUMP JUMPDEST PUSH4 0x5E34BF80 TIMESTAMP LT ISZERO PUSH2 0x143A JUMPI SWAP1 POP PUSH2 0x1309 JUMP JUMPDEST PUSH4 0x5EAB6680 TIMESTAMP LT ISZERO PUSH2 0x145F JUMPI PUSH2 0x1457 DUP2 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1309 JUMP JUMPDEST PUSH4 0x5FC58780 TIMESTAMP LT ISZERO PUSH2 0x147C JUMPI PUSH2 0x1457 DUP2 PUSH1 0x3 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x60650D00 TIMESTAMP LT ISZERO PUSH2 0x1499 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x4 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x608C9A00 TIMESTAMP LT ISZERO PUSH2 0x14B6 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6105E400 TIMESTAMP LT ISZERO PUSH2 0x14D3 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x61A6BB00 TIMESTAMP LT ISZERO PUSH2 0x14F0 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x7 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x621D6200 TIMESTAMP LT ISZERO PUSH2 0x150D JUMPI PUSH2 0x1457 DUP2 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x62BE3900 TIMESTAMP LT ISZERO PUSH2 0x152A JUMPI PUSH2 0x1457 DUP2 PUSH1 0x9 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x63378300 TIMESTAMP LT ISZERO PUSH2 0x1547 JUMPI PUSH2 0x1457 DUP2 PUSH1 0xA PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6387EE80 TIMESTAMP LT ISZERO PUSH2 0x1564 JUMPI PUSH2 0x1457 DUP2 PUSH1 0xB PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x64277400 TIMESTAMP LT ISZERO PUSH2 0x1581 JUMPI PUSH2 0x1457 DUP2 PUSH1 0xC PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x649F6C80 TIMESTAMP LT ISZERO PUSH2 0x159E JUMPI PUSH2 0x1457 DUP2 PUSH1 0xD PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6518B680 TIMESTAMP LT ISZERO PUSH2 0x15BB JUMPI PUSH2 0x1457 DUP2 PUSH1 0xE PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x65692200 TIMESTAMP LT ISZERO PUSH2 0x15D8 JUMPI PUSH2 0x1457 DUP2 PUSH1 0xF PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x65E11A80 TIMESTAMP LT ISZERO PUSH2 0x15F5 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x10 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6681F180 TIMESTAMP LT ISZERO PUSH2 0x1612 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5DE30280 TIMESTAMP LT ISZERO PUSH2 0x166C JUMPI POP PUSH1 0x0 PUSH2 0x1309 JUMP JUMPDEST PUSH4 0x5E5AFB00 TIMESTAMP LT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x14 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x5EFBD200 TIMESTAMP LT ISZERO PUSH2 0x16E6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x19 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x5FC58780 TIMESTAMP LT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x1E PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x60650D00 TIMESTAMP LT ISZERO PUSH2 0x1760 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x23 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x60DD0580 TIMESTAMP LT ISZERO PUSH2 0x179D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x28 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x61564F80 TIMESTAMP LT ISZERO PUSH2 0x17DA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x2D PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x61A6BB00 TIMESTAMP LT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x32 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x621D6200 TIMESTAMP LT ISZERO PUSH2 0x1854 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x37 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6296AC00 TIMESTAMP LT ISZERO PUSH2 0x1891 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x3C PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x630FF600 TIMESTAMP LT ISZERO PUSH2 0x18CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x41 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6387EE80 TIMESTAMP LT ISZERO PUSH2 0x190B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x46 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x63FE9580 TIMESTAMP LT ISZERO PUSH2 0x1948 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x4B PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x644F0100 TIMESTAMP LT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x50 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x649F6C80 TIMESTAMP LT ISZERO PUSH2 0x19C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x55 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6518B680 TIMESTAMP LT ISZERO PUSH2 0x19FF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x5A PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x65692200 TIMESTAMP LT ISZERO PUSH2 0x1A3C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF17 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x93D SWAP1 PUSH1 0x5F PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5EAB6680 TIMESTAMP LT ISZERO PUSH2 0x1A71 JUMPI POP PUSH1 0x0 PUSH2 0xB29 JUMP JUMPDEST PUSH4 0x603C2E80 TIMESTAMP LT ISZERO PUSH2 0x1A98 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0xA PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x62464080 TIMESTAMP LT ISZERO PUSH2 0x1ABF JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x14 PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x62BE3900 TIMESTAMP LT ISZERO PUSH2 0x1AE6 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x1E PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x6387EE80 TIMESTAMP LT ISZERO PUSH2 0x1B0D JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x23 PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x644F0100 TIMESTAMP LT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x28 PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x64C84B00 TIMESTAMP LT ISZERO PUSH2 0x1B5B JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x32 PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x6609F900 TIMESTAMP LT ISZERO PUSH2 0x1B82 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x37 PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x66AAD000 TIMESTAMP LT ISZERO PUSH2 0x1BA9 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x3C PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x674BA700 TIMESTAMP LT ISZERO PUSH2 0x1BD0 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x41 PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x67EB2C80 TIMESTAMP LT ISZERO PUSH2 0x1BF7 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x46 PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x688C0380 TIMESTAMP LT ISZERO PUSH2 0x1C1E JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x50 PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x692CDA80 TIMESTAMP LT ISZERO PUSH2 0x1C45 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x5A PUSH1 0x7 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0xB29 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CA1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD GT PUSH2 0x1CFB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265206F766572206F722073616C6520697320656E646564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1D24 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1D58 PUSH2 0x2710 PUSH2 0x93D DUP6 PUSH2 0x5D8 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1D84 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x15 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0x1DCC SWAP1 DUP3 SWAP1 PUSH2 0xC23 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH2 0x1DE8 DUP5 PUSH2 0x1DE3 DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST PUSH2 0x25D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 TIMESTAMP LT ISZERO PUSH2 0x1E42 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3395 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1EA9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206D75737420626520756E6C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0x692CDA80 TIMESTAMP LT PUSH2 0x1EEE JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x344A PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1F32 SWAP1 PUSH2 0xD80 SWAP1 PUSH2 0x1F16 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x12 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1F80 SWAP1 PUSH2 0xD80 SWAP1 PUSH2 0x1F64 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x14 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x1FCC SWAP1 PUSH1 0x11 PUSH4 0xFFFFFFFF PUSH2 0x2C1B AND JUMP JUMPDEST SWAP1 POP PUSH4 0x5DE30280 TIMESTAMP LT ISZERO PUSH2 0x1FE4 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1309 JUMP JUMPDEST PUSH4 0x5E5AFB00 TIMESTAMP LT ISZERO PUSH2 0x1FF7 JUMPI SWAP1 POP PUSH2 0x1309 JUMP JUMPDEST PUSH4 0x5EFBD200 TIMESTAMP LT ISZERO PUSH2 0x2014 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x5FC58780 TIMESTAMP LT ISZERO PUSH2 0x2031 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x3 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x60650D00 TIMESTAMP LT ISZERO PUSH2 0x204E JUMPI PUSH2 0x1457 DUP2 PUSH1 0x4 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x60DD0580 TIMESTAMP LT ISZERO PUSH2 0x206B JUMPI PUSH2 0x1457 DUP2 PUSH1 0x5 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x61564F80 TIMESTAMP LT ISZERO PUSH2 0x2088 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x6 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x61A6BB00 TIMESTAMP LT ISZERO PUSH2 0x20A5 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x7 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x621D6200 TIMESTAMP LT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x1457 DUP2 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6296AC00 TIMESTAMP LT ISZERO PUSH2 0x20DF JUMPI PUSH2 0x1457 DUP2 PUSH1 0x9 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x630FF600 TIMESTAMP LT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x1457 DUP2 PUSH1 0xA PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6387EE80 TIMESTAMP LT ISZERO PUSH2 0x2119 JUMPI PUSH2 0x1457 DUP2 PUSH1 0xB PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x63FE9580 TIMESTAMP LT ISZERO PUSH2 0x2136 JUMPI PUSH2 0x1457 DUP2 PUSH1 0xC PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x644F0100 TIMESTAMP LT ISZERO PUSH2 0x2153 JUMPI PUSH2 0x1457 DUP2 PUSH1 0xD PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x649F6C80 TIMESTAMP LT ISZERO PUSH2 0x2170 JUMPI PUSH2 0x1457 DUP2 PUSH1 0xE PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x6518B680 TIMESTAMP LT ISZERO PUSH2 0x218D JUMPI PUSH2 0x1457 DUP2 PUSH1 0xF PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH4 0x65692200 TIMESTAMP LT ISZERO PUSH2 0x21AA JUMPI PUSH2 0x1457 DUP2 PUSH1 0x10 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x21F0 DUP4 PUSH2 0x132E JUMP JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x2236 JUMPI PUSH2 0x2233 PUSH2 0x2226 PUSH2 0x2217 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST DUP3 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x226C JUMPI PUSH2 0x2269 PUSH2 0x2226 PUSH2 0x225A PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x22A2 JUMPI PUSH2 0x229F PUSH2 0x2226 PUSH2 0x2290 PUSH2 0x2687 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2330 JUMPI PUSH2 0x22F7 PUSH2 0x2226 PUSH2 0x22D2 DUP6 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x232D PUSH2 0x2226 PUSH2 0x2308 DUP6 PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x23BE JUMPI PUSH2 0x2385 PUSH2 0x2226 PUSH2 0x2360 DUP6 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST SWAP1 POP PUSH2 0x23BB PUSH2 0x2226 PUSH2 0x2396 DUP6 PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23E8 SWAP1 DUP3 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x240D PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x244F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x342A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x2466 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH2 0x317A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBB8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB8D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x251E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD GT PUSH2 0x2578 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265206F766572206F722073616C6520697320656E646564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x258B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0x23E8 DUP4 DUP4 PUSH2 0x25D4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xBCF SWAP2 DUP6 SWAP1 PUSH2 0xC2F SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCF CALLER DUP5 DUP5 PUSH2 0x2D7A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2652 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH2 0x266B SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5F4D8F00 TIMESTAMP LT ISZERO PUSH2 0x269D JUMPI POP PUSH1 0x0 PUSH2 0xB29 JUMP JUMPDEST PUSH4 0x608C9A00 TIMESTAMP LT ISZERO PUSH2 0x26C4 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0xA PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x612EC280 TIMESTAMP LT ISZERO PUSH2 0x26EB JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0xF PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x6296AC00 TIMESTAMP LT ISZERO PUSH2 0x2712 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x14 PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x63378300 TIMESTAMP LT ISZERO PUSH2 0x2739 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x19 PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x644F0100 TIMESTAMP LT ISZERO PUSH2 0x2760 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x1E PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x64C84B00 TIMESTAMP LT ISZERO PUSH2 0x2787 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x28 PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x66318600 TIMESTAMP LT ISZERO PUSH2 0x27AE JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x2D PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x6681F180 TIMESTAMP LT ISZERO PUSH2 0x27D5 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x37 PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x66FB3B80 TIMESTAMP LT ISZERO PUSH2 0x27FC JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x3C PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x674BA700 TIMESTAMP LT ISZERO PUSH2 0x2823 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x41 PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x6812B980 TIMESTAMP LT ISZERO PUSH2 0x284A JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x46 PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x68B4E200 TIMESTAMP LT ISZERO PUSH2 0x2871 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x50 PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0x692CDA80 TIMESTAMP LT ISZERO PUSH2 0x2898 JUMPI PUSH2 0x949 PUSH1 0x64 PUSH2 0x93D PUSH1 0x5A PUSH1 0x8 SLOAD PUSH2 0x2BBF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0xB29 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28C4 PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x2906 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x342A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH2 0x29BC SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29DD PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x2A1F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x342A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2A28 DUP2 PUSH2 0x32C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A7E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x34BD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD GT PUSH2 0x2AD8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320617265206F766572206F722073616C6520697320656E646564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2B01 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x2B34 PUSH2 0x3E8 PUSH2 0x93D DUP6 PUSH1 0x63 PUSH4 0xFFFFFFFF PUSH2 0x2BBF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2B60 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x16 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH2 0x2BA8 SWAP1 DUP3 SWAP1 PUSH2 0xC23 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH1 0xA SSTORE PUSH2 0x1DE8 DUP5 PUSH2 0x1DE3 DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2BCE JUMPI POP PUSH1 0x0 PUSH2 0xBD3 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2BDB JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x23E8 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3409 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2C74 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x2C7F JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2CD0 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x34DD PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2D18 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x33E7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x692CDA80 TIMESTAMP LT ISZERO PUSH2 0x2FD1 JUMPI PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x2F71 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x2E0C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E73206D75737420626520756E6C6F636B6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0x692CDA80 TIMESTAMP LT PUSH2 0x2E51 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x344A PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE3 SHL PUSH4 0x9444B13 MUL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x4A225898 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2EAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2ED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x2F2A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616E6B2070726F626C656D0000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2F53 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2FD1 JUMP JUMPDEST PUSH2 0x2F7A DUP4 PUSH2 0x21E4 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2FD1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20617661696C61626C652062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2FDC DUP4 DUP4 DUP4 PUSH2 0x317A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x303B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x23E8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x30E6 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3477 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x30F9 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3125 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x31C2 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3498 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x320A JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3372 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3233 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x2FE1 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x3268 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x3041 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x330A JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xE5 SHL PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x33C1 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 SLOAD PUSH9 0x652074696D65206D75 PUSH20 0x74206265206C6F6E676572207468616E20746865 KECCAK256 PUSH22 0x6E6C6F636B2074696D654F776E61626C653A206E6577 KECCAK256 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x536166654D6174683A206D756C7469706C696361 PUSH21 0x696F6E206F766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65725468 PUSH6 0x2074696D6520 PUSH14 0x757374206265206C657373207468 PUSH2 0x6E20 PUSH21 0x68652073746F702073656C6C2074696D6545524332 ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737353656E646572206D7573742062652061 KECCAK256 PUSH21 0x6F6B656E7320686F6C646572000045524332303A20 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH13 0xF9D88EFC1353E9467216F803AC BLOCKHASH 0xa9 PUSH3 0x8CECB 0x29 0xdc 0x5c PUSH24 0x17A77A7E600CDAE800290000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x80"
    },
    "2": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4": {
      "offset": [
        597,
        24548
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5": {
      "offset": [
        597,
        24548
      ],
      "op": "CALLVALUE",
      "path": "contracts/IsinaToken.sol"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "op": "REVERT"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        597,
        24548
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "18": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "20": {
      "offset": [
        597,
        24548
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "21": {
      "offset": [
        597,
        24548
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "22": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "25": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "26": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "28": {
      "offset": [
        597,
        24548
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "29": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE0"
    },
    "31": {
      "offset": [
        597,
        24548
      ],
      "op": "SHR",
      "path": "contracts/IsinaToken.sol"
    },
    "32": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "33": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x85CDE77F"
    },
    "38": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "39": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1B8"
    },
    "42": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "43": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "44": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xAB3E21CA"
    },
    "49": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "50": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x104"
    },
    "53": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "54": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "55": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD973D490"
    },
    "60": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "61": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA2"
    },
    "64": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "65": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "66": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE0236204"
    },
    "71": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "72": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7C"
    },
    "75": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "76": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "77": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE0236204"
    },
    "82": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "83": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x874"
    },
    "86": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "87": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "88": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xEBA5D84F"
    },
    "93": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "94": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x87C"
    },
    "97": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "98": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "99": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF2FDE38B"
    },
    "104": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "105": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8A2"
    },
    "108": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "109": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "110": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFF6E1492"
    },
    "115": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "116": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8C8"
    },
    "119": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "120": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "123": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "124": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "125": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "126": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD973D490"
    },
    "131": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "132": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x818"
    },
    "135": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "136": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "137": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xDACF64E2"
    },
    "142": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "143": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x820"
    },
    "146": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "147": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "148": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xDD62ED3E"
    },
    "153": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "154": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x846"
    },
    "157": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "158": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "161": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "162": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "163": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "164": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xBC109F9C"
    },
    "169": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "170": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xDE"
    },
    "173": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "174": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "175": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xBC109F9C"
    },
    "180": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "181": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7DA"
    },
    "184": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "185": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "186": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xBD7E7007"
    },
    "191": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "192": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x800"
    },
    "195": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "196": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "197": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xCD3293DE"
    },
    "202": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "203": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x808"
    },
    "206": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "207": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "208": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD4FB3BE9"
    },
    "213": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "214": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x810"
    },
    "217": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "218": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "221": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "222": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "223": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "224": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xAB3E21CA"
    },
    "229": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "230": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7A4"
    },
    "233": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "234": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "235": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB22683FA"
    },
    "240": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "241": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7AC"
    },
    "244": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "245": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "246": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB8C563F3"
    },
    "251": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "252": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7D2"
    },
    "255": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "256": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "259": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "260": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "261": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "262": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8E8A8D61"
    },
    "267": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "268": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x171"
    },
    "271": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "272": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "273": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x95D89B41"
    },
    "278": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "279": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14B"
    },
    "282": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "283": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "284": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x95D89B41"
    },
    "289": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "290": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x718"
    },
    "293": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "294": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "295": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9CF5B6DF"
    },
    "300": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "301": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x720"
    },
    "304": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "305": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "306": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA457C2D7"
    },
    "311": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "312": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x74C"
    },
    "315": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "316": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "317": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA9059CBB"
    },
    "322": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "323": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x778"
    },
    "326": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "327": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "330": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "331": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "332": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "333": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8E8A8D61"
    },
    "338": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "339": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6BE"
    },
    "342": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "343": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "344": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8F32D59B"
    },
    "349": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "350": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6E4"
    },
    "353": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "354": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "355": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93C2C682"
    },
    "360": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "361": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6EC"
    },
    "364": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "365": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "368": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "369": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "370": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "371": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x85CDE77F"
    },
    "376": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "377": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x566"
    },
    "380": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "381": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "382": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x85F2AEF2"
    },
    "387": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "388": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x678"
    },
    "391": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "392": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "393": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x89807B6E"
    },
    "398": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "399": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x680"
    },
    "402": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "403": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "404": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8B74730C"
    },
    "409": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "410": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x688"
    },
    "413": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "414": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "415": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8C800D17"
    },
    "420": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "421": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6AE"
    },
    "424": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "425": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "426": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8DA5CB5B"
    },
    "431": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "432": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6B6"
    },
    "435": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "436": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "439": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "440": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "441": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "442": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x39509351"
    },
    "447": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "448": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x292"
    },
    "451": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "452": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "453": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x715018A6"
    },
    "458": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "459": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x230"
    },
    "462": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "463": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "464": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7766FE6A"
    },
    "469": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "470": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20A"
    },
    "473": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "474": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "475": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7766FE6A"
    },
    "480": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "481": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5F8"
    },
    "484": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "485": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "486": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7891DF9A"
    },
    "491": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "492": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x61E"
    },
    "495": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "496": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "497": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x82CF5064"
    },
    "502": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "503": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x644"
    },
    "506": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "507": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "508": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x85CBC926"
    },
    "513": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "514": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64C"
    },
    "517": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "518": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "521": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "522": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "523": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "524": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x715018A6"
    },
    "529": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "530": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5C2"
    },
    "533": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "534": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "535": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x72918A78"
    },
    "540": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "541": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5CA"
    },
    "544": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "545": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "546": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x76CDB03B"
    },
    "551": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "552": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5F0"
    },
    "555": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "556": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "559": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "560": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "561": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "562": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x57FBC940"
    },
    "567": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "568": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x26C"
    },
    "571": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "572": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "573": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x57FBC940"
    },
    "578": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "579": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x566"
    },
    "582": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "583": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "584": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6C103067"
    },
    "589": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "590": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x56E"
    },
    "593": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "594": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "595": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6F4A48E2"
    },
    "600": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "601": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x594"
    },
    "604": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "605": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "606": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x70A08231"
    },
    "611": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "612": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x59C"
    },
    "615": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "616": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "619": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "620": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "621": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "622": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x39509351"
    },
    "627": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "628": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x50C"
    },
    "631": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "632": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "633": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41319831"
    },
    "638": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "639": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x538"
    },
    "642": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "643": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "644": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4F98FB10"
    },
    "649": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "650": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x540"
    },
    "653": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "654": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "657": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "658": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "659": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "660": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x18160DDD"
    },
    "665": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "666": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FF"
    },
    "669": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "670": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "671": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D3E474A"
    },
    "676": {
      "offset": [
        597,
        24548
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "677": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D9"
    },
    "680": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "681": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "682": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D3E474A"
    },
    "687": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "688": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4B8"
    },
    "691": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "692": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "693": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2F8B4B7D"
    },
    "698": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "699": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4DC"
    },
    "702": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "703": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "704": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x313CE567"
    },
    "709": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "710": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E6"
    },
    "713": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "714": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "715": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3918E59F"
    },
    "720": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "721": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x504"
    },
    "724": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "725": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "728": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "729": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "730": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "731": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x18160DDD"
    },
    "736": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "737": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x454"
    },
    "740": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "741": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "742": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1FEBCFEE"
    },
    "747": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "748": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x45C"
    },
    "751": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "752": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "753": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x23B872DD"
    },
    "758": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "759": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x482"
    },
    "762": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "763": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x342"
    },
    "766": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "767": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "768": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "769": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2530401"
    },
    "774": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "775": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x347"
    },
    "778": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "779": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "780": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x27C4ED2"
    },
    "785": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "786": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x361"
    },
    "789": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "790": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "791": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x655949C"
    },
    "796": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "797": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x369"
    },
    "800": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "801": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "802": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6FDDE03"
    },
    "807": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "808": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x371"
    },
    "811": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "812": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "813": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x95EA7B3"
    },
    "818": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "819": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3EE"
    },
    "822": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "823": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "824": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xAA1D3F3"
    },
    "829": {
      "offset": [
        597,
        24548
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "830": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x42E"
    },
    "833": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "834": {
      "offset": [
        597,
        24548
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "835": {
      "offset": [
        597,
        24548
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "837": {
      "offset": [
        597,
        24548
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "838": {
      "first_revert": true,
      "offset": [
        597,
        24548
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "839": {
      "offset": [
        972,
        998
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "840": {
      "offset": [
        972,
        998
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "843": {
      "offset": [
        972,
        998
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8F4"
    },
    "846": {
      "jump": "i",
      "offset": [
        972,
        998
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "847": {
      "offset": [
        972,
        998
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "848": {
      "offset": [
        972,
        998
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "850": {
      "offset": [
        972,
        998
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "851": {
      "offset": [
        972,
        998
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "852": {
      "offset": [
        972,
        998
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "853": {
      "offset": [
        972,
        998
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "854": {
      "offset": [
        972,
        998
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "855": {
      "offset": [
        972,
        998
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "856": {
      "offset": [
        972,
        998
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "857": {
      "offset": [
        972,
        998
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "858": {
      "offset": [
        972,
        998
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "859": {
      "offset": [
        972,
        998
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "860": {
      "offset": [
        972,
        998
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "862": {
      "offset": [
        972,
        998
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "863": {
      "offset": [
        972,
        998
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "864": {
      "offset": [
        972,
        998
      ],
      "op": "RETURN",
      "path": "contracts/IsinaToken.sol"
    },
    "865": {
      "offset": [
        1004,
        1033
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "866": {
      "offset": [
        1004,
        1033
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "869": {
      "offset": [
        1004,
        1033
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8FA"
    },
    "872": {
      "jump": "i",
      "offset": [
        1004,
        1033
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "873": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9289,
        11013
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "874": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9289,
        11013
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "877": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9289,
        11013
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x900"
    },
    "880": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        9289,
        11013
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "881": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "882": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x379"
    },
    "885": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xB2C"
    },
    "888": {
      "fn": "ERC20Detailed.name",
      "jump": "i",
      "offset": [
        644,
        725
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "889": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "890": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x40"
    },
    "892": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "893": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "894": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "896": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "897": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "898": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "899": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "900": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "901": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "902": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "903": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "904": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "905": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "906": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "907": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "908": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "909": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "910": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "911": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "912": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "913": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "914": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "915": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "916": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "917": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "918": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "919": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "920": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "921": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x0"
    },
    "923": {
      "op": "JUMPDEST"
    },
    "924": {
      "op": "DUP4"
    },
    "925": {
      "op": "DUP2"
    },
    "926": {
      "op": "LT"
    },
    "927": {
      "op": "ISZERO"
    },
    "928": {
      "op": "PUSH2",
      "value": "0x3B3"
    },
    "931": {
      "op": "JUMPI"
    },
    "932": {
      "op": "DUP2"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "op": "MLOAD"
    },
    "936": {
      "op": "DUP4"
    },
    "937": {
      "op": "DUP3"
    },
    "938": {
      "op": "ADD"
    },
    "939": {
      "op": "MSTORE"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "942": {
      "op": "ADD"
    },
    "943": {
      "op": "PUSH2",
      "value": "0x39B"
    },
    "946": {
      "op": "JUMP"
    },
    "947": {
      "op": "JUMPDEST"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "950": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "951": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "952": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "953": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "954": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "955": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "956": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "957": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "958": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1F"
    },
    "960": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "961": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "962": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "963": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x3E0"
    },
    "966": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "967": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "968": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "969": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "970": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "971": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "972": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1"
    },
    "974": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "975": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "977": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "978": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x100"
    },
    "981": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "EXP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "982": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "983": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "NOT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "984": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "985": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "986": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "987": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "989": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "990": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "991": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "992": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "993": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "994": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "995": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "996": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "997": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "998": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x40"
    },
    "1000": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1001": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1002": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1003": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1004": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1005": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "RETURN",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1006": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1007": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x41A"
    },
    "1010": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "1012": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1013": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1014": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1017": {
      "op": "DUP2"
    },
    "1018": {
      "op": "LT"
    },
    "1019": {
      "op": "ISZERO"
    },
    "1020": {
      "op": "PUSH2",
      "value": "0x404"
    },
    "1023": {
      "op": "JUMPI"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1026": {
      "op": "DUP1"
    },
    "1027": {
      "op": "REVERT"
    },
    "1028": {
      "op": "JUMPDEST"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "op": "SUB"
    },
    "1038": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1039": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1040": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1041": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1042": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "1044": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1045": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1046": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xBC2"
    },
    "1049": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2453,
        2598
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1050": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1051": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "1053": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1054": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1055": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1056": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1057": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1058": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1059": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1060": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1061": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1062": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1063": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1064": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1065": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "1067": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1068": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1069": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "RETURN",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1070": {
      "offset": [
        1223,
        1270
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1071": {
      "offset": [
        1223,
        1270
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1074": {
      "offset": [
        1223,
        1270
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1076": {
      "offset": [
        1223,
        1270
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1077": {
      "offset": [
        1223,
        1270
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1078": {
      "offset": [
        1223,
        1270
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1081": {
      "op": "DUP2"
    },
    "1082": {
      "op": "LT"
    },
    "1083": {
      "op": "ISZERO"
    },
    "1084": {
      "op": "PUSH2",
      "value": "0x444"
    },
    "1087": {
      "op": "JUMPI"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1090": {
      "op": "DUP1"
    },
    "1091": {
      "op": "REVERT"
    },
    "1092": {
      "op": "JUMPDEST"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "offset": [
        1223,
        1270
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "op": "SUB"
    },
    "1103": {
      "offset": [
        1223,
        1270
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1104": {
      "offset": [
        1223,
        1270
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xBD9"
    },
    "1107": {
      "jump": "i",
      "offset": [
        1223,
        1270
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1108": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1514,
        1603
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1109": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1514,
        1603
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x34F"
    },
    "1112": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1514,
        1603
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xBEB"
    },
    "1115": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1514,
        1603
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1116": {
      "offset": [
        1276,
        1326
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1117": {
      "offset": [
        1276,
        1326
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1120": {
      "offset": [
        1276,
        1326
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1122": {
      "offset": [
        1276,
        1326
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1123": {
      "offset": [
        1276,
        1326
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1124": {
      "offset": [
        1276,
        1326
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1127": {
      "op": "DUP2"
    },
    "1128": {
      "op": "LT"
    },
    "1129": {
      "op": "ISZERO"
    },
    "1130": {
      "op": "PUSH2",
      "value": "0x472"
    },
    "1133": {
      "op": "JUMPI"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1136": {
      "op": "DUP1"
    },
    "1137": {
      "op": "REVERT"
    },
    "1138": {
      "op": "JUMPDEST"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "offset": [
        1276,
        1326
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1147": {
      "op": "SHL"
    },
    "1148": {
      "op": "SUB"
    },
    "1149": {
      "offset": [
        1276,
        1326
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1150": {
      "offset": [
        1276,
        1326
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xBF1"
    },
    "1153": {
      "jump": "i",
      "offset": [
        1276,
        1326
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1154": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1155": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41A"
    },
    "1158": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1160": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1161": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1162": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1165": {
      "op": "DUP2"
    },
    "1166": {
      "op": "LT"
    },
    "1167": {
      "op": "ISZERO"
    },
    "1168": {
      "op": "PUSH2",
      "value": "0x498"
    },
    "1171": {
      "op": "JUMPI"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1174": {
      "op": "DUP1"
    },
    "1175": {
      "op": "REVERT"
    },
    "1176": {
      "op": "JUMPDEST"
    },
    "1177": {
      "op": "POP"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "op": "SUB"
    },
    "1186": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1187": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1188": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1189": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1190": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1191": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "1193": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1194": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "1195": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1196": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1197": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1198": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1199": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1200": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "1202": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "1203": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1204": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC03"
    },
    "1207": {
      "fn": "IsinaToken.transferFrom",
      "jump": "i",
      "offset": [
        5435,
        5781
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1208": {
      "offset": [
        1136,
        1160
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1209": {
      "offset": [
        1136,
        1160
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4C0"
    },
    "1212": {
      "offset": [
        1136,
        1160
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC3E"
    },
    "1215": {
      "jump": "i",
      "offset": [
        1136,
        1160
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1216": {
      "offset": [
        1136,
        1160
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1217": {
      "offset": [
        1136,
        1160
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "1219": {
      "offset": [
        1136,
        1160
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1220": {
      "offset": [
        1136,
        1160
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1227": {
      "op": "SHL"
    },
    "1228": {
      "op": "SUB"
    },
    "1229": {
      "offset": [
        1136,
        1160
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1230": {
      "offset": [
        1136,
        1160
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaToken.sol"
    },
    "1231": {
      "offset": [
        1136,
        1160
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1232": {
      "offset": [
        1136,
        1160
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "1233": {
      "offset": [
        1136,
        1160
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "1234": {
      "offset": [
        1136,
        1160
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1235": {
      "offset": [
        1136,
        1160
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1236": {
      "offset": [
        1136,
        1160
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1237": {
      "offset": [
        1136,
        1160
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1238": {
      "offset": [
        1136,
        1160
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1239": {
      "offset": [
        1136,
        1160
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "1241": {
      "offset": [
        1136,
        1160
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "1242": {
      "offset": [
        1136,
        1160
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1243": {
      "offset": [
        1136,
        1160
      ],
      "op": "RETURN",
      "path": "contracts/IsinaToken.sol"
    },
    "1244": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3058,
        3849
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1245": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3058,
        3849
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E4"
    },
    "1248": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3058,
        3849
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC4D"
    },
    "1251": {
      "fn": "IsinaToken.unlock_seed",
      "jump": "i",
      "offset": [
        3058,
        3849
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1252": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3058,
        3849
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1253": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3058,
        3849
      ],
      "op": "STOP",
      "path": "contracts/IsinaToken.sol"
    },
    "1254": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1255": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x4EE"
    },
    "1258": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xE0A"
    },
    "1261": {
      "fn": "ERC20Detailed.decimals",
      "jump": "i",
      "offset": [
        1478,
        1559
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1262": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1263": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x40"
    },
    "1265": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1266": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1267": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xFF"
    },
    "1269": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1270": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1271": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1272": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1273": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1274": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1275": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1276": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1277": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1278": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1279": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "1281": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1282": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1283": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "RETURN",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1284": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4679,
        4810
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1285": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4679,
        4810
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E4"
    },
    "1288": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4679,
        4810
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE13"
    },
    "1291": {
      "fn": "IsinaToken.burn_seed_tokens",
      "jump": "i",
      "offset": [
        4679,
        4810
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1292": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1293": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x41A"
    },
    "1296": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "1298": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1299": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1300": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1303": {
      "op": "DUP2"
    },
    "1304": {
      "op": "LT"
    },
    "1305": {
      "op": "ISZERO"
    },
    "1306": {
      "op": "PUSH2",
      "value": "0x522"
    },
    "1309": {
      "op": "JUMPI"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1312": {
      "op": "DUP1"
    },
    "1313": {
      "op": "REVERT"
    },
    "1314": {
      "op": "JUMPDEST"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "op": "SUB"
    },
    "1324": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1325": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1326": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1327": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1328": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "1330": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1331": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1332": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xE83"
    },
    "1335": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3702,
        3905
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1336": {
      "offset": [
        689,
        728
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1337": {
      "offset": [
        689,
        728
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1340": {
      "offset": [
        689,
        728
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xEBF"
    },
    "1343": {
      "jump": "i",
      "offset": [
        689,
        728
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1344": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1345": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1348": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1350": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1351": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1352": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1355": {
      "op": "DUP2"
    },
    "1356": {
      "op": "LT"
    },
    "1357": {
      "op": "ISZERO"
    },
    "1358": {
      "op": "PUSH2",
      "value": "0x556"
    },
    "1361": {
      "op": "JUMPI"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1364": {
      "op": "DUP1"
    },
    "1365": {
      "op": "REVERT"
    },
    "1366": {
      "op": "JUMPDEST"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1378": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xEC4"
    },
    "1381": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        16733,
        19160
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1382": {
      "offset": [
        734,
        790
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1383": {
      "offset": [
        734,
        790
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1386": {
      "offset": [
        734,
        790
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x130E"
    },
    "1389": {
      "jump": "i",
      "offset": [
        734,
        790
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1390": {
      "offset": [
        1332,
        1377
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1391": {
      "offset": [
        1332,
        1377
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1394": {
      "offset": [
        1332,
        1377
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1396": {
      "offset": [
        1332,
        1377
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1397": {
      "offset": [
        1332,
        1377
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1398": {
      "offset": [
        1332,
        1377
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1401": {
      "op": "DUP2"
    },
    "1402": {
      "op": "LT"
    },
    "1403": {
      "op": "ISZERO"
    },
    "1404": {
      "op": "PUSH2",
      "value": "0x584"
    },
    "1407": {
      "op": "JUMPI"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1410": {
      "op": "DUP1"
    },
    "1411": {
      "op": "REVERT"
    },
    "1412": {
      "op": "JUMPDEST"
    },
    "1413": {
      "op": "POP"
    },
    "1414": {
      "offset": [
        1332,
        1377
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1421": {
      "op": "SHL"
    },
    "1422": {
      "op": "SUB"
    },
    "1423": {
      "offset": [
        1332,
        1377
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1424": {
      "offset": [
        1332,
        1377
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1316"
    },
    "1427": {
      "jump": "i",
      "offset": [
        1332,
        1377
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1428": {
      "offset": [
        937,
        966
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1429": {
      "offset": [
        937,
        966
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1432": {
      "offset": [
        937,
        966
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1328"
    },
    "1435": {
      "jump": "i",
      "offset": [
        937,
        966
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1436": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1437": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x34F"
    },
    "1440": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "1442": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1443": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1444": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1447": {
      "op": "DUP2"
    },
    "1448": {
      "op": "LT"
    },
    "1449": {
      "op": "ISZERO"
    },
    "1450": {
      "op": "PUSH2",
      "value": "0x5B2"
    },
    "1453": {
      "op": "JUMPI"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1456": {
      "op": "DUP1"
    },
    "1457": {
      "op": "REVERT"
    },
    "1458": {
      "op": "JUMPDEST"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1467": {
      "op": "SHL"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1470": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x132E"
    },
    "1473": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1661,
        1769
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1474": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1475": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4E4"
    },
    "1478": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x1349"
    },
    "1481": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1600,
        1737
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1482": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1483": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1486": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1488": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1489": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1490": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1493": {
      "op": "DUP2"
    },
    "1494": {
      "op": "LT"
    },
    "1495": {
      "op": "ISZERO"
    },
    "1496": {
      "op": "PUSH2",
      "value": "0x5E0"
    },
    "1499": {
      "op": "JUMPI"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1502": {
      "op": "DUP1"
    },
    "1503": {
      "op": "REVERT"
    },
    "1504": {
      "op": "JUMPDEST"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1513": {
      "op": "SHL"
    },
    "1514": {
      "op": "SUB"
    },
    "1515": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1516": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13E3"
    },
    "1519": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        21237,
        23420
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1520": {
      "offset": [
        1195,
        1216
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1521": {
      "offset": [
        1195,
        1216
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4C0"
    },
    "1524": {
      "offset": [
        1195,
        1216
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1632"
    },
    "1527": {
      "jump": "i",
      "offset": [
        1195,
        1216
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1528": {
      "offset": [
        1437,
        1480
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1529": {
      "offset": [
        1437,
        1480
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41A"
    },
    "1532": {
      "offset": [
        1437,
        1480
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1534": {
      "offset": [
        1437,
        1480
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1535": {
      "offset": [
        1437,
        1480
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1536": {
      "offset": [
        1437,
        1480
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1539": {
      "op": "DUP2"
    },
    "1540": {
      "op": "LT"
    },
    "1541": {
      "op": "ISZERO"
    },
    "1542": {
      "op": "PUSH2",
      "value": "0x60E"
    },
    "1545": {
      "op": "JUMPI"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1548": {
      "op": "DUP1"
    },
    "1549": {
      "op": "REVERT"
    },
    "1550": {
      "op": "JUMPDEST"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "offset": [
        1437,
        1480
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "SUB"
    },
    "1561": {
      "offset": [
        1437,
        1480
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1562": {
      "offset": [
        1437,
        1480
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1641"
    },
    "1565": {
      "jump": "i",
      "offset": [
        1437,
        1480
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1566": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1567": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1570": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1572": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1573": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1574": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1577": {
      "op": "DUP2"
    },
    "1578": {
      "op": "LT"
    },
    "1579": {
      "op": "ISZERO"
    },
    "1580": {
      "op": "PUSH2",
      "value": "0x634"
    },
    "1583": {
      "op": "JUMPI"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1586": {
      "op": "DUP1"
    },
    "1587": {
      "op": "REVERT"
    },
    "1588": {
      "op": "JUMPDEST"
    },
    "1589": {
      "op": "POP"
    },
    "1590": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "op": "SUB"
    },
    "1599": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1600": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1656"
    },
    "1603": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        14480,
        16727
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1604": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11019,
        12699
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1605": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11019,
        12699
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1608": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11019,
        12699
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1A5B"
    },
    "1611": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        11019,
        12699
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1612": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1613": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41A"
    },
    "1616": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1618": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1619": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1620": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1623": {
      "op": "DUP2"
    },
    "1624": {
      "op": "LT"
    },
    "1625": {
      "op": "ISZERO"
    },
    "1626": {
      "op": "PUSH2",
      "value": "0x662"
    },
    "1629": {
      "op": "JUMPI"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1632": {
      "op": "DUP1"
    },
    "1633": {
      "op": "REVERT"
    },
    "1634": {
      "op": "JUMPDEST"
    },
    "1635": {
      "op": "POP"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "op": "SUB"
    },
    "1644": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1645": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1646": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1647": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1648": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "1650": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "1651": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1652": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1C4E"
    },
    "1655": {
      "fn": "IsinaToken.send_seed_tokens",
      "jump": "i",
      "offset": [
        5787,
        6426
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1656": {
      "offset": [
        1111,
        1130
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1657": {
      "offset": [
        1111,
        1130
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4C0"
    },
    "1660": {
      "offset": [
        1111,
        1130
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1DF0"
    },
    "1663": {
      "jump": "i",
      "offset": [
        1111,
        1130
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1664": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3855,
        4673
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1665": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3855,
        4673
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E4"
    },
    "1668": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3855,
        4673
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1DFF"
    },
    "1671": {
      "fn": "IsinaToken.unlock_private",
      "jump": "i",
      "offset": [
        3855,
        4673
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1672": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1673": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1676": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1678": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1679": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1680": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1683": {
      "op": "DUP2"
    },
    "1684": {
      "op": "LT"
    },
    "1685": {
      "op": "ISZERO"
    },
    "1686": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1689": {
      "op": "JUMPI"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1692": {
      "op": "DUP1"
    },
    "1693": {
      "op": "REVERT"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "op": "SUB"
    },
    "1705": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1706": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1FA0"
    },
    "1709": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        19166,
        21231
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1710": {
      "offset": [
        900,
        931
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1711": {
      "offset": [
        900,
        931
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1714": {
      "offset": [
        900,
        931
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x21CA"
    },
    "1717": {
      "jump": "i",
      "offset": [
        900,
        931
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1718": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1719": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4C0"
    },
    "1722": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x21D0"
    },
    "1725": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        815,
        892
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1726": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1727": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1730": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1732": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1733": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1734": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1737": {
      "op": "DUP2"
    },
    "1738": {
      "op": "LT"
    },
    "1739": {
      "op": "ISZERO"
    },
    "1740": {
      "op": "PUSH2",
      "value": "0x6D4"
    },
    "1743": {
      "op": "JUMPI"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1746": {
      "op": "DUP1"
    },
    "1747": {
      "op": "REVERT"
    },
    "1748": {
      "op": "JUMPDEST"
    },
    "1749": {
      "op": "POP"
    },
    "1750": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1757": {
      "op": "SHL"
    },
    "1758": {
      "op": "SUB"
    },
    "1759": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1760": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x21E4"
    },
    "1763": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        7487,
        9283
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1764": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1765": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x41A"
    },
    "1768": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x23EF"
    },
    "1771": {
      "fn": "Ownable.isOwner",
      "jump": "i",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "1772": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1773": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E4"
    },
    "1776": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1778": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1779": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1780": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1783": {
      "op": "DUP2"
    },
    "1784": {
      "op": "LT"
    },
    "1785": {
      "op": "ISZERO"
    },
    "1786": {
      "op": "PUSH2",
      "value": "0x702"
    },
    "1789": {
      "op": "JUMPI"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1792": {
      "op": "DUP1"
    },
    "1793": {
      "op": "REVERT"
    },
    "1794": {
      "op": "JUMPDEST"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1802": {
      "op": "SHL"
    },
    "1803": {
      "op": "SUB"
    },
    "1804": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1805": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1806": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1807": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1808": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "1810": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "1811": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1812": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2405"
    },
    "1815": {
      "fn": "IsinaToken.transfer_from_bank",
      "jump": "i",
      "offset": [
        2862,
        3052
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1816": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1817": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x379"
    },
    "1820": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x246A"
    },
    "1823": {
      "fn": "ERC20Detailed.symbol",
      "jump": "i",
      "offset": [
        838,
        923
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "1824": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1825": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41A"
    },
    "1828": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1830": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1831": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1832": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1835": {
      "op": "DUP2"
    },
    "1836": {
      "op": "LT"
    },
    "1837": {
      "op": "ISZERO"
    },
    "1838": {
      "op": "PUSH2",
      "value": "0x736"
    },
    "1841": {
      "op": "JUMPI"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1844": {
      "op": "DUP1"
    },
    "1845": {
      "op": "REVERT"
    },
    "1846": {
      "op": "JUMPDEST"
    },
    "1847": {
      "op": "POP"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1857": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1858": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1859": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1860": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "1862": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "1863": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1864": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24CB"
    },
    "1867": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "jump": "i",
      "offset": [
        7101,
        7481
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1868": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1869": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x41A"
    },
    "1872": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "1874": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1875": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1876": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1879": {
      "op": "DUP2"
    },
    "1880": {
      "op": "LT"
    },
    "1881": {
      "op": "ISZERO"
    },
    "1882": {
      "op": "PUSH2",
      "value": "0x762"
    },
    "1885": {
      "op": "JUMPI"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1888": {
      "op": "DUP1"
    },
    "1889": {
      "op": "REVERT"
    },
    "1890": {
      "op": "JUMPDEST"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1901": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1902": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1903": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1904": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "1906": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1907": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1908": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2598"
    },
    "1911": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4392,
        4605
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "1912": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1913": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41A"
    },
    "1916": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1918": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1919": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1920": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1923": {
      "op": "DUP2"
    },
    "1924": {
      "op": "LT"
    },
    "1925": {
      "op": "ISZERO"
    },
    "1926": {
      "op": "PUSH2",
      "value": "0x78E"
    },
    "1929": {
      "op": "JUMPI"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1932": {
      "op": "DUP1"
    },
    "1933": {
      "op": "REVERT"
    },
    "1934": {
      "op": "JUMPDEST"
    },
    "1935": {
      "op": "POP"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "1945": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1946": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1947": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1948": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "1950": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "1951": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1952": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x25D4"
    },
    "1955": {
      "fn": "IsinaToken.transfer",
      "jump": "i",
      "offset": [
        5234,
        5429
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1956": {
      "offset": [
        1077,
        1105
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1957": {
      "offset": [
        1077,
        1105
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4C0"
    },
    "1960": {
      "offset": [
        1077,
        1105
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x25E1"
    },
    "1963": {
      "jump": "i",
      "offset": [
        1077,
        1105
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "1964": {
      "offset": [
        1538,
        1588
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "1965": {
      "offset": [
        1538,
        1588
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "1968": {
      "offset": [
        1538,
        1588
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "1970": {
      "offset": [
        1538,
        1588
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "1971": {
      "offset": [
        1538,
        1588
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "1972": {
      "offset": [
        1538,
        1588
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1975": {
      "op": "DUP2"
    },
    "1976": {
      "op": "LT"
    },
    "1977": {
      "op": "ISZERO"
    },
    "1978": {
      "op": "PUSH2",
      "value": "0x7C2"
    },
    "1981": {
      "op": "JUMPI"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1984": {
      "op": "DUP1"
    },
    "1985": {
      "op": "REVERT"
    },
    "1986": {
      "op": "JUMPDEST"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "offset": [
        1538,
        1588
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1995": {
      "op": "SHL"
    },
    "1996": {
      "op": "SUB"
    },
    "1997": {
      "offset": [
        1538,
        1588
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "1998": {
      "offset": [
        1538,
        1588
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x25F0"
    },
    "2001": {
      "jump": "i",
      "offset": [
        1538,
        1588
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2002": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        4962,
        5108
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2003": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        4962,
        5108
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E4"
    },
    "2006": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        4962,
        5108
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2602"
    },
    "2009": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "jump": "i",
      "offset": [
        4962,
        5108
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2010": {
      "offset": [
        1486,
        1532
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2011": {
      "offset": [
        1486,
        1532
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41A"
    },
    "2014": {
      "offset": [
        1486,
        1532
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "2016": {
      "offset": [
        1486,
        1532
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2017": {
      "offset": [
        1486,
        1532
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "2018": {
      "offset": [
        1486,
        1532
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2021": {
      "op": "DUP2"
    },
    "2022": {
      "op": "LT"
    },
    "2023": {
      "op": "ISZERO"
    },
    "2024": {
      "op": "PUSH2",
      "value": "0x7F0"
    },
    "2027": {
      "op": "JUMPI"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2030": {
      "op": "DUP1"
    },
    "2031": {
      "op": "REVERT"
    },
    "2032": {
      "op": "JUMPDEST"
    },
    "2033": {
      "op": "POP"
    },
    "2034": {
      "offset": [
        1486,
        1532
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "offset": [
        1486,
        1532
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2044": {
      "offset": [
        1486,
        1532
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2672"
    },
    "2047": {
      "jump": "i",
      "offset": [
        1486,
        1532
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2048": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12705,
        14474
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2049": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12705,
        14474
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "2052": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12705,
        14474
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2687"
    },
    "2055": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        12705,
        14474
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2056": {
      "offset": [
        1166,
        1188
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2057": {
      "offset": [
        1166,
        1188
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4C0"
    },
    "2060": {
      "offset": [
        1166,
        1188
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28A1"
    },
    "2063": {
      "jump": "i",
      "offset": [
        1166,
        1188
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2064": {
      "offset": [
        1039,
        1070
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2065": {
      "offset": [
        1039,
        1070
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "2068": {
      "offset": [
        1039,
        1070
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28B0"
    },
    "2071": {
      "jump": "i",
      "offset": [
        1039,
        1070
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2072": {
      "offset": [
        868,
        894
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2073": {
      "offset": [
        868,
        894
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "2076": {
      "offset": [
        868,
        894
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28B6"
    },
    "2079": {
      "jump": "i",
      "offset": [
        868,
        894
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2080": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2081": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E4"
    },
    "2084": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "2086": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2087": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "2088": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2091": {
      "op": "DUP2"
    },
    "2092": {
      "op": "LT"
    },
    "2093": {
      "op": "ISZERO"
    },
    "2094": {
      "op": "PUSH2",
      "value": "0x836"
    },
    "2097": {
      "op": "JUMPI"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2100": {
      "op": "DUP1"
    },
    "2101": {
      "op": "REVERT"
    },
    "2102": {
      "op": "JUMPDEST"
    },
    "2103": {
      "op": "POP"
    },
    "2104": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2114": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28BC"
    },
    "2117": {
      "fn": "IsinaToken.set_bank",
      "jump": "i",
      "offset": [
        5114,
        5228
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2118": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2119": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x34F"
    },
    "2122": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "2124": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2125": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2126": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2129": {
      "op": "DUP2"
    },
    "2130": {
      "op": "LT"
    },
    "2131": {
      "op": "ISZERO"
    },
    "2132": {
      "op": "PUSH2",
      "value": "0x85C"
    },
    "2135": {
      "op": "JUMPI"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2138": {
      "op": "DUP1"
    },
    "2139": {
      "op": "REVERT"
    },
    "2140": {
      "op": "JUMPDEST"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "SUB"
    },
    "2150": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2151": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2152": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2153": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2154": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2155": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "2157": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2158": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2159": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2160": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2928"
    },
    "2163": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2183,
        2315
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "2164": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4816,
        4956
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2165": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4816,
        4956
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E4"
    },
    "2168": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4816,
        4956
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2953"
    },
    "2171": {
      "fn": "IsinaToken.burn_private_tokens",
      "jump": "i",
      "offset": [
        4816,
        4956
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2172": {
      "offset": [
        1383,
        1431
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2173": {
      "offset": [
        1383,
        1431
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x34F"
    },
    "2176": {
      "offset": [
        1383,
        1431
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "2178": {
      "offset": [
        1383,
        1431
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2179": {
      "offset": [
        1383,
        1431
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "2180": {
      "offset": [
        1383,
        1431
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2183": {
      "op": "DUP2"
    },
    "2184": {
      "op": "LT"
    },
    "2185": {
      "op": "ISZERO"
    },
    "2186": {
      "op": "PUSH2",
      "value": "0x892"
    },
    "2189": {
      "op": "JUMPI"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2192": {
      "op": "DUP1"
    },
    "2193": {
      "op": "REVERT"
    },
    "2194": {
      "op": "JUMPDEST"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "offset": [
        1383,
        1431
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "op": "SUB"
    },
    "2205": {
      "offset": [
        1383,
        1431
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2206": {
      "offset": [
        1383,
        1431
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x29C3"
    },
    "2209": {
      "jump": "i",
      "offset": [
        1383,
        1431
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4E4"
    },
    "2214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "2216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2221": {
      "op": "DUP2"
    },
    "2222": {
      "op": "LT"
    },
    "2223": {
      "op": "ISZERO"
    },
    "2224": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "2227": {
      "op": "JUMPI"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2230": {
      "op": "DUP1"
    },
    "2231": {
      "op": "REVERT"
    },
    "2232": {
      "op": "JUMPDEST"
    },
    "2233": {
      "op": "POP"
    },
    "2234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2241": {
      "op": "SHL"
    },
    "2242": {
      "op": "SUB"
    },
    "2243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x29D5"
    },
    "2247": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1886,
        1993
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "2248": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2249": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41A"
    },
    "2252": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "2254": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2255": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "CALLDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "2256": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2259": {
      "op": "DUP2"
    },
    "2260": {
      "op": "LT"
    },
    "2261": {
      "op": "ISZERO"
    },
    "2262": {
      "op": "PUSH2",
      "value": "0x8DE"
    },
    "2265": {
      "op": "JUMPI"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2268": {
      "op": "DUP1"
    },
    "2269": {
      "op": "REVERT"
    },
    "2270": {
      "op": "JUMPDEST"
    },
    "2271": {
      "op": "POP"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2278": {
      "op": "SHL"
    },
    "2279": {
      "op": "SUB"
    },
    "2280": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2281": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2282": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2283": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2284": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "2286": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "2287": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "CALLDATALOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2288": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2A2B"
    },
    "2291": {
      "fn": "IsinaToken.send_private_tokens",
      "jump": "i",
      "offset": [
        6432,
        7095
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2292": {
      "offset": [
        972,
        998
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2293": {
      "offset": [
        972,
        998
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9"
    },
    "2295": {
      "offset": [
        972,
        998
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2296": {
      "offset": [
        972,
        998
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2297": {
      "jump": "o",
      "offset": [
        972,
        998
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2298": {
      "offset": [
        1004,
        1033
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2299": {
      "offset": [
        1004,
        1033
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "2301": {
      "offset": [
        1004,
        1033
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2302": {
      "offset": [
        1004,
        1033
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2303": {
      "jump": "o",
      "offset": [
        1004,
        1033
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2304": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9289,
        11013
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2305": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9372,
        9379
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "2307": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9417,
        9427
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5ED44500"
    },
    "2312": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9399,
        9414
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2313": {
      "branch": 218,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9399,
        9427
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2314": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9395,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2315": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9395,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x916"
    },
    "2318": {
      "branch": 218,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9395,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2319": {
      "op": "POP"
    },
    "2320": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9464,
        9465
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 0,
      "value": "0x0"
    },
    "2322": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9457,
        9465
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB29"
    },
    "2325": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9457,
        9465
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2326": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9395,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2327": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9504,
        9514
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x603C2E80"
    },
    "2332": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9486,
        9501
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2333": {
      "branch": 219,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9486,
        9514
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2334": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9482,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2335": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9482,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x950"
    },
    "2338": {
      "branch": 219,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9482,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2339": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9579
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 1,
      "value": "0x949"
    },
    "2342": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9575,
        9578
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2344": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9570
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2347": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9567,
        9569
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "2349": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9562
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2351": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9562
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2352": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9566
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2355": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9566
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2356": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9570
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2357": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9570
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2358": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9570
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2363": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9570
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2364": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        9551,
        9570
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2365": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9570
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2366": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9574
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2367": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9579
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2372": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9574
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2C1B"
    },
    "2375": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9579
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2376": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        9551,
        9579
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2377": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9551,
        9579
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2378": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9544,
        9579
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2379": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9544,
        9579
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "2380": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9544,
        9579
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB29"
    },
    "2383": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9544,
        9579
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2384": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9482,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2385": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9618,
        9628
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x621D6200"
    },
    "2390": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9600,
        9615
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2391": {
      "branch": 220,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9600,
        9628
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2392": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9596,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2393": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9596,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x977"
    },
    "2396": {
      "branch": 220,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9596,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2397": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 2,
      "value": "0x949"
    },
    "2400": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9689,
        9692
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2402": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9684
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2405": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9681,
        9683
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "2407": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9676
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2409": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9676
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2410": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9680
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2413": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9680
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2414": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9684
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2415": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9684
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2416": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9684
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2421": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9665,
        9684
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2422": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        9665,
        9684
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2423": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9596,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2424": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9732,
        9742
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6387EE80"
    },
    "2429": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9714,
        9729
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2430": {
      "branch": 221,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9714,
        9742
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2431": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9710,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2432": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9710,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x99E"
    },
    "2435": {
      "branch": 221,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9710,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2436": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9807
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 3,
      "value": "0x949"
    },
    "2439": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9803,
        9806
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2441": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9798
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2444": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9795,
        9797
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "2446": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9790
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2448": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9790
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2449": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9794
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2452": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9794
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2453": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9798
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2454": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9798
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2455": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9798
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2460": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9779,
        9798
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2461": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        9779,
        9798
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2462": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9710,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2463": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9846,
        9856
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x63FE9580"
    },
    "2468": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9828,
        9843
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2469": {
      "branch": 222,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9828,
        9856
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2470": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9824,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2471": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9824,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9C5"
    },
    "2474": {
      "branch": 222,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9824,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2475": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9921
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 4,
      "value": "0x949"
    },
    "2478": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9917,
        9920
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2480": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9912
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2483": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9909,
        9911
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x23"
    },
    "2485": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9904
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2487": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9904
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2488": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9908
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2491": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9908
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2492": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9912
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2493": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9912
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2494": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9912
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2499": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9893,
        9912
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2500": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        9893,
        9912
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2501": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9824,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2502": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9960,
        9970
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64C84B00"
    },
    "2507": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9942,
        9957
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2508": {
      "branch": 223,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9942,
        9970
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2509": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9938,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2510": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9938,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9EC"
    },
    "2513": {
      "branch": 223,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9938,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2514": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10035
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 5,
      "value": "0x949"
    },
    "2517": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10031,
        10034
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2519": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10026
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2522": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10023,
        10025
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28"
    },
    "2524": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10018
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2526": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10018
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2527": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10022
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2530": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10022
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2531": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10026
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2532": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10026
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2533": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10026
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2538": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10007,
        10026
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2539": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10007,
        10026
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2540": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9938,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2541": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10074,
        10084
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x65BADF00"
    },
    "2546": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10056,
        10071
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2547": {
      "branch": 224,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10056,
        10084
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2548": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10052,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2549": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10052,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA13"
    },
    "2552": {
      "branch": 224,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10052,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2553": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10149
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 6,
      "value": "0x949"
    },
    "2556": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10145,
        10148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2558": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10140
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2561": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10137,
        10139
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "2563": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10132
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2565": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10132
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2566": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10136
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2569": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10136
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2570": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10140
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2571": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10140
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2572": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10140
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2577": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10121,
        10140
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2578": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10121,
        10140
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2579": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10052,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2580": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10188,
        10198
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6609F900"
    },
    "2585": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10170,
        10185
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2586": {
      "branch": 225,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10170,
        10198
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2587": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10166,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2588": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10166,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA3A"
    },
    "2591": {
      "branch": 225,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10166,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2592": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10263
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 7,
      "value": "0x949"
    },
    "2595": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10259,
        10262
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2597": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10254
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2600": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10251,
        10253
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x32"
    },
    "2602": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10246
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2604": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10246
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2605": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10250
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2608": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10250
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2609": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10254
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2610": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10254
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2611": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10254
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2616": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10235,
        10254
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2617": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10235,
        10254
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2618": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10166,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2619": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10302,
        10312
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x66AAD000"
    },
    "2624": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10284,
        10299
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2625": {
      "branch": 226,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10284,
        10312
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2626": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10280,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2627": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10280,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA61"
    },
    "2630": {
      "branch": 226,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10280,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2631": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10377
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 8,
      "value": "0x949"
    },
    "2634": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10373,
        10376
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2636": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10368
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2639": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10365,
        10367
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x37"
    },
    "2641": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10360
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2643": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10360
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2644": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10364
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2647": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10364
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2648": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10368
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2649": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10368
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2650": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10368
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2655": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10349,
        10368
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2656": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10349,
        10368
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2657": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10280,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2658": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10416,
        10426
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x66FB3B80"
    },
    "2663": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10398,
        10413
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2664": {
      "branch": 227,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10398,
        10426
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2665": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10394,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2666": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10394,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA88"
    },
    "2669": {
      "branch": 227,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10394,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2670": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10491
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 9,
      "value": "0x949"
    },
    "2673": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10487,
        10490
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2675": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10482
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2678": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10479,
        10481
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3C"
    },
    "2680": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10474
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2682": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10474
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2683": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10478
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2686": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10478
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2687": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10482
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2688": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10482
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2689": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10482
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2694": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10463,
        10482
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2695": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10463,
        10482
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2696": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10394,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2697": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10530,
        10540
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x674BA700"
    },
    "2702": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10512,
        10527
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2703": {
      "branch": 228,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10512,
        10540
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2704": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10508,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2705": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10508,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xAAF"
    },
    "2708": {
      "branch": 228,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10508,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2709": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10605
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 10,
      "value": "0x949"
    },
    "2712": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10601,
        10604
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2714": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10596
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2717": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10593,
        10595
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41"
    },
    "2719": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10588
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2721": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10588
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2722": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10592
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2725": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10592
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2726": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10596
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2727": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10596
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2728": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10596
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2733": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10577,
        10596
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2734": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10577,
        10596
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2735": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10508,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2736": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10644,
        10654
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x67C24E00"
    },
    "2741": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10626,
        10641
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2742": {
      "branch": 229,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10626,
        10654
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2743": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10622,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2744": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10622,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xAD6"
    },
    "2747": {
      "branch": 229,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10622,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2748": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10719
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 11,
      "value": "0x949"
    },
    "2751": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10715,
        10718
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2753": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10710
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2756": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10707,
        10709
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x46"
    },
    "2758": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10702
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2760": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10702
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2761": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10706
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2764": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10706
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2765": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10710
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2766": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10710
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2767": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10710
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2772": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10691,
        10710
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2773": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10691,
        10710
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2774": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10622,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2775": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10758,
        10768
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x68632500"
    },
    "2780": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10740,
        10755
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2781": {
      "branch": 230,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10740,
        10768
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2782": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10736,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2783": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10736,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xAFD"
    },
    "2786": {
      "branch": 230,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10736,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2787": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10833
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 12,
      "value": "0x949"
    },
    "2790": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10829,
        10832
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2792": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10824
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2795": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10821,
        10823
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x50"
    },
    "2797": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10816
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2799": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10816
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2800": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10820
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2803": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10820
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2804": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10824
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2805": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10824
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2806": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10824
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2811": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10805,
        10824
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2812": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10805,
        10824
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2813": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10736,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2814": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10872,
        10882
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x692CDA80"
    },
    "2819": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10854,
        10869
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2820": {
      "branch": 231,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10854,
        10882
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "2821": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10850,
        11007
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "2822": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10850,
        11007
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB24"
    },
    "2825": {
      "branch": 231,
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10850,
        11007
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "2826": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10947
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 13,
      "value": "0x949"
    },
    "2829": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10943,
        10946
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "2831": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10938
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "2834": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10935,
        10937
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5A"
    },
    "2836": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10930
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "2838": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10930
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2839": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10934
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "2842": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10934
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2843": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10938
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "2844": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10938
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2845": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10938
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "2850": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10919,
        10938
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "2851": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "i",
      "offset": [
        10919,
        10938
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2852": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10850,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2853": {
      "op": "POP"
    },
    "2854": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10985,
        10996
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 14,
      "value": "0x6"
    },
    "2856": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10985,
        10996
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "2857": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        10850,
        11007
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "2858": {
      "fn": "IsinaToken.get_available_team_balance",
      "offset": [
        9289,
        11013
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "2859": {
      "fn": "IsinaToken.get_available_team_balance",
      "jump": "o",
      "offset": [
        9289,
        11013
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "2860": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2861": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "statement": 15,
      "value": "0x3"
    },
    "2863": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2864": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2865": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x40"
    },
    "2867": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2868": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2869": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "2871": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1F"
    },
    "2873": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x2"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2877": {
      "op": "NOT"
    },
    "2878": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x100"
    },
    "2881": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1"
    },
    "2883": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP9",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2884": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2885": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2886": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2887": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2888": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2889": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2890": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2891": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2892": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2893": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2894": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2895": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2896": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2897": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2898": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2899": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2900": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2901": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2902": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2903": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2904": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2905": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2906": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2907": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2908": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2909": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2910": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2911": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2912": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2913": {
      "fn": "ERC20Detailed.name",
      "offset": [
        681,
        694
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x60"
    },
    "2915": {
      "fn": "ERC20Detailed.name",
      "offset": [
        681,
        694
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2916": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2917": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2918": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2919": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2920": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2921": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2922": {
      "fn": "ERC20Detailed.name",
      "offset": [
        713,
        718
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2923": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2924": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2925": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2926": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xBB8"
    },
    "2929": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2930": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2931": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1F"
    },
    "2933": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "LT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2934": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xB8D"
    },
    "2937": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2938": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x100"
    },
    "2941": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2942": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2943": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2944": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2945": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2946": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2947": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2948": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2949": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "2951": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2952": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2953": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xBB8"
    },
    "2956": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2957": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2958": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2959": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2960": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2961": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2962": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x0"
    },
    "2964": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2965": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "2967": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x0"
    },
    "2969": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2970": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2971": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2972": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2973": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2974": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2975": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2976": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2977": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1"
    },
    "2979": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2980": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2981": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "2983": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2984": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2985": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2986": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "GT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2987": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xB9B"
    },
    "2990": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2991": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2992": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2993": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2994": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1F"
    },
    "2996": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2997": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2998": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "2999": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3000": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3001": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3002": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3003": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3004": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3005": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3006": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3007": {
      "fn": "ERC20Detailed.name",
      "offset": [
        706,
        718
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3008": {
      "fn": "ERC20Detailed.name",
      "offset": [
        644,
        725
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3009": {
      "fn": "ERC20Detailed.name",
      "jump": "o",
      "offset": [
        644,
        725
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3010": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3011": {
      "fn": "ERC20.approve",
      "offset": [
        2518,
        2522
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "3013": {
      "fn": "ERC20.approve",
      "offset": [
        2534,
        2570
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 16,
      "value": "0xBCF"
    },
    "3016": {
      "fn": "ERC20.approve",
      "offset": [
        2543,
        2553
      ],
      "op": "CALLER",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3017": {
      "fn": "ERC20.approve",
      "offset": [
        2555,
        2562
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3018": {
      "fn": "ERC20.approve",
      "offset": [
        2564,
        2569
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3019": {
      "fn": "ERC20.approve",
      "offset": [
        2534,
        2542
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2C88"
    },
    "3022": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2534,
        2570
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3023": {
      "fn": "ERC20.approve",
      "offset": [
        2534,
        2570
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3024": {
      "op": "POP"
    },
    "3025": {
      "fn": "ERC20.approve",
      "offset": [
        2587,
        2591
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 17,
      "value": "0x1"
    },
    "3027": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3028": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3029": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3030": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3031": {
      "fn": "ERC20.approve",
      "offset": [
        2453,
        2598
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3032": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2453,
        2598
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3033": {
      "offset": [
        1223,
        1270
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3034": {
      "offset": [
        1223,
        1270
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "3036": {
      "offset": [
        1223,
        1270
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3038": {
      "offset": [
        1223,
        1270
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3039": {
      "offset": [
        1223,
        1270
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3041": {
      "offset": [
        1223,
        1270
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3042": {
      "offset": [
        1223,
        1270
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3043": {
      "offset": [
        1223,
        1270
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3044": {
      "offset": [
        1223,
        1270
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3046": {
      "offset": [
        1223,
        1270
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3047": {
      "offset": [
        1223,
        1270
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3048": {
      "offset": [
        1223,
        1270
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3049": {
      "offset": [
        1223,
        1270
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3050": {
      "jump": "o",
      "offset": [
        1223,
        1270
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3051": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1514,
        1603
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3052": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1584,
        1596
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 18,
      "value": "0x2"
    },
    "3054": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1584,
        1596
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3055": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1514,
        1603
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3056": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        1514,
        1603
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3057": {
      "offset": [
        1276,
        1326
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3058": {
      "offset": [
        1276,
        1326
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "3060": {
      "offset": [
        1276,
        1326
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3062": {
      "offset": [
        1276,
        1326
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3063": {
      "offset": [
        1276,
        1326
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3065": {
      "offset": [
        1276,
        1326
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3066": {
      "offset": [
        1276,
        1326
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3067": {
      "offset": [
        1276,
        1326
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3068": {
      "offset": [
        1276,
        1326
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3070": {
      "offset": [
        1276,
        1326
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3071": {
      "offset": [
        1276,
        1326
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3072": {
      "offset": [
        1276,
        1326
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3073": {
      "offset": [
        1276,
        1326
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3074": {
      "jump": "o",
      "offset": [
        1276,
        1326
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3075": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3076": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5570,
        5574
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3078": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5590,
        5626
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 19,
      "value": "0xC10"
    },
    "3081": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5600,
        5606
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "3082": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5608,
        5617
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "3083": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5619,
        5625
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "3084": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5590,
        5599
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D7A"
    },
    "3087": {
      "fn": "IsinaToken.transferFrom",
      "jump": "i",
      "offset": [
        5590,
        5626
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3088": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5590,
        5626
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3089": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5636,
        5753
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 20,
      "value": "0xC34"
    },
    "3092": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5658,
        5664
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "3093": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5678,
        5688
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "3094": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5743
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC2F"
    },
    "3097": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5736,
        5742
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "3098": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5731
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC23"
    },
    "3101": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5712,
        5718
      ],
      "op": "DUP10",
      "path": "contracts/IsinaToken.sol"
    },
    "3102": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5720,
        5730
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "3103": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5711
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2928"
    },
    "3106": {
      "fn": "IsinaToken.transferFrom",
      "jump": "i",
      "offset": [
        5702,
        5731
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3107": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5731
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3108": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5735
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3109": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5743
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "3114": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5735
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "3117": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5743
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3118": {
      "fn": "IsinaToken.transferFrom",
      "jump": "i",
      "offset": [
        5702,
        5743
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3119": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5702,
        5743
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3120": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5636,
        5644
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2C88"
    },
    "3123": {
      "fn": "IsinaToken.transferFrom",
      "jump": "i",
      "offset": [
        5636,
        5753
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3124": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5636,
        5753
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3125": {
      "op": "POP"
    },
    "3126": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5770,
        5774
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 21,
      "value": "0x1"
    },
    "3128": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "3129": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3130": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "3131": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "3132": {
      "fn": "IsinaToken.transferFrom",
      "offset": [
        5435,
        5781
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "3133": {
      "fn": "IsinaToken.transferFrom",
      "jump": "o",
      "offset": [
        5435,
        5781
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3134": {
      "offset": [
        1136,
        1160
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3135": {
      "offset": [
        1136,
        1160
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE"
    },
    "3137": {
      "offset": [
        1136,
        1160
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "op": "SUB"
    },
    "3146": {
      "offset": [
        1136,
        1160
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3147": {
      "offset": [
        1136,
        1160
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3148": {
      "jump": "o",
      "offset": [
        1136,
        1160
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3149": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3058,
        3849
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3150": {
      "offset": [
        727,
        728
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1"
    },
    "3152": {
      "offset": [
        1823,
        1838
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3153": {
      "offset": [
        1823,
        1853
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "3154": {
      "offset": [
        1823,
        1853
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "3155": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC90"
    },
    "3158": {
      "offset": [
        1802,
        1923
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "3159": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3161": {
      "offset": [
        1802,
        1923
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3171": {
      "op": "MUL"
    },
    "3172": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3173": {
      "offset": [
        1802,
        1923
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3174": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "3176": {
      "offset": [
        1802,
        1923
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3177": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3178": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3179": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3181": {
      "offset": [
        1802,
        1923
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3182": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3183": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3184": {
      "offset": [
        1802,
        1923
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "3185": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3186": {
      "offset": [
        1802,
        1923
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3187": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2C"
    },
    "3189": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3190": {
      "offset": [
        1802,
        1923
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3191": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3193": {
      "offset": [
        1802,
        1923
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3194": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3195": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3395"
    },
    "3198": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2C"
    },
    "3200": {
      "offset": [
        1802,
        1923
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3201": {
      "offset": [
        1802,
        1923
      ],
      "op": "CODECOPY",
      "path": "contracts/IsinaToken.sol"
    },
    "3202": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3204": {
      "offset": [
        1802,
        1923
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3205": {
      "offset": [
        1802,
        1923
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3206": {
      "offset": [
        1802,
        1923
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "3207": {
      "offset": [
        1802,
        1923
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "3208": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3210": {
      "offset": [
        1802,
        1923
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3211": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3212": {
      "offset": [
        1802,
        1923
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3213": {
      "offset": [
        1802,
        1923
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "3214": {
      "offset": [
        1802,
        1923
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3215": {
      "offset": [
        1802,
        1923
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "3216": {
      "offset": [
        1802,
        1923
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3217": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3151,
        3161
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol",
      "statement": 22
    },
    "3218": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3220": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3221": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3222": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3223": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3150
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x15"
    },
    "3225": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3227": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3228": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3230": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3231": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3232": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3233": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFF"
    },
    "3235": {
      "branch": 232,
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3139,
        3162
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3236": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xCF7"
    },
    "3239": {
      "branch": 232,
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "3240": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3242": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3243": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3253": {
      "op": "MUL"
    },
    "3254": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3255": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3256": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3258": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "3260": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3261": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3262": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3263": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "3265": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "3267": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3268": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3269": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3270": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH32",
      "path": "contracts/IsinaToken.sol",
      "value": "0x546F6B656E73206D75737420626520756E6C6F636B6564000000000000000000"
    },
    "3303": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "3305": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3306": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3307": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3308": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3309": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3310": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3311": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3312": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3313": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "3314": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "3316": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3317": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3318": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "3319": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3118,
        3211
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3320": {
      "offset": [
        851,
        861
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x692CDA80"
    },
    "3325": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3242,
        3257
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol",
      "statement": 23
    },
    "3326": {
      "branch": 233,
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3242,
        3274
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "3327": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD3C"
    },
    "3330": {
      "branch": 233,
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "3331": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3333": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3338": {
      "op": "SHL"
    },
    "3339": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3343": {
      "op": "MUL"
    },
    "3344": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3345": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3346": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "3348": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3349": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3350": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3351": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3353": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3354": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3355": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3356": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "3357": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3358": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3359": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "3361": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3362": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3363": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3365": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3366": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3367": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x344A"
    },
    "3370": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "3372": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3373": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "CODECOPY",
      "path": "contracts/IsinaToken.sol"
    },
    "3374": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3376": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3377": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3378": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "3379": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "3380": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3382": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3383": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3384": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3385": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "3386": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3387": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "3388": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3221,
        3345
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3389": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3367,
        3377
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol",
      "statement": 24
    },
    "3390": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3381,
        3386
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3392": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3378
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3393": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3378
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3394": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3378
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3395": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3366
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x15"
    },
    "3397": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3378
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3399": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3378
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3400": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3378
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3402": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3378
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3403": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3378
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3404": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3386
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3405": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3386
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3408": {
      "op": "NOT"
    },
    "3409": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3386
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3410": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3386
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3411": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3355,
        3386
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3412": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3579
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 25,
      "value": "0xD9C"
    },
    "3415": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3579
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3416": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3569
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD80"
    },
    "3419": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3569
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3420": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3517,
        3555
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD64"
    },
    "3423": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3517,
        3555
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3424": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3517,
        3543
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1656"
    },
    "3427": {
      "fn": "IsinaToken.unlock_seed",
      "jump": "i",
      "offset": [
        3517,
        3555
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3428": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3517,
        3555
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3429": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3484,
        3494
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "3430": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3432": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3433": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3434": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3435": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3483
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "3437": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3439": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3440": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3442": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3443": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3444": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3445": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3495
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3446": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3569
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "3451": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3499
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "3454": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3569
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3455": {
      "fn": "IsinaToken.unlock_seed",
      "jump": "i",
      "offset": [
        3471,
        3569
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3456": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3471,
        3569
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3457": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3442,
        3452
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "3458": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3460": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3461": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3462": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3463": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3441
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "3465": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3467": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3468": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3470": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3471": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3472": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3473": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3453
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3474": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3579
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "3479": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3457
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3041"
    },
    "3482": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3579
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3483": {
      "fn": "IsinaToken.unlock_seed",
      "jump": "i",
      "offset": [
        3426,
        3579
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3484": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3426,
        3579
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3485": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3412,
        3422
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "3486": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3488": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3489": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3490": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3491": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3411
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "3493": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3495": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3496": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3497": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3498": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3500": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3501": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "3502": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3423
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3503": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3579
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaToken.sol"
    },
    "3504": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3579
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3505": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3579
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaToken.sol"
    },
    "3506": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3396,
        3579
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3507": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3601
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 26,
      "value": "0x11"
    },
    "3509": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3613
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3510": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3613
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3511": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3613
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3512": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3613
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3513": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3613
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3514": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3617
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3515": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3617
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3516": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3617
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3517": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3589,
        3617
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3518": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3657,
        3806
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 27,
      "value": "0xDEA"
    },
    "3521": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3657,
        3806
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3522": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3796
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD80"
    },
    "3525": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3796
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3526": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3746,
        3782
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xDCE"
    },
    "3529": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3746,
        3782
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3530": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3746,
        3770
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1FA0"
    },
    "3533": {
      "fn": "IsinaToken.unlock_seed",
      "jump": "i",
      "offset": [
        3746,
        3782
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3534": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3746,
        3782
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3535": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3713,
        3723
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "3536": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3538": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3539": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3540": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3541": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3712
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13"
    },
    "3543": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3545": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3546": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3548": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3549": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3550": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3551": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3724
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3552": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3796
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "3557": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3728
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "3560": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3702,
        3796
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3561": {
      "fn": "IsinaToken.unlock_seed",
      "jump": "i",
      "offset": [
        3702,
        3796
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3562": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3657,
        3806
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3563": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3643,
        3653
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "3564": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3566": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3567": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3568": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3569": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3642
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "3571": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3573": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3574": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3575": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3576": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3578": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3579": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "3580": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3654
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3581": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3806
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "3582": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3806
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3583": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3806
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "3584": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3627,
        3806
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3585": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3816,
        3826
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 28,
      "value": "0x13"
    },
    "3587": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3816,
        3838
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3588": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3816,
        3838
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3589": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3816,
        3838
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3590": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3816,
        3838
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3591": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3816,
        3838
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3592": {
      "fn": "IsinaToken.unlock_seed",
      "offset": [
        3816,
        3842
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3593": {
      "fn": "IsinaToken.unlock_seed",
      "jump": "o",
      "offset": [
        3058,
        3849
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3594": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3595": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1543,
        1552
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "statement": 29,
      "value": "0x5"
    },
    "3597": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1543,
        1552
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3598": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1543,
        1552
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xFF"
    },
    "3600": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1543,
        1552
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3601": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        1478,
        1559
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3602": {
      "fn": "ERC20Detailed.decimals",
      "jump": "o",
      "offset": [
        1478,
        1559
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "3603": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4679,
        4810
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3604": {
      "offset": [
        1670,
        1683
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "3606": {
      "offset": [
        1670,
        1683
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3613": {
      "op": "SHL"
    },
    "3614": {
      "op": "SUB"
    },
    "3615": {
      "offset": [
        1670,
        1683
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3616": {
      "offset": [
        1656,
        1666
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "3617": {
      "offset": [
        1656,
        1683
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "3618": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE63"
    },
    "3621": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "3622": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3624": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3625": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3630": {
      "op": "SHL"
    },
    "3631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3635": {
      "op": "MUL"
    },
    "3636": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3637": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3638": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3640": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "3642": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3643": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3644": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3645": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "3647": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "3649": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3650": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3651": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3654": {
      "op": "DUP1"
    },
    "3655": {
      "op": "MLOAD"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3658": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "3661": {
      "op": "DUP4"
    },
    "3662": {
      "op": "CODECOPY"
    },
    "3663": {
      "op": "DUP2"
    },
    "3664": {
      "op": "MLOAD"
    },
    "3665": {
      "op": "SWAP2"
    },
    "3666": {
      "op": "MSTORE"
    },
    "3667": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "3669": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "3670": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3671": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3672": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3673": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3674": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3675": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3676": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3677": {
      "offset": [
        1635,
        1739
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "3678": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "3680": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "3681": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3682": {
      "offset": [
        1635,
        1739
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "3683": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3684": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4751,
        4764
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 30,
      "value": "0xC"
    },
    "3686": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4751,
        4764
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3687": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4766,
        4777
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9"
    },
    "3689": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4766,
        4777
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3690": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4745,
        4778
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE7C"
    },
    "3693": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4745,
        4778
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "SUB"
    },
    "3702": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4751,
        4764
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3703": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4751,
        4764
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3704": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4745,
        4750
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x309E"
    },
    "3707": {
      "fn": "IsinaToken.burn_seed_tokens",
      "jump": "i",
      "offset": [
        4745,
        4778
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3708": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4745,
        4778
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3709": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4802,
        4803
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 31,
      "value": "0x0"
    },
    "3711": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4788,
        4799
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9"
    },
    "3713": {
      "fn": "IsinaToken.burn_seed_tokens",
      "offset": [
        4788,
        4803
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3714": {
      "fn": "IsinaToken.burn_seed_tokens",
      "jump": "o",
      "offset": [
        4679,
        4810
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3715": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3702,
        3905
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3807,
        3817
      ],
      "op": "CALLER",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 32
    },
    "3717": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3782,
        3786
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "3719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3720": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3721": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3722": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3839
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x1"
    },
    "3724": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "3726": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3727": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3728": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3729": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "3731": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3732": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3733": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3851
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3740": {
      "op": "SHL"
    },
    "3741": {
      "op": "SUB"
    },
    "3742": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "DUP8",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3743": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3744": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3745": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3746": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3747": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3748": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3749": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3750": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3751": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3860
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3752": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3782,
        3786
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3753": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3782,
        3786
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3754": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3798,
        3877
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xBCF"
    },
    "3757": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3798,
        3877
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3758": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3819,
        3826
      ],
      "op": "DUP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3759": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3819,
        3826
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3760": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3876
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xC2F"
    },
    "3763": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3876
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3764": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3865,
        3875
      ],
      "op": "DUP7",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3765": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3876
      ],
      "op": "PUSH4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xFFFFFFFF"
    },
    "3770": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3864
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x3041"
    },
    "3773": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3828,
        3876
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3774": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3828,
        3876
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "3775": {
      "offset": [
        689,
        728
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3776": {
      "offset": [
        727,
        728
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1"
    },
    "3778": {
      "offset": [
        689,
        728
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3779": {
      "jump": "o",
      "offset": [
        689,
        728
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3780": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3781": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16847,
        16854
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3783": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16892,
        16902
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5DE30280"
    },
    "3788": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16874,
        16889
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3789": {
      "branch": 234,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16874,
        16902
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "3790": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16870,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "3791": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16870,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xEDA"
    },
    "3794": {
      "branch": 234,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16870,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16939,
        16940
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 33,
      "value": "0x0"
    },
    "3798": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16932,
        16940
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "3801": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16932,
        16940
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3802": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16870,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3803": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16979,
        16989
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5E34BF80"
    },
    "3808": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16961,
        16976
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3809": {
      "branch": 235,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16961,
        16989
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "3810": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16957,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "3811": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16957,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF1E"
    },
    "3814": {
      "branch": 235,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16957,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "op": "SUB"
    },
    "3823": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 34
    },
    "3824": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3825": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3827": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3828": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3829": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3830": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17041
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "3832": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3834": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3835": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3837": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3838": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3839": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17049
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3840": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17066
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "3843": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17066
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3844": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17062,
        17065
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "3846": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17062,
        17065
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3847": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17057
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "3850": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17057
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3851": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17054,
        17056
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF"
    },
    "3853": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17057
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "3858": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17053
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "3861": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17057
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3862": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        17026,
        17057
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3863": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17026,
        17066
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3864": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17019,
        17066
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3865": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17019,
        17066
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "3866": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17019,
        17066
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "3869": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17019,
        17066
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3870": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16957,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3871": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17105,
        17115
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5EAB6680"
    },
    "3876": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17087,
        17102
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3877": {
      "branch": 236,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17087,
        17115
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "3878": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17083,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "3879": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17083,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF5B"
    },
    "3882": {
      "branch": 236,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17083,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "SUB"
    },
    "3891": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 35
    },
    "3892": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3893": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3895": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3896": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3897": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3898": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17167
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "3900": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3902": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3903": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3905": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3906": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3907": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17175
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3908": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17192
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "3911": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17192
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3912": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17188,
        17191
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "3914": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17188,
        17191
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3915": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17183
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "3918": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17183
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3919": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17180,
        17182
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "3921": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17183
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "3926": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17179
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "3929": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17152,
        17183
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3930": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        17152,
        17183
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3931": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17083,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3932": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17231,
        17241
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5FC58780"
    },
    "3937": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17213,
        17228
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3938": {
      "branch": 237,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17213,
        17241
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "3939": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17209,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "3940": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17209,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF98"
    },
    "3943": {
      "branch": 237,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17209,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3950": {
      "op": "SHL"
    },
    "3951": {
      "op": "SUB"
    },
    "3952": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 36
    },
    "3953": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3954": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "3956": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3957": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "3958": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3959": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17293
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "3961": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "3963": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "3964": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "3966": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3967": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "3968": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17301
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "3969": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17318
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "3972": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17318
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3973": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17314,
        17317
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "3975": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17314,
        17317
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3976": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17309
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "3979": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17309
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "3980": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17306,
        17308
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x19"
    },
    "3982": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17309
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "3987": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17305
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "3990": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17278,
        17309
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "3991": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        17278,
        17309
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3992": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17209,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "3993": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17357,
        17367
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x60650D00"
    },
    "3998": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17339,
        17354
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "3999": {
      "branch": 238,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17339,
        17367
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4000": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17335,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4001": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17335,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFD5"
    },
    "4004": {
      "branch": 238,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17335,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4011": {
      "op": "SHL"
    },
    "4012": {
      "op": "SUB"
    },
    "4013": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 37
    },
    "4014": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4015": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4017": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4018": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4019": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4020": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17419
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4022": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4024": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4025": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4027": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4028": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4029": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17427
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4030": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17444
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4033": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17444
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4034": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17440,
        17443
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4036": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17440,
        17443
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4037": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17435
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4040": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17435
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4041": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17432,
        17434
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "4043": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17435
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4048": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17431
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4051": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17404,
        17435
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4052": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        17404,
        17435
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4053": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17335,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4054": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17483,
        17493
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x608C9A00"
    },
    "4059": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17465,
        17480
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4060": {
      "branch": 239,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17465,
        17493
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4061": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17461,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4062": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17461,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1012"
    },
    "4065": {
      "branch": 239,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17461,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4072": {
      "op": "SHL"
    },
    "4073": {
      "op": "SUB"
    },
    "4074": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 38
    },
    "4075": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4076": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4078": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4079": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4080": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4081": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17545
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4083": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4085": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4086": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4088": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4089": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4090": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17553
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4091": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17570
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4094": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17570
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4095": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17566,
        17569
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4097": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17566,
        17569
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4098": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17561
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4101": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17561
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4102": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17558,
        17560
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x23"
    },
    "4104": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17561
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4109": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17557
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4112": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17530,
        17561
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4113": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        17530,
        17561
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4114": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17461,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4115": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17609,
        17619
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6105E400"
    },
    "4120": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17591,
        17606
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4121": {
      "branch": 240,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17591,
        17619
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4122": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17587,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4123": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17587,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x104F"
    },
    "4126": {
      "branch": 240,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17587,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4133": {
      "op": "SHL"
    },
    "4134": {
      "op": "SUB"
    },
    "4135": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 39
    },
    "4136": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4137": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4139": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4140": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4141": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4142": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17671
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4144": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4146": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4147": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4149": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4150": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4151": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17679
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4152": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17696
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4155": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17696
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4156": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17692,
        17695
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4158": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17692,
        17695
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4159": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17687
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4162": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17687
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4163": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17684,
        17686
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28"
    },
    "4165": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17687
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4170": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17683
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4173": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17656,
        17687
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4174": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        17656,
        17687
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4175": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17587,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4176": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17735,
        17745
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x61A6BB00"
    },
    "4181": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17717,
        17732
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4182": {
      "branch": 241,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17717,
        17745
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4183": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17713,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4184": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17713,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x108C"
    },
    "4187": {
      "branch": 241,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17713,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4194": {
      "op": "SHL"
    },
    "4195": {
      "op": "SUB"
    },
    "4196": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 40
    },
    "4197": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4198": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4200": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4201": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4202": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4203": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17797
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4205": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4207": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4208": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4210": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4211": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4212": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17805
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4213": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17822
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4216": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17822
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4217": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17818,
        17821
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4219": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17818,
        17821
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4220": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17813
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4223": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17813
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4224": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17810,
        17812
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "4226": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17813
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4231": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17809
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4234": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17782,
        17813
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4235": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        17782,
        17813
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4236": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17713,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4237": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17861,
        17871
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x621D6200"
    },
    "4242": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17843,
        17858
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4243": {
      "branch": 242,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17843,
        17871
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4244": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17839,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4245": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17839,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x10C9"
    },
    "4248": {
      "branch": 242,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17839,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4255": {
      "op": "SHL"
    },
    "4256": {
      "op": "SUB"
    },
    "4257": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 41
    },
    "4258": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4259": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4261": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4262": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4263": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4264": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4266": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4268": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4269": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4271": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4272": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4273": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17931
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4274": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17948
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4277": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17948
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4278": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17944,
        17947
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4280": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17944,
        17947
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4281": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17939
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4284": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17939
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4285": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17936,
        17938
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x32"
    },
    "4287": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17939
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4292": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17935
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4295": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17908,
        17939
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4296": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        17908,
        17939
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4297": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17839,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4298": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17987,
        17997
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x62BE3900"
    },
    "4303": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17969,
        17984
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4304": {
      "branch": 243,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17969,
        17997
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4305": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17965,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4306": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17965,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1106"
    },
    "4309": {
      "branch": 243,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17965,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4316": {
      "op": "SHL"
    },
    "4317": {
      "op": "SUB"
    },
    "4318": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 42
    },
    "4319": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4320": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4322": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4323": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4324": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4325": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18049
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4327": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4329": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4330": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4332": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4333": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4334": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18057
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4335": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18074
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4338": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18074
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4339": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18070,
        18073
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4341": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18070,
        18073
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4342": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18065
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4345": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18065
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4346": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18062,
        18064
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x37"
    },
    "4348": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18065
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4353": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18061
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4356": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18034,
        18065
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4357": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        18034,
        18065
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4358": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        17965,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4359": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18113,
        18123
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x63378300"
    },
    "4364": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18095,
        18110
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4365": {
      "branch": 244,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18095,
        18123
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4366": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18091,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4367": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18091,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1143"
    },
    "4370": {
      "branch": 244,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18091,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4377": {
      "op": "SHL"
    },
    "4378": {
      "op": "SUB"
    },
    "4379": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 43
    },
    "4380": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4381": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4383": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4384": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4385": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4386": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18175
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4388": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4390": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4391": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4393": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4394": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4395": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18183
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4396": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18200
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4399": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18200
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4400": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18196,
        18199
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4402": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18196,
        18199
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4403": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18191
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4406": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18191
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4407": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18188,
        18190
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3C"
    },
    "4409": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18191
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4414": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18187
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4417": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18160,
        18191
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4418": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        18160,
        18191
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4419": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18091,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4420": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18239,
        18249
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6387EE80"
    },
    "4425": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18221,
        18236
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4426": {
      "branch": 245,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18221,
        18249
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4427": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18217,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4428": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18217,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1180"
    },
    "4431": {
      "branch": 245,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18217,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4438": {
      "op": "SHL"
    },
    "4439": {
      "op": "SUB"
    },
    "4440": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 44
    },
    "4441": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4442": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4444": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4445": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4446": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4447": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18301
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4449": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4451": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4452": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4454": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4455": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4456": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18309
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4457": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18326
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4460": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18326
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4461": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18322,
        18325
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4463": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18322,
        18325
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4464": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18317
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4467": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18317
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4468": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18314,
        18316
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41"
    },
    "4470": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18317
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4475": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18313
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4478": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18286,
        18317
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4479": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        18286,
        18317
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4480": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18217,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4481": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18365,
        18375
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64277400"
    },
    "4486": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18347,
        18362
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4487": {
      "branch": 246,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18347,
        18375
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4488": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18343,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4489": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18343,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11BD"
    },
    "4492": {
      "branch": 246,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18343,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4499": {
      "op": "SHL"
    },
    "4500": {
      "op": "SUB"
    },
    "4501": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 45
    },
    "4502": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4503": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4505": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4506": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4507": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4508": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18427
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4510": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4512": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4513": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4515": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4516": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4517": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18435
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4518": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18452
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4521": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18452
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4522": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18448,
        18451
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4524": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18448,
        18451
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4525": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18443
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4528": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18443
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4529": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18440,
        18442
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x46"
    },
    "4531": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18443
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4536": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18439
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4539": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18412,
        18443
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4540": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        18412,
        18443
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4541": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18343,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4542": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18491,
        18501
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x649F6C80"
    },
    "4547": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18473,
        18488
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4548": {
      "branch": 247,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18473,
        18501
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4549": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18469,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4550": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18469,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11FA"
    },
    "4553": {
      "branch": 247,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18469,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4560": {
      "op": "SHL"
    },
    "4561": {
      "op": "SUB"
    },
    "4562": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 46
    },
    "4563": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4564": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4566": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4567": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4568": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4569": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18553
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4571": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4573": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4574": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4576": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4577": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4578": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18561
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4579": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18578
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4582": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18578
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4583": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18574,
        18577
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4585": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18574,
        18577
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4586": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18569
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4589": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18569
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4590": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18566,
        18568
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4B"
    },
    "4592": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18569
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4597": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18565
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4600": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18538,
        18569
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4601": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        18538,
        18569
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4602": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18469,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4603": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18617,
        18627
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6518B680"
    },
    "4608": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18599,
        18614
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4609": {
      "branch": 248,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18599,
        18627
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4610": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18595,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4611": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18595,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1237"
    },
    "4614": {
      "branch": 248,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18595,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4621": {
      "op": "SHL"
    },
    "4622": {
      "op": "SUB"
    },
    "4623": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 47
    },
    "4624": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4625": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4627": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4628": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4629": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4630": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18679
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4632": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4634": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4635": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4637": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4638": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4639": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18687
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4640": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18704
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4643": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18704
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4644": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18700,
        18703
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4646": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18700,
        18703
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4647": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18695
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4650": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18695
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4651": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18692,
        18694
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x50"
    },
    "4653": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18695
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4658": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18691
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4661": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18664,
        18695
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4662": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        18664,
        18695
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4663": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18595,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4664": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18743,
        18753
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x65692200"
    },
    "4669": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18725,
        18740
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4670": {
      "branch": 249,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18725,
        18753
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4671": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18721,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4672": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18721,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1274"
    },
    "4675": {
      "branch": 249,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18721,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "op": "SUB"
    },
    "4684": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 48
    },
    "4685": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4686": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4688": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4689": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4690": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4691": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18805
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4693": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4695": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4696": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4698": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4699": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4700": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18813
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4701": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18830
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4704": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18830
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4705": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18826,
        18829
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4707": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18826,
        18829
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4708": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18821
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4711": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18821
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4712": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18818,
        18820
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x55"
    },
    "4714": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18821
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4719": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18817
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4722": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18790,
        18821
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4723": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        18790,
        18821
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4724": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18721,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4725": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18869,
        18879
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x65E11A80"
    },
    "4730": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18851,
        18866
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4731": {
      "branch": 250,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18851,
        18879
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4732": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18847,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4733": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18847,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12B1"
    },
    "4736": {
      "branch": 250,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18847,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4743": {
      "op": "SHL"
    },
    "4744": {
      "op": "SUB"
    },
    "4745": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 49
    },
    "4746": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4747": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4749": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4750": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4751": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4752": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18931
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4754": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4756": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4757": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4759": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4760": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4761": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18939
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4762": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18956
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4765": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18956
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4766": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18952,
        18955
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4768": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18952,
        18955
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4769": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18947
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4772": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18947
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4773": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18944,
        18946
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5A"
    },
    "4775": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18947
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4780": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18943
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4783": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18916,
        18947
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4784": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        18916,
        18947
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4785": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18847,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4786": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18995,
        19005
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6681F180"
    },
    "4791": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18977,
        18992
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4792": {
      "branch": 251,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18977,
        19005
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "4793": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18973,
        19154
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "4794": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18973,
        19154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12EE"
    },
    "4797": {
      "branch": 251,
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18973,
        19154
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "4798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4804": {
      "op": "SHL"
    },
    "4805": {
      "op": "SUB"
    },
    "4806": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 50
    },
    "4807": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4808": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4810": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4811": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4812": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4813": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19057
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4815": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4817": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4818": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4820": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4821": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4822": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19065
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4823": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19082
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "4826": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19082
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4827": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19078,
        19081
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "4829": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19078,
        19081
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4830": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19073
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "4833": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19073
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4834": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19070,
        19072
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5F"
    },
    "4836": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19073
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "4841": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19069
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "4844": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19042,
        19073
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4845": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "i",
      "offset": [
        19042,
        19073
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4846": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18973,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4847": {
      "op": "POP"
    },
    "4848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4854": {
      "op": "SHL"
    },
    "4855": {
      "op": "SUB"
    },
    "4856": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol",
      "statement": 51
    },
    "4857": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "4858": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4860": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4861": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4862": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4863": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19135
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "4865": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4867": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4868": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4870": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4871": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4872": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        19120,
        19143
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4873": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        18973,
        19154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4874": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4875": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4876": {
      "fn": "IsinaToken.get_available_private_balance",
      "offset": [
        16733,
        19160
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "4877": {
      "fn": "IsinaToken.get_available_private_balance",
      "jump": "o",
      "offset": [
        16733,
        19160
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4878": {
      "offset": [
        734,
        790
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4879": {
      "offset": [
        780,
        790
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x692CDA80"
    },
    "4884": {
      "offset": [
        734,
        790
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4885": {
      "jump": "o",
      "offset": [
        734,
        790
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4886": {
      "offset": [
        1332,
        1377
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4887": {
      "offset": [
        1332,
        1377
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13"
    },
    "4889": {
      "offset": [
        1332,
        1377
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "4891": {
      "offset": [
        1332,
        1377
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4892": {
      "offset": [
        1332,
        1377
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "4894": {
      "offset": [
        1332,
        1377
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4895": {
      "offset": [
        1332,
        1377
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4896": {
      "offset": [
        1332,
        1377
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "4897": {
      "offset": [
        1332,
        1377
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "4899": {
      "offset": [
        1332,
        1377
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "4900": {
      "offset": [
        1332,
        1377
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "4901": {
      "offset": [
        1332,
        1377
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4902": {
      "offset": [
        1332,
        1377
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4903": {
      "jump": "o",
      "offset": [
        1332,
        1377
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4904": {
      "offset": [
        937,
        966
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "4905": {
      "offset": [
        937,
        966
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "4907": {
      "offset": [
        937,
        966
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "4908": {
      "offset": [
        937,
        966
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "4909": {
      "jump": "o",
      "offset": [
        937,
        966
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "4910": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1661,
        1769
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4917": {
      "op": "SHL"
    },
    "4918": {
      "op": "SUB"
    },
    "4919": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 52
    },
    "4920": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1718,
        1725
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "4922": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4923": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4924": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4925": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "4927": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4928": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4929": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4930": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "4932": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4933": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4934": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4935": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1744,
        1762
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4936": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        1661,
        1769
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "4937": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1600,
        1737
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4938": {
      "offset": [
        1019,
        1028
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x1351"
    },
    "4941": {
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x23EF"
    },
    "4944": {
      "jump": "i",
      "offset": [
        1019,
        1028
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4945": {
      "offset": [
        1019,
        1028
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4946": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x1393"
    },
    "4949": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4950": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "4952": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4953": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4958": {
      "op": "SHL"
    },
    "4959": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4963": {
      "op": "MUL"
    },
    "4964": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4965": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4966": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "4968": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "4970": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4971": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4972": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4973": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4974": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4975": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x24"
    },
    "4977": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4978": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4979": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4982": {
      "op": "DUP1"
    },
    "4983": {
      "op": "MLOAD"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4986": {
      "op": "PUSH2",
      "value": "0x342A"
    },
    "4989": {
      "op": "DUP4"
    },
    "4990": {
      "op": "CODECOPY"
    },
    "4991": {
      "op": "DUP2"
    },
    "4992": {
      "op": "MLOAD"
    },
    "4993": {
      "op": "SWAP2"
    },
    "4994": {
      "op": "MSTORE"
    },
    "4995": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x44"
    },
    "4997": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4998": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "4999": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5000": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5001": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5002": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5003": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5004": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5005": {
      "offset": [
        1011,
        1065
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5006": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x64"
    },
    "5008": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5009": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5010": {
      "offset": [
        1011,
        1065
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5011": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5012": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 53,
      "value": "0x5"
    },
    "5014": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5015": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "5017": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5018": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1698,
        1699
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x0"
    },
    "5020": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1698,
        1699
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5021": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x100"
    },
    "5024": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5025": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5032": {
      "op": "SHL"
    },
    "5033": {
      "op": "SUB"
    },
    "5034": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5035": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1682,
        1688
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5036": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5069": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5070": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1698,
        1699
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5071": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1698,
        1699
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5072": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1661,
        1701
      ],
      "op": "LOG3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5073": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1717
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 54,
      "value": "0x5"
    },
    "5075": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5076": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5077": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5082": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "5084": {
      "op": "SHL"
    },
    "5085": {
      "op": "SUB"
    },
    "5086": {
      "op": "NOT"
    },
    "5087": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5088": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5089": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1711,
        1730
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5090": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1600,
        1737
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "5091": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21237,
        23420
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5098": {
      "op": "SHL"
    },
    "5099": {
      "op": "SUB"
    },
    "5100": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol",
      "statement": 55
    },
    "5101": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5102": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21349,
        21356
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "5104": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5105": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5106": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5107": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21411
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "5109": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "5111": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5112": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "5114": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5115": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "5116": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21419
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "5117": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21349,
        21356
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5118": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21349,
        21356
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5119": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21427
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x140F"
    },
    "5122": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21427
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5123": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21424,
        21426
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "5125": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21427
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5130": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21423
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2C1B"
    },
    "5133": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21427
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5134": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        21398,
        21427
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5135": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21398,
        21427
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5136": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21372,
        21427
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5137": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21372,
        21427
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "5138": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21459,
        21469
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5DE30280"
    },
    "5143": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21441,
        21456
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5144": {
      "branch": 252,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21441,
        21469
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5145": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21437,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5146": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21437,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1427"
    },
    "5149": {
      "branch": 252,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21437,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5150": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21506,
        21507
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 56,
      "value": "0x0"
    },
    "5152": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21499,
        21507
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5153": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21499,
        21507
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "5154": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21499,
        21507
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "5155": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21499,
        21507
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "5158": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21499,
        21507
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5159": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21437,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5160": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21546,
        21556
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5E34BF80"
    },
    "5165": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21528,
        21543
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5166": {
      "branch": 253,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21528,
        21556
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5167": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21524,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5168": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21524,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x143A"
    },
    "5171": {
      "branch": 253,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21524,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5172": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21593,
        21608
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol",
      "statement": 57
    },
    "5173": {
      "op": "POP"
    },
    "5174": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21586,
        21608
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "5177": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21586,
        21608
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5178": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21524,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5179": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21647,
        21657
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5EAB6680"
    },
    "5184": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21629,
        21644
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5185": {
      "branch": 254,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21629,
        21657
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5186": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21625,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5187": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21625,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x145F"
    },
    "5190": {
      "branch": 254,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21625,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5191": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21694,
        21716
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 58,
      "value": "0x1457"
    },
    "5194": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21694,
        21709
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5195": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21714,
        21715
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2"
    },
    "5197": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21694,
        21716
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5202": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21694,
        21713
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5205": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21694,
        21716
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5206": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        21694,
        21716
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5207": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21694,
        21716
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5208": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21687,
        21716
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5209": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21687,
        21716
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "5210": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21687,
        21716
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "5211": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21687,
        21716
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "5214": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21687,
        21716
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5215": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21625,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5216": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21755,
        21765
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5FC58780"
    },
    "5221": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21737,
        21752
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5222": {
      "branch": 255,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21737,
        21765
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5223": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21733,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5224": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21733,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x147C"
    },
    "5227": {
      "branch": 255,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21733,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5228": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21802,
        21824
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 59,
      "value": "0x1457"
    },
    "5231": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21802,
        21817
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5232": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21822,
        21823
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3"
    },
    "5234": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21802,
        21824
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5239": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21802,
        21821
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5242": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21802,
        21824
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5243": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        21802,
        21824
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5244": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21733,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5245": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21863,
        21873
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x60650D00"
    },
    "5250": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21845,
        21860
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5251": {
      "branch": 256,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21845,
        21873
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5252": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21841,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5253": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21841,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1499"
    },
    "5256": {
      "branch": 256,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21841,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5257": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21910,
        21932
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 60,
      "value": "0x1457"
    },
    "5260": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21910,
        21925
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5261": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21930,
        21931
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "5263": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21910,
        21932
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5268": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21910,
        21929
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5271": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21910,
        21932
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5272": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        21910,
        21932
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5273": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21841,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5274": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21971,
        21981
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x608C9A00"
    },
    "5279": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21953,
        21968
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5280": {
      "branch": 257,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21953,
        21981
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5281": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21949,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5282": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21949,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14B6"
    },
    "5285": {
      "branch": 257,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21949,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5286": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22018,
        22040
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 61,
      "value": "0x1457"
    },
    "5289": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22018,
        22033
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5290": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22038,
        22039
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5"
    },
    "5292": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22018,
        22040
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5297": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22018,
        22037
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5300": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22018,
        22040
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5301": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22018,
        22040
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5302": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        21949,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5303": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22079,
        22089
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6105E400"
    },
    "5308": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22061,
        22076
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5309": {
      "branch": 258,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22061,
        22089
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5310": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22057,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5311": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22057,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14D3"
    },
    "5314": {
      "branch": 258,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22057,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5315": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22126,
        22148
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 62,
      "value": "0x1457"
    },
    "5318": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22126,
        22141
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5319": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22146,
        22147
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "5321": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22126,
        22148
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5326": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22126,
        22145
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5329": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22126,
        22148
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5330": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22126,
        22148
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5331": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22057,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5332": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22187,
        22197
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x61A6BB00"
    },
    "5337": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22169,
        22184
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5338": {
      "branch": 259,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22169,
        22197
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5339": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22165,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5340": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22165,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14F0"
    },
    "5343": {
      "branch": 259,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22165,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5344": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22234,
        22256
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 63,
      "value": "0x1457"
    },
    "5347": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22234,
        22249
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5348": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22254,
        22255
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "5350": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22234,
        22256
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5355": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22234,
        22253
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5358": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22234,
        22256
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5359": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22234,
        22256
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5360": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22165,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5361": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22295,
        22305
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x621D6200"
    },
    "5366": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22277,
        22292
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5367": {
      "branch": 260,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22277,
        22305
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5368": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22273,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5369": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22273,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x150D"
    },
    "5372": {
      "branch": 260,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22273,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5373": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22342,
        22364
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 64,
      "value": "0x1457"
    },
    "5376": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22342,
        22357
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5377": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22362,
        22363
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "5379": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22342,
        22364
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5384": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22342,
        22361
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5387": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22342,
        22364
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5388": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22342,
        22364
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5389": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22273,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5390": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22403,
        22413
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x62BE3900"
    },
    "5395": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22385,
        22400
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5396": {
      "branch": 261,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22385,
        22413
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5397": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22381,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5398": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22381,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x152A"
    },
    "5401": {
      "branch": 261,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22381,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5402": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22450,
        22472
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 65,
      "value": "0x1457"
    },
    "5405": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22450,
        22465
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5406": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22470,
        22471
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9"
    },
    "5408": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22450,
        22472
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5413": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22450,
        22469
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5416": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22450,
        22472
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5417": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22450,
        22472
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5418": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22381,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5419": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22511,
        22521
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x63378300"
    },
    "5424": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22493,
        22508
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5425": {
      "branch": 262,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22493,
        22521
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5426": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22489,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5427": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22489,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1547"
    },
    "5430": {
      "branch": 262,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22489,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5431": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22558,
        22581
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 66,
      "value": "0x1457"
    },
    "5434": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22558,
        22573
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5435": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22578,
        22580
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "5437": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22558,
        22581
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5442": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22558,
        22577
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5445": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22558,
        22581
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5446": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22558,
        22581
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5447": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22489,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5448": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22620,
        22630
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6387EE80"
    },
    "5453": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22602,
        22617
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5454": {
      "branch": 263,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22602,
        22630
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5455": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22598,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5456": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22598,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1564"
    },
    "5459": {
      "branch": 263,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22598,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5460": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22667,
        22690
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 67,
      "value": "0x1457"
    },
    "5463": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22667,
        22682
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5464": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22687,
        22689
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB"
    },
    "5466": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22667,
        22690
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5471": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22667,
        22686
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5474": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22667,
        22690
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5475": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22667,
        22690
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5476": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22598,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5477": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22729,
        22739
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64277400"
    },
    "5482": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22711,
        22726
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5483": {
      "branch": 264,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22711,
        22739
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5484": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22707,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5485": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22707,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1581"
    },
    "5488": {
      "branch": 264,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22707,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5489": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22776,
        22799
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 68,
      "value": "0x1457"
    },
    "5492": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22776,
        22791
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5493": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22796,
        22798
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "5495": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22776,
        22799
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5500": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22776,
        22795
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5503": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22776,
        22799
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5504": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22776,
        22799
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5505": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22707,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5506": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22838,
        22848
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x649F6C80"
    },
    "5511": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22820,
        22835
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5512": {
      "branch": 265,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22820,
        22848
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5513": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22816,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5514": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22816,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x159E"
    },
    "5517": {
      "branch": 265,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22816,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5518": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22885,
        22908
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 69,
      "value": "0x1457"
    },
    "5521": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22885,
        22900
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5522": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22905,
        22907
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD"
    },
    "5524": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22885,
        22908
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5529": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22885,
        22904
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5532": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22885,
        22908
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5533": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22885,
        22908
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5534": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22816,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5535": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22947,
        22957
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6518B680"
    },
    "5540": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22929,
        22944
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5541": {
      "branch": 266,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22929,
        22957
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5542": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22925,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5543": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22925,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x15BB"
    },
    "5546": {
      "branch": 266,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22925,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5547": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22994,
        23017
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 70,
      "value": "0x1457"
    },
    "5550": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22994,
        23009
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5551": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23014,
        23016
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE"
    },
    "5553": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22994,
        23017
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5558": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22994,
        23013
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5561": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22994,
        23017
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5562": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        22994,
        23017
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5563": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        22925,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5564": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23056,
        23066
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x65692200"
    },
    "5569": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23038,
        23053
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5570": {
      "branch": 267,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23038,
        23066
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5571": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23034,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5572": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23034,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x15D8"
    },
    "5575": {
      "branch": 267,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23034,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5576": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23103,
        23126
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 71,
      "value": "0x1457"
    },
    "5579": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23103,
        23118
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5580": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23123,
        23125
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF"
    },
    "5582": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23103,
        23126
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5587": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23103,
        23122
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5590": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23103,
        23126
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5591": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        23103,
        23126
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5592": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23034,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5593": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23165,
        23175
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x65E11A80"
    },
    "5598": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23147,
        23162
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5599": {
      "branch": 268,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23147,
        23175
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5600": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23143,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5601": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23143,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x15F5"
    },
    "5604": {
      "branch": 268,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23143,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5605": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23212,
        23235
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 72,
      "value": "0x1457"
    },
    "5608": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23212,
        23227
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5609": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23232,
        23234
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x10"
    },
    "5611": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23212,
        23235
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5616": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23212,
        23231
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5619": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23212,
        23235
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5620": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        23212,
        23235
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5621": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23143,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5622": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23274,
        23284
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6681F180"
    },
    "5627": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23256,
        23271
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5628": {
      "branch": 269,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23256,
        23284
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5629": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23252,
        23414
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5630": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23252,
        23414
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1612"
    },
    "5633": {
      "branch": 269,
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23252,
        23414
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5634": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23321,
        23344
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 73,
      "value": "0x1457"
    },
    "5637": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23321,
        23336
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5638": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23341,
        23343
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "5640": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23321,
        23344
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5645": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23321,
        23340
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5648": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23321,
        23344
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5649": {
      "fn": "IsinaToken.get_available_private_bonus",
      "jump": "i",
      "offset": [
        23321,
        23344
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5650": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23252,
        23414
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5651": {
      "op": "POP"
    },
    "5652": {
      "op": "POP"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5659": {
      "op": "SHL"
    },
    "5660": {
      "op": "SUB"
    },
    "5661": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol",
      "statement": 74
    },
    "5662": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5663": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "5665": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5666": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5667": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5668": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23395
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "5670": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "5672": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5673": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "5675": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5676": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "5677": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23382,
        23403
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "5678": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23375,
        23403
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "5681": {
      "fn": "IsinaToken.get_available_private_bonus",
      "offset": [
        23375,
        23403
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5682": {
      "offset": [
        1195,
        1216
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5683": {
      "offset": [
        1195,
        1216
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x10"
    },
    "5685": {
      "offset": [
        1195,
        1216
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5692": {
      "op": "SHL"
    },
    "5693": {
      "op": "SUB"
    },
    "5694": {
      "offset": [
        1195,
        1216
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5695": {
      "offset": [
        1195,
        1216
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5696": {
      "jump": "o",
      "offset": [
        1195,
        1216
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5697": {
      "offset": [
        1437,
        1480
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5698": {
      "offset": [
        1437,
        1480
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x15"
    },
    "5700": {
      "offset": [
        1437,
        1480
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "5702": {
      "offset": [
        1437,
        1480
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5703": {
      "offset": [
        1437,
        1480
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "5705": {
      "offset": [
        1437,
        1480
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5706": {
      "offset": [
        1437,
        1480
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5707": {
      "offset": [
        1437,
        1480
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5708": {
      "offset": [
        1437,
        1480
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "5710": {
      "offset": [
        1437,
        1480
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5711": {
      "offset": [
        1437,
        1480
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "5712": {
      "offset": [
        1437,
        1480
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "5713": {
      "offset": [
        1437,
        1480
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFF"
    },
    "5715": {
      "offset": [
        1437,
        1480
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5716": {
      "offset": [
        1437,
        1480
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5717": {
      "jump": "o",
      "offset": [
        1437,
        1480
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5718": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14480,
        16727
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5719": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14591,
        14598
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "5721": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14636,
        14646
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5DE30280"
    },
    "5726": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14618,
        14633
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5727": {
      "branch": 270,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14618,
        14646
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5728": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14614,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5729": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14614,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x166C"
    },
    "5732": {
      "branch": 270,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14614,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5733": {
      "op": "POP"
    },
    "5734": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14683,
        14684
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 75,
      "value": "0x0"
    },
    "5736": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14676,
        14684
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "5739": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14676,
        14684
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5740": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14614,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5741": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14723,
        14733
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5E5AFB00"
    },
    "5746": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14705,
        14720
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5747": {
      "branch": 271,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14705,
        14733
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5748": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14701,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5749": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14701,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x16A9"
    },
    "5752": {
      "branch": 271,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14701,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5759": {
      "op": "SHL"
    },
    "5760": {
      "op": "SUB"
    },
    "5761": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 76
    },
    "5762": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5763": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "5765": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5766": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5767": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5768": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14782
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "5770": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "5772": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5773": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "5775": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5776": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "5777": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14790
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "5778": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14807
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "5781": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14807
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5782": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14803,
        14806
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "5784": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14803,
        14806
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5785": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14798
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "5788": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14798
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5789": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14795,
        14797
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "5791": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14798
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5796": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14794
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5799": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14770,
        14798
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5800": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        14770,
        14798
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5801": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14701,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5802": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14846,
        14856
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5EFBD200"
    },
    "5807": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14828,
        14843
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5808": {
      "branch": 272,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14828,
        14856
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5809": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14824,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5810": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14824,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x16E6"
    },
    "5813": {
      "branch": 272,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14824,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5820": {
      "op": "SHL"
    },
    "5821": {
      "op": "SUB"
    },
    "5822": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 77
    },
    "5823": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5824": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "5826": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5827": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5828": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5829": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14905
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "5831": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "5833": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5834": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "5836": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5837": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "5838": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14913
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "5839": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14930
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "5842": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14930
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5843": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14926,
        14929
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "5845": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14926,
        14929
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5846": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14921
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "5849": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14921
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5850": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14918,
        14920
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x19"
    },
    "5852": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14921
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5857": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14917
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5860": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14893,
        14921
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5861": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        14893,
        14921
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5862": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14824,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5863": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14969,
        14979
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5FC58780"
    },
    "5868": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14951,
        14966
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5869": {
      "branch": 273,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14951,
        14979
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5870": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14947,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5871": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14947,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1723"
    },
    "5874": {
      "branch": 273,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14947,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5881": {
      "op": "SHL"
    },
    "5882": {
      "op": "SUB"
    },
    "5883": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 78
    },
    "5884": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5885": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "5887": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5888": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5889": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5890": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15028
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "5892": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "5894": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5895": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "5897": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5898": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "5899": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15036
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "5900": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15053
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "5903": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15053
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5904": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15049,
        15052
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "5906": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15049,
        15052
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5907": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15044
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "5910": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15044
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5911": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15041,
        15043
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "5913": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15044
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5918": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15040
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5921": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15016,
        15044
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5922": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        15016,
        15044
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5923": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        14947,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5924": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15092,
        15102
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x60650D00"
    },
    "5929": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15074,
        15089
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5930": {
      "branch": 274,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15074,
        15102
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5931": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15070,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5932": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15070,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1760"
    },
    "5935": {
      "branch": 274,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15070,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "SUB"
    },
    "5944": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 79
    },
    "5945": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5946": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "5948": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5949": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "5950": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5951": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15151
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "5953": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "5955": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "5956": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "5958": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5959": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "5960": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15159
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "5961": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15176
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "5964": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15176
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5965": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15172,
        15175
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "5967": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15172,
        15175
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5968": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15167
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "5971": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15167
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "5972": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15164,
        15166
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x23"
    },
    "5974": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15167
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "5979": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15163
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "5982": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15139,
        15167
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "5983": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        15139,
        15167
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5984": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15070,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "5985": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15215,
        15225
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x60DD0580"
    },
    "5990": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15197,
        15212
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "5991": {
      "branch": 275,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15197,
        15225
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "5992": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15193,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "5993": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15193,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x179D"
    },
    "5996": {
      "branch": 275,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15193,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6003": {
      "op": "SHL"
    },
    "6004": {
      "op": "SUB"
    },
    "6005": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 80
    },
    "6006": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6007": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6009": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6010": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6011": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6012": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15274
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6014": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6016": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6017": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6019": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6020": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6021": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15282
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6022": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15299
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6025": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15299
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6026": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15295,
        15298
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6028": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15295,
        15298
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6029": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15290
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6032": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15290
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6033": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15287,
        15289
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28"
    },
    "6035": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15290
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6040": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15286
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6043": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15262,
        15290
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6044": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        15262,
        15290
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6045": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15193,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6046": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15338,
        15348
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x61564F80"
    },
    "6051": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15320,
        15335
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6052": {
      "branch": 276,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15320,
        15348
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6053": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15316,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6054": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15316,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17DA"
    },
    "6057": {
      "branch": 276,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15316,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6064": {
      "op": "SHL"
    },
    "6065": {
      "op": "SUB"
    },
    "6066": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 81
    },
    "6067": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6068": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6070": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6071": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6072": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6073": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15397
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6075": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6077": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6078": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6080": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6081": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6082": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15405
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6083": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15422
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6086": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15422
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6087": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15418,
        15421
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6089": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15418,
        15421
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6090": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15413
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6093": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15413
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6094": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15410,
        15412
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "6096": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15413
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6101": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15409
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6104": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15385,
        15413
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6105": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        15385,
        15413
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6106": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15316,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6107": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15461,
        15471
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x61A6BB00"
    },
    "6112": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15443,
        15458
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6113": {
      "branch": 277,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15443,
        15471
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6114": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15439,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6115": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15439,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1817"
    },
    "6118": {
      "branch": 277,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15439,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6125": {
      "op": "SHL"
    },
    "6126": {
      "op": "SUB"
    },
    "6127": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 82
    },
    "6128": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6129": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6131": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6132": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6133": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6134": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15520
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6136": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6138": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6139": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6141": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6142": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6143": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15528
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6144": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15545
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6147": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15545
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6148": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15541,
        15544
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6150": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15541,
        15544
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6151": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15536
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6154": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15536
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6155": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15533,
        15535
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x32"
    },
    "6157": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15536
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6162": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15532
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6165": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15508,
        15536
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6166": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        15508,
        15536
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6167": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15439,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6168": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15584,
        15594
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x621D6200"
    },
    "6173": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15566,
        15581
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6174": {
      "branch": 278,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15566,
        15594
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6175": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15562,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6176": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15562,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1854"
    },
    "6179": {
      "branch": 278,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15562,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6186": {
      "op": "SHL"
    },
    "6187": {
      "op": "SUB"
    },
    "6188": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 83
    },
    "6189": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6190": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6192": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6193": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6194": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6195": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15643
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6197": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6199": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6200": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6202": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6203": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6204": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15651
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6205": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15668
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6208": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15668
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6209": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15664,
        15667
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6211": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15664,
        15667
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6212": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15659
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6215": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15659
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6216": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15656,
        15658
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x37"
    },
    "6218": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15659
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6223": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15655
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6226": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15631,
        15659
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6227": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        15631,
        15659
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6228": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15562,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6229": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15707,
        15717
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6296AC00"
    },
    "6234": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15689,
        15704
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6235": {
      "branch": 279,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15689,
        15717
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6236": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15685,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6237": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15685,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1891"
    },
    "6240": {
      "branch": 279,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15685,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6247": {
      "op": "SHL"
    },
    "6248": {
      "op": "SUB"
    },
    "6249": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 84
    },
    "6250": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6251": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6253": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6254": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6255": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6256": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15766
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6258": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6260": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6261": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6263": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6264": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6265": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15774
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6266": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15791
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6269": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15791
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6270": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15787,
        15790
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6272": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15787,
        15790
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6273": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15782
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6276": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15782
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6277": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15779,
        15781
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3C"
    },
    "6279": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15782
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6284": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15778
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6287": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15754,
        15782
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6288": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        15754,
        15782
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6289": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15685,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6290": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15830,
        15840
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x630FF600"
    },
    "6295": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15812,
        15827
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6296": {
      "branch": 280,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15812,
        15840
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6297": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15808,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6298": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15808,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x18CE"
    },
    "6301": {
      "branch": 280,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15808,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6308": {
      "op": "SHL"
    },
    "6309": {
      "op": "SUB"
    },
    "6310": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 85
    },
    "6311": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6312": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6314": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6315": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6316": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6317": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6319": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6321": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6322": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6324": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6325": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6326": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15897
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6327": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15914
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6330": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15914
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6331": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15910,
        15913
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6333": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15910,
        15913
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6334": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15905
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6337": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15905
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6338": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15902,
        15904
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41"
    },
    "6340": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15905
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6345": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15901
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6348": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15877,
        15905
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6349": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        15877,
        15905
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6350": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15808,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6351": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15953,
        15963
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6387EE80"
    },
    "6356": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15935,
        15950
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6357": {
      "branch": 281,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15935,
        15963
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6358": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15931,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6359": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15931,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x190B"
    },
    "6362": {
      "branch": 281,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15931,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6369": {
      "op": "SHL"
    },
    "6370": {
      "op": "SUB"
    },
    "6371": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 86
    },
    "6372": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6373": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6375": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6376": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6377": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6378": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16012
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6380": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6382": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6383": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6385": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6386": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6387": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16020
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6388": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16037
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6391": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16037
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6392": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16033,
        16036
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6394": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16033,
        16036
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6395": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16028
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6398": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16028
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6399": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16025,
        16027
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x46"
    },
    "6401": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16028
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6406": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16024
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6409": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16000,
        16028
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6410": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        16000,
        16028
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6411": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        15931,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6412": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16076,
        16086
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x63FE9580"
    },
    "6417": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16058,
        16073
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6418": {
      "branch": 282,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16058,
        16086
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6419": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16054,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6420": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16054,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1948"
    },
    "6423": {
      "branch": 282,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16054,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6430": {
      "op": "SHL"
    },
    "6431": {
      "op": "SUB"
    },
    "6432": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 87
    },
    "6433": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6434": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6436": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6437": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6438": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6439": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16135
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6441": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6443": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6444": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6446": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6447": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6448": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16143
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6449": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16160
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6452": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16160
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6453": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16156,
        16159
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6455": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16156,
        16159
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6456": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16151
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6459": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16151
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6460": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16148,
        16150
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4B"
    },
    "6462": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16151
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6467": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16147
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6470": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16123,
        16151
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6471": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        16123,
        16151
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6472": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16054,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6473": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16199,
        16209
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x644F0100"
    },
    "6478": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16181,
        16196
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6479": {
      "branch": 283,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16181,
        16209
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6480": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16177,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6481": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16177,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1985"
    },
    "6484": {
      "branch": 283,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16177,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6491": {
      "op": "SHL"
    },
    "6492": {
      "op": "SUB"
    },
    "6493": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 88
    },
    "6494": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6495": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6497": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6498": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6499": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6500": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16258
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6502": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6504": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6505": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6507": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6508": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6509": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16266
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6510": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16283
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6513": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16283
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6514": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16279,
        16282
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6516": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16279,
        16282
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6517": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16274
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6520": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16274
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6521": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16271,
        16273
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x50"
    },
    "6523": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16274
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6528": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16270
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6531": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16246,
        16274
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6532": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        16246,
        16274
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6533": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16177,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6534": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16322,
        16332
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x649F6C80"
    },
    "6539": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16304,
        16319
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6540": {
      "branch": 284,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16304,
        16332
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6541": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16300,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6542": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16300,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x19C2"
    },
    "6545": {
      "branch": 284,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16300,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6552": {
      "op": "SHL"
    },
    "6553": {
      "op": "SUB"
    },
    "6554": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 89
    },
    "6555": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6556": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6558": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6559": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6560": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6561": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16381
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6563": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6565": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6566": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6568": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6569": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6570": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16389
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6571": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16406
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6574": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16406
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6575": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16402,
        16405
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6577": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16402,
        16405
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6578": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16397
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6581": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16397
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6582": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16394,
        16396
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x55"
    },
    "6584": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16397
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6589": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16393
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6592": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16369,
        16397
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6593": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        16369,
        16397
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6594": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16300,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6595": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16445,
        16455
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6518B680"
    },
    "6600": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16427,
        16442
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6601": {
      "branch": 285,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16427,
        16455
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6602": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16423,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6603": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16423,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x19FF"
    },
    "6606": {
      "branch": 285,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16423,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6613": {
      "op": "SHL"
    },
    "6614": {
      "op": "SUB"
    },
    "6615": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 90
    },
    "6616": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6617": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6619": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6620": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6621": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6622": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16504
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6624": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6626": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6627": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6629": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6630": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6631": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16512
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6632": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16529
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6635": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16529
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6636": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16525,
        16528
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6638": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16525,
        16528
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6639": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16520
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6642": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16520
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6643": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16517,
        16519
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5A"
    },
    "6645": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16520
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6650": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16516
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6653": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16492,
        16520
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6654": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        16492,
        16520
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6655": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16423,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6656": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16568,
        16578
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x65692200"
    },
    "6661": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16550,
        16565
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6662": {
      "branch": 286,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16550,
        16578
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6663": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16546,
        16721
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6664": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16546,
        16721
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1A3C"
    },
    "6667": {
      "branch": 286,
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16546,
        16721
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6674": {
      "op": "SHL"
    },
    "6675": {
      "op": "SUB"
    },
    "6676": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol",
      "statement": 91
    },
    "6677": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6678": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6680": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6681": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6682": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6683": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16627
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6685": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6687": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6688": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6690": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6691": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6692": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16635
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6693": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16652
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF17"
    },
    "6696": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16652
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6697": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16648,
        16651
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6699": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16648,
        16651
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6700": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16643
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6703": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16643
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6704": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16640,
        16642
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5F"
    },
    "6706": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16643
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6711": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16639
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6714": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16615,
        16643
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6715": {
      "fn": "IsinaToken.get_available_seed_balance",
      "jump": "i",
      "offset": [
        16615,
        16643
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6716": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16546,
        16721
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6717": {
      "op": "POP"
    },
    "6718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6724": {
      "op": "SHL"
    },
    "6725": {
      "op": "SUB"
    },
    "6726": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol",
      "statement": 92
    },
    "6727": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6728": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6730": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6731": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6732": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6733": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16702
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "6735": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "6737": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "6738": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "6740": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6741": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "6742": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16690,
        16710
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6743": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16683,
        16710
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "6746": {
      "fn": "IsinaToken.get_available_seed_balance",
      "offset": [
        16683,
        16710
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6747": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11019,
        12699
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6748": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11107,
        11114
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "6750": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11152,
        11162
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5EAB6680"
    },
    "6755": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11134,
        11149
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6756": {
      "branch": 287,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11134,
        11162
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6757": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11130,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6758": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11130,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1A71"
    },
    "6761": {
      "branch": 287,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11130,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6762": {
      "op": "POP"
    },
    "6763": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11199,
        11200
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 93,
      "value": "0x0"
    },
    "6765": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11192,
        11200
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB29"
    },
    "6768": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11192,
        11200
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6769": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11130,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6770": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11239,
        11249
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x603C2E80"
    },
    "6775": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11221,
        11236
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6776": {
      "branch": 288,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11221,
        11249
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6777": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11217,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6778": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11217,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1A98"
    },
    "6781": {
      "branch": 288,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11217,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6782": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11319
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 94,
      "value": "0x949"
    },
    "6785": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11315,
        11318
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6787": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11310
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6790": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11307,
        11309
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "6792": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11302
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "6794": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11302
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6795": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11306
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6798": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11306
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6799": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11310
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6800": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11310
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6801": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11310
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6806": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11286,
        11310
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6807": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        11286,
        11310
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6808": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11217,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6809": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11358,
        11368
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x62464080"
    },
    "6814": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11340,
        11355
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6815": {
      "branch": 289,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11340,
        11368
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6816": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11336,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6817": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11336,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1ABF"
    },
    "6820": {
      "branch": 289,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11336,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6821": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11438
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 95,
      "value": "0x949"
    },
    "6824": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11434,
        11437
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6826": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11429
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6829": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11426,
        11428
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "6831": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11421
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "6833": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11421
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6834": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11425
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6837": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11425
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6838": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11429
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6839": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11429
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6840": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11429
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6845": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11405,
        11429
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6846": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        11405,
        11429
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6847": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11336,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6848": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11477,
        11487
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x62BE3900"
    },
    "6853": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11459,
        11474
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6854": {
      "branch": 290,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11459,
        11487
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6855": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11455,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6856": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11455,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1AE6"
    },
    "6859": {
      "branch": 290,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11455,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6860": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11557
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 96,
      "value": "0x949"
    },
    "6863": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11553,
        11556
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6865": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11548
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6868": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11545,
        11547
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "6870": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11540
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "6872": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11540
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6873": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11544
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6876": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11544
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6877": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11548
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6878": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11548
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6879": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11548
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6884": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11524,
        11548
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6885": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        11524,
        11548
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6886": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11455,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6887": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11596,
        11606
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6387EE80"
    },
    "6892": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11578,
        11593
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6893": {
      "branch": 291,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11578,
        11606
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6894": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11574,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6895": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11574,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1B0D"
    },
    "6898": {
      "branch": 291,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11574,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6899": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11676
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 97,
      "value": "0x949"
    },
    "6902": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11672,
        11675
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6904": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11667
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6907": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11664,
        11666
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x23"
    },
    "6909": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11659
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "6911": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11659
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6912": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11663
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6915": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11663
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6916": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11667
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6917": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11667
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6918": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11667
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6923": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11643,
        11667
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6924": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        11643,
        11667
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6925": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11574,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6926": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11715,
        11725
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x644F0100"
    },
    "6931": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11697,
        11712
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6932": {
      "branch": 292,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11697,
        11725
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6933": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11693,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6934": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11693,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1B34"
    },
    "6937": {
      "branch": 292,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11693,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6938": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11795
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 98,
      "value": "0x949"
    },
    "6941": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11791,
        11794
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6943": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11786
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6946": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11783,
        11785
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28"
    },
    "6948": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11778
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "6950": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11778
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6951": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11782
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6954": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11782
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6955": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11786
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6956": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11786
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6957": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11786
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "6962": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11762,
        11786
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "6963": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        11762,
        11786
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6964": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11693,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "6965": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11834,
        11844
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64C84B00"
    },
    "6970": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11816,
        11831
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "6971": {
      "branch": 293,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11816,
        11844
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "6972": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11812,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "6973": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11812,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1B5B"
    },
    "6976": {
      "branch": 293,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11812,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "6977": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11914
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 99,
      "value": "0x949"
    },
    "6980": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11910,
        11913
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "6982": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11905
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "6985": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11902,
        11904
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x32"
    },
    "6987": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11897
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "6989": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11897
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "6990": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11901
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "6993": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11901
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6994": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11905
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "6995": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11905
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "6996": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11905
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7001": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11881,
        11905
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7002": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        11881,
        11905
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7003": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11812,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7004": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11953,
        11963
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6609F900"
    },
    "7009": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11935,
        11950
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7010": {
      "branch": 294,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11935,
        11963
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "7011": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11931,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "7012": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11931,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1B82"
    },
    "7015": {
      "branch": 294,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11931,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7016": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12033
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 100,
      "value": "0x949"
    },
    "7019": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12029,
        12032
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7021": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12024
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "7024": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12021,
        12023
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x37"
    },
    "7026": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12016
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "7028": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12016
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7029": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12020
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "7032": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12020
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7033": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12024
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7034": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12024
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7035": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12024
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7040": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12000,
        12024
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7041": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        12000,
        12024
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7042": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        11931,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7043": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12072,
        12082
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x66AAD000"
    },
    "7048": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12054,
        12069
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7049": {
      "branch": 295,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12054,
        12082
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "7050": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12050,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "7051": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12050,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1BA9"
    },
    "7054": {
      "branch": 295,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12050,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7055": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12152
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 101,
      "value": "0x949"
    },
    "7058": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12148,
        12151
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7060": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12143
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "7063": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12140,
        12142
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3C"
    },
    "7065": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12135
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "7067": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12135
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7068": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12139
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "7071": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12139
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7072": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12143
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7073": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12143
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7074": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12143
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7079": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12119,
        12143
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7080": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        12119,
        12143
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7081": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12050,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7082": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12191,
        12201
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x674BA700"
    },
    "7087": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12173,
        12188
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7088": {
      "branch": 296,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12173,
        12201
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "7089": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12169,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "7090": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12169,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1BD0"
    },
    "7093": {
      "branch": 296,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12169,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7094": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12271
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 102,
      "value": "0x949"
    },
    "7097": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12267,
        12270
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7099": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12262
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "7102": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12259,
        12261
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41"
    },
    "7104": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12254
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "7106": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12254
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7107": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12258
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "7110": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12258
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7111": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12262
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7112": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12262
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7113": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12262
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7118": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12238,
        12262
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7119": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        12238,
        12262
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7120": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12169,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7121": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12310,
        12320
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x67EB2C80"
    },
    "7126": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12292,
        12307
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7127": {
      "branch": 297,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12292,
        12320
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "7128": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12288,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "7129": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12288,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1BF7"
    },
    "7132": {
      "branch": 297,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12288,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7133": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12390
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 103,
      "value": "0x949"
    },
    "7136": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12386,
        12389
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7138": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12381
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "7141": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12378,
        12380
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x46"
    },
    "7143": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12373
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "7145": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12373
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7146": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12377
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "7149": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12377
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7150": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12381
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7151": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12381
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7152": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12381
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7157": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12357,
        12381
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7158": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        12357,
        12381
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7159": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12288,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7160": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12429,
        12439
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x688C0380"
    },
    "7165": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12411,
        12426
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7166": {
      "branch": 298,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12411,
        12439
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "7167": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12407,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "7168": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12407,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1C1E"
    },
    "7171": {
      "branch": 298,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12407,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7172": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12509
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 104,
      "value": "0x949"
    },
    "7175": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12505,
        12508
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7177": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12500
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "7180": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12497,
        12499
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x50"
    },
    "7182": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12492
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "7184": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12492
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7185": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12496
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "7188": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12496
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7189": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12500
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7190": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12500
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7191": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12500
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7196": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12476,
        12500
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7197": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        12476,
        12500
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7198": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12407,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7199": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12548,
        12558
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x692CDA80"
    },
    "7204": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12530,
        12545
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7205": {
      "branch": 299,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12530,
        12558
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "7206": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12526,
        12693
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "7207": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12526,
        12693
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1C45"
    },
    "7210": {
      "branch": 299,
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12526,
        12693
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7211": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12628
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 105,
      "value": "0x949"
    },
    "7214": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12624,
        12627
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7216": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12619
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "7219": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12616,
        12618
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5A"
    },
    "7221": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12611
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "7223": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12611
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7224": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12615
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "7227": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12615
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7228": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12619
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7229": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12619
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7230": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12619
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7235": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12595,
        12619
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7236": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "jump": "i",
      "offset": [
        12595,
        12619
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7237": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12526,
        12693
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7238": {
      "op": "POP"
    },
    "7239": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12666,
        12682
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 106,
      "value": "0x7"
    },
    "7241": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12666,
        12682
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7242": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12659,
        12682
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB29"
    },
    "7245": {
      "fn": "IsinaToken.get_available_marketing_balance",
      "offset": [
        12659,
        12682
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7246": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7247": {
      "offset": [
        1670,
        1683
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "7249": {
      "offset": [
        1670,
        1683
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7250": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5929,
        5933
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7252": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5929,
        5933
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7259": {
      "op": "SHL"
    },
    "7260": {
      "op": "SUB"
    },
    "7261": {
      "offset": [
        1670,
        1683
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7262": {
      "offset": [
        1656,
        1666
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "7263": {
      "offset": [
        1656,
        1683
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "7264": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1CA1"
    },
    "7267": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7268": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7270": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7271": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7276": {
      "op": "SHL"
    },
    "7277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7281": {
      "op": "MUL"
    },
    "7282": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7283": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7284": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7286": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "7288": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7289": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7290": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7291": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "7293": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "7295": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7296": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7297": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7300": {
      "op": "DUP1"
    },
    "7301": {
      "op": "MLOAD"
    },
    "7302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7304": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "7307": {
      "op": "DUP4"
    },
    "7308": {
      "op": "CODECOPY"
    },
    "7309": {
      "op": "DUP2"
    },
    "7310": {
      "op": "MLOAD"
    },
    "7311": {
      "op": "SWAP2"
    },
    "7312": {
      "op": "MSTORE"
    },
    "7313": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "7315": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7316": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7317": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7318": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7319": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7320": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7321": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7322": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7323": {
      "offset": [
        1635,
        1739
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "7324": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7326": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7327": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7328": {
      "offset": [
        1635,
        1739
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "7329": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7330": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5984,
        5985
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 107,
      "value": "0x0"
    },
    "7332": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5970,
        5981
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9"
    },
    "7334": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5970,
        5981
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7335": {
      "branch": 300,
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5970,
        5985
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "7336": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1CFB"
    },
    "7339": {
      "branch": 300,
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7340": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7342": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7343": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7348": {
      "op": "SHL"
    },
    "7349": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7353": {
      "op": "MUL"
    },
    "7354": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7355": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7356": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7358": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "7360": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7361": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7362": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7363": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7364": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7365": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "7367": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7368": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7369": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7370": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "PUSH32",
      "path": "contracts/IsinaToken.sol",
      "value": "0x546F6B656E7320617265206F766572206F722073616C6520697320656E646564"
    },
    "7403": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "7405": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7406": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7407": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7408": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7409": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7410": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7411": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7412": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7413": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "7414": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7416": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7417": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7418": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "7419": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5949,
        6043
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7426": {
      "op": "SHL"
    },
    "7427": {
      "op": "SUB"
    },
    "7428": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol",
      "statement": 108
    },
    "7429": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7430": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7432": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7433": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7434": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7435": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6091
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "7437": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7439": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7440": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7442": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7443": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "7444": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6102
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7445": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6114
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1D24"
    },
    "7448": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6114
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7449": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6107,
        6113
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "7450": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6114
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7455": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6106
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3041"
    },
    "7458": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6114
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7459": {
      "fn": "IsinaToken.send_seed_tokens",
      "jump": "i",
      "offset": [
        6079,
        6114
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7460": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6079,
        6114
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7467": {
      "op": "SHL"
    },
    "7468": {
      "op": "SUB"
    },
    "7469": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "7470": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7471": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7473": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7474": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7475": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7476": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6065
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "7478": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7480": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7481": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7483": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7484": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6076
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "7485": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6114
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7486": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6114
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7487": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6114
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7488": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6053,
        6114
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7489": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6147,
        6174
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 109,
      "value": "0x1D58"
    },
    "7492": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6168,
        6173
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2710"
    },
    "7495": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6147,
        6163
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "7498": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6147,
        6153
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "7499": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6158,
        6162
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5D8"
    },
    "7502": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6147,
        6163
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7507": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6147,
        6157
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "7510": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6147,
        6163
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7511": {
      "fn": "IsinaToken.send_seed_tokens",
      "jump": "i",
      "offset": [
        6147,
        6163
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7512": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6147,
        6174
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7519": {
      "op": "SHL"
    },
    "7520": {
      "op": "SUB"
    },
    "7521": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol",
      "statement": 110
    },
    "7522": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7523": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7525": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7526": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7527": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7528": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6218
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13"
    },
    "7530": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7532": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7533": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7535": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7536": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "7537": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6229
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7538": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6124,
        6174
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7539": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6124,
        6174
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7540": {
      "op": "POP"
    },
    "7541": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6247
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1D84"
    },
    "7544": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6247
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7545": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6124,
        6174
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7546": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6247
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7551": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6233
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3041"
    },
    "7554": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6247
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7555": {
      "fn": "IsinaToken.send_seed_tokens",
      "jump": "i",
      "offset": [
        6208,
        6247
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7556": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6208,
        6247
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7563": {
      "op": "SHL"
    },
    "7564": {
      "op": "SUB"
    },
    "7565": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "7566": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7567": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7569": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7570": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7571": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7572": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6194
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13"
    },
    "7574": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7576": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7577": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7578": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7579": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7581": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7582": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "7583": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6205
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "7584": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6247
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "7585": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6247
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7586": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6247
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "7587": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6184,
        6247
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7588": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6268
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 111,
      "value": "0x15"
    },
    "7590": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6279
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7591": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6279
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7592": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6279
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "7593": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6286
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7594": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6286
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7597": {
      "op": "NOT"
    },
    "7598": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6286
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7599": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6282,
        6286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1"
    },
    "7601": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6286
      ],
      "op": "OR",
      "path": "contracts/IsinaToken.sol"
    },
    "7602": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6286
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7603": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6257,
        6286
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7604": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6321
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 112,
      "value": "0x9"
    },
    "7606": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6321
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7607": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6351
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1DCC"
    },
    "7610": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6351
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7611": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6338,
        6350
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7612": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6338,
        6350
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7613": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6333
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC23"
    },
    "7616": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6333
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7617": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6326,
        6332
      ],
      "op": "DUP7",
      "path": "contracts/IsinaToken.sol"
    },
    "7618": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6333
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7623": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6325
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "7626": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6333
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7627": {
      "fn": "IsinaToken.send_seed_tokens",
      "jump": "i",
      "offset": [
        6310,
        6333
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7628": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6310,
        6351
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7629": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6296,
        6307
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9"
    },
    "7631": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6296,
        6351
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7632": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6368,
        6419
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 113,
      "value": "0x1DE8"
    },
    "7635": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6383,
        6392
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "7636": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6394,
        6418
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1DE3"
    },
    "7639": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6394,
        6400
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "7640": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6405,
        6417
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "7641": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6394,
        6418
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7646": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6394,
        6404
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3041"
    },
    "7649": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6394,
        6418
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7650": {
      "fn": "IsinaToken.send_seed_tokens",
      "jump": "i",
      "offset": [
        6394,
        6418
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7651": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6394,
        6418
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7652": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6368,
        6382
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x25D4"
    },
    "7655": {
      "fn": "IsinaToken.send_seed_tokens",
      "jump": "i",
      "offset": [
        6368,
        6419
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7656": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6368,
        6419
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7657": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        6361,
        6419
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaToken.sol"
    },
    "7658": {
      "fn": "IsinaToken.send_seed_tokens",
      "offset": [
        5787,
        6426
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "7659": {
      "op": "POP"
    },
    "7660": {
      "op": "POP"
    },
    "7661": {
      "op": "POP"
    },
    "7662": {
      "op": "POP"
    },
    "7663": {
      "fn": "IsinaToken.send_seed_tokens",
      "jump": "o",
      "offset": [
        5787,
        6426
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7664": {
      "offset": [
        1111,
        1130
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7665": {
      "offset": [
        1111,
        1130
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD"
    },
    "7667": {
      "offset": [
        1111,
        1130
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7674": {
      "op": "SHL"
    },
    "7675": {
      "op": "SUB"
    },
    "7676": {
      "offset": [
        1111,
        1130
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7677": {
      "offset": [
        1111,
        1130
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7678": {
      "jump": "o",
      "offset": [
        1111,
        1130
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7679": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3855,
        4673
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7680": {
      "offset": [
        727,
        728
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1"
    },
    "7682": {
      "offset": [
        1823,
        1838
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7683": {
      "offset": [
        1823,
        1853
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "7684": {
      "offset": [
        1823,
        1853
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "7685": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E42"
    },
    "7688": {
      "offset": [
        1802,
        1923
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7689": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7691": {
      "offset": [
        1802,
        1923
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7696": {
      "op": "SHL"
    },
    "7697": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7701": {
      "op": "MUL"
    },
    "7702": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7703": {
      "offset": [
        1802,
        1923
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7704": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "7706": {
      "offset": [
        1802,
        1923
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7707": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7708": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7709": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7711": {
      "offset": [
        1802,
        1923
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7712": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7713": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7714": {
      "offset": [
        1802,
        1923
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "7715": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7716": {
      "offset": [
        1802,
        1923
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7717": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2C"
    },
    "7719": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7720": {
      "offset": [
        1802,
        1923
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7721": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7723": {
      "offset": [
        1802,
        1923
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7724": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7725": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3395"
    },
    "7728": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2C"
    },
    "7730": {
      "offset": [
        1802,
        1923
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7731": {
      "offset": [
        1802,
        1923
      ],
      "op": "CODECOPY",
      "path": "contracts/IsinaToken.sol"
    },
    "7732": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7734": {
      "offset": [
        1802,
        1923
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7735": {
      "offset": [
        1802,
        1923
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7736": {
      "offset": [
        1802,
        1923
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "7737": {
      "offset": [
        1802,
        1923
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "7738": {
      "offset": [
        1802,
        1923
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7740": {
      "offset": [
        1802,
        1923
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7741": {
      "offset": [
        1802,
        1923
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7742": {
      "offset": [
        1802,
        1923
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7743": {
      "offset": [
        1802,
        1923
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "7744": {
      "offset": [
        1802,
        1923
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7745": {
      "offset": [
        1802,
        1923
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "7746": {
      "offset": [
        1802,
        1923
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7747": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3954,
        3964
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol",
      "statement": 114
    },
    "7748": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7750": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7751": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7752": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7753": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3953
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x16"
    },
    "7755": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7757": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7758": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7760": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7761": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "7762": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7763": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFF"
    },
    "7765": {
      "branch": 301,
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3939,
        3965
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7766": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1EA9"
    },
    "7769": {
      "branch": 301,
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7770": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7772": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7773": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7778": {
      "op": "SHL"
    },
    "7779": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7783": {
      "op": "MUL"
    },
    "7784": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7785": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7786": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7788": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "7790": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7791": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7792": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7793": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "7795": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "7797": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7798": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7799": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7800": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH32",
      "path": "contracts/IsinaToken.sol",
      "value": "0x546F6B656E73206D75737420626520756E6C6F636B6564000000000000000000"
    },
    "7833": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "7835": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7836": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7837": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7838": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7839": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7840": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7841": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7842": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7843": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "7844": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "7846": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7847": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7848": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "7849": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        3918,
        4014
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7850": {
      "offset": [
        851,
        861
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x692CDA80"
    },
    "7855": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4045,
        4060
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol",
      "statement": 115
    },
    "7856": {
      "branch": 302,
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4045,
        4077
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "7857": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1EEE"
    },
    "7860": {
      "branch": 302,
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "7861": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7863": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7868": {
      "op": "SHL"
    },
    "7869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7873": {
      "op": "MUL"
    },
    "7874": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7875": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7876": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "7878": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7879": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7880": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7881": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7883": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7884": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7885": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7886": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "7887": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "7888": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7889": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "7891": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7892": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7893": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7895": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7896": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7897": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x344A"
    },
    "7900": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "7902": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7903": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "CODECOPY",
      "path": "contracts/IsinaToken.sol"
    },
    "7904": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7906": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "7907": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7908": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "7909": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "7910": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7912": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7913": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7914": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7915": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "7916": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7917": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "7918": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4024,
        4148
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7919": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4173,
        4183
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol",
      "statement": 116
    },
    "7920": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4187,
        4192
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7922": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4184
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7923": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4184
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7924": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4184
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7925": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4172
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x16"
    },
    "7927": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4184
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7929": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4184
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7930": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4184
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7932": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4184
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7933": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4184
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "7934": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4192
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7935": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4192
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7936": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7938": {
      "op": "NOT"
    },
    "7939": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4192
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7940": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4192
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7941": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4158,
        4192
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7942": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4232,
        4391
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 117,
      "value": "0x1F32"
    },
    "7945": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4232,
        4391
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7946": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4381
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD80"
    },
    "7949": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4381
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7950": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4326,
        4367
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1F16"
    },
    "7953": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4326,
        4367
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7954": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4326,
        4355
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xEC4"
    },
    "7957": {
      "fn": "IsinaToken.unlock_private",
      "jump": "i",
      "offset": [
        4326,
        4367
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7958": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4326,
        4367
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7959": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4293,
        4303
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "7960": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7962": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7963": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7964": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7965": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4292
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "7967": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7969": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7970": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "7972": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7973": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "7974": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "7975": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4304
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7976": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4381
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "7981": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4308
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "7984": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4277,
        4381
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "7985": {
      "fn": "IsinaToken.unlock_private",
      "jump": "i",
      "offset": [
        4277,
        4381
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "7986": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4232,
        4391
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "7987": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4218,
        4228
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "7988": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "7990": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7991": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7992": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "7993": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4217
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "7995": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "7997": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "7998": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "7999": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8000": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "8002": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8003": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "8004": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4229
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8005": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4391
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaToken.sol"
    },
    "8006": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4391
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8007": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4391
      ],
      "op": "SWAP5",
      "path": "contracts/IsinaToken.sol"
    },
    "8008": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4202,
        4391
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8009": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4416
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 118,
      "value": "0x12"
    },
    "8011": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4428
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8012": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4428
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8013": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4428
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8014": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4428
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "8015": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4428
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8016": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4432
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8017": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4432
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8018": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4432
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8019": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4401,
        4432
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8020": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4472,
        4627
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 119,
      "value": "0x1F80"
    },
    "8023": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4472,
        4627
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8024": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4617
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD80"
    },
    "8027": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4617
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8028": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4564,
        4603
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1F64"
    },
    "8031": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4564,
        4603
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8032": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4564,
        4591
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13E3"
    },
    "8035": {
      "fn": "IsinaToken.unlock_private",
      "jump": "i",
      "offset": [
        4564,
        4603
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8036": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4564,
        4603
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8037": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4531,
        4541
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "8038": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "8040": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8041": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8042": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8043": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4530
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "8045": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "8047": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8048": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "8050": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8051": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8052": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8053": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4542
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8054": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4617
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8059": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4546
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "8062": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4517,
        4617
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8063": {
      "fn": "IsinaToken.unlock_private",
      "jump": "i",
      "offset": [
        4517,
        4617
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8064": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4472,
        4627
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8065": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4458,
        4468
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "8066": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "8068": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8069": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8070": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8071": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4457
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "8073": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "8075": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8076": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8077": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8078": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "8080": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8081": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "8082": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4469
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8083": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4627
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "8084": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4627
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8085": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4627
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "8086": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4442,
        4627
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8087": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4637,
        4650
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 120,
      "value": "0x14"
    },
    "8089": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4637,
        4662
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8090": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4637,
        4662
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8091": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4637,
        4662
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8092": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4637,
        4662
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8093": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4637,
        4662
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8094": {
      "fn": "IsinaToken.unlock_private",
      "offset": [
        4637,
        4666
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8095": {
      "fn": "IsinaToken.unlock_private",
      "jump": "o",
      "offset": [
        3855,
        4673
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8096": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19166,
        21231
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8103": {
      "op": "SHL"
    },
    "8104": {
      "op": "SUB"
    },
    "8105": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol",
      "statement": 121
    },
    "8106": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8107": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19275,
        19282
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "8109": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8110": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8111": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8112": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19334
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13"
    },
    "8114": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "8116": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8117": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "8119": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8120": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8121": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19342
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8122": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19275,
        19282
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8123": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19275,
        19282
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8124": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19350
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1FCC"
    },
    "8127": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19350
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8128": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19347,
        19349
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "8130": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19350
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8135": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19346
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2C1B"
    },
    "8138": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19350
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8139": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        19324,
        19350
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8140": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19324,
        19350
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8141": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19298,
        19350
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8142": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19298,
        19350
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "8143": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19382,
        19392
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5DE30280"
    },
    "8148": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19364,
        19379
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8149": {
      "branch": 303,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19364,
        19392
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8150": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19360,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8151": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19360,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1FE4"
    },
    "8154": {
      "branch": 303,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19360,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8155": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19429,
        19430
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 122,
      "value": "0x0"
    },
    "8157": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19422,
        19430
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8158": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19422,
        19430
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "8159": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19422,
        19430
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "8160": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19422,
        19430
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "8163": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19422,
        19430
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8164": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19360,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8165": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19469,
        19479
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5E5AFB00"
    },
    "8170": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19451,
        19466
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8171": {
      "branch": 304,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19451,
        19479
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8172": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19447,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8173": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19447,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1FF7"
    },
    "8176": {
      "branch": 304,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19447,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8177": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19516,
        19531
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol",
      "statement": 123
    },
    "8178": {
      "op": "POP"
    },
    "8179": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19509,
        19531
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "8182": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19509,
        19531
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8183": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19447,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8184": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19570,
        19580
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5EFBD200"
    },
    "8189": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19552,
        19567
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8190": {
      "branch": 305,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19552,
        19580
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8191": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19548,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8192": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19548,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2014"
    },
    "8195": {
      "branch": 305,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19548,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8196": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19617,
        19639
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 124,
      "value": "0x1457"
    },
    "8199": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19617,
        19632
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8200": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19637,
        19638
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2"
    },
    "8202": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19617,
        19639
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8207": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19617,
        19636
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8210": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19617,
        19639
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8211": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        19617,
        19639
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8212": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19548,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8213": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19678,
        19688
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5FC58780"
    },
    "8218": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19660,
        19675
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8219": {
      "branch": 306,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19660,
        19688
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8220": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19656,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8221": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19656,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2031"
    },
    "8224": {
      "branch": 306,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19656,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8225": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19725,
        19747
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 125,
      "value": "0x1457"
    },
    "8228": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19725,
        19740
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8229": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19745,
        19746
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3"
    },
    "8231": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19725,
        19747
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8236": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19725,
        19744
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8239": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19725,
        19747
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8240": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        19725,
        19747
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8241": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19656,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8242": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19786,
        19796
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x60650D00"
    },
    "8247": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19768,
        19783
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8248": {
      "branch": 307,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19768,
        19796
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8249": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19764,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8250": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19764,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x204E"
    },
    "8253": {
      "branch": 307,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19764,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8254": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19833,
        19855
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 126,
      "value": "0x1457"
    },
    "8257": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19833,
        19848
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8258": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19853,
        19854
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "8260": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19833,
        19855
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8265": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19833,
        19852
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8268": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19833,
        19855
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8269": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        19833,
        19855
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8270": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19764,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8271": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19894,
        19904
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x60DD0580"
    },
    "8276": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19876,
        19891
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8277": {
      "branch": 308,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19876,
        19904
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8278": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19872,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8279": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19872,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x206B"
    },
    "8282": {
      "branch": 308,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19872,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8283": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19941,
        19963
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 127,
      "value": "0x1457"
    },
    "8286": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19941,
        19956
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8287": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19961,
        19962
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5"
    },
    "8289": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19941,
        19963
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8294": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19941,
        19960
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8297": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19941,
        19963
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8298": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        19941,
        19963
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8299": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19872,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8300": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20002,
        20012
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x61564F80"
    },
    "8305": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19984,
        19999
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8306": {
      "branch": 309,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19984,
        20012
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8307": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19980,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8308": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19980,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2088"
    },
    "8311": {
      "branch": 309,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19980,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8312": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20049,
        20071
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 128,
      "value": "0x1457"
    },
    "8315": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20049,
        20064
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8316": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20069,
        20070
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "8318": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20049,
        20071
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8323": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20049,
        20068
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8326": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20049,
        20071
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8327": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20049,
        20071
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8328": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        19980,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8329": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20110,
        20120
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x61A6BB00"
    },
    "8334": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20092,
        20107
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8335": {
      "branch": 310,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20092,
        20120
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8336": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20088,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8337": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20088,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20A5"
    },
    "8340": {
      "branch": 310,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20088,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8341": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20157,
        20179
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 129,
      "value": "0x1457"
    },
    "8344": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20157,
        20172
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8345": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20177,
        20178
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "8347": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20157,
        20179
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8352": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20157,
        20176
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8355": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20157,
        20179
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8356": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20157,
        20179
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8357": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20088,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8358": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20218,
        20228
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x621D6200"
    },
    "8363": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20200,
        20215
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8364": {
      "branch": 311,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20200,
        20228
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8365": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20196,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8366": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20196,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20C2"
    },
    "8369": {
      "branch": 311,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20196,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8370": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20265,
        20287
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 130,
      "value": "0x1457"
    },
    "8373": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20265,
        20280
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8374": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20285,
        20286
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "8376": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20265,
        20287
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8381": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20265,
        20284
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8384": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20265,
        20287
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8385": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20265,
        20287
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8386": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20196,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8387": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20326,
        20336
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6296AC00"
    },
    "8392": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20308,
        20323
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8393": {
      "branch": 312,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20308,
        20336
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8394": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20304,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8395": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20304,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20DF"
    },
    "8398": {
      "branch": 312,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20304,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8399": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20373,
        20395
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 131,
      "value": "0x1457"
    },
    "8402": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20373,
        20388
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8403": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20393,
        20394
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x9"
    },
    "8405": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20373,
        20395
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8410": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20373,
        20392
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8413": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20373,
        20395
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8414": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20373,
        20395
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8415": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20304,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8416": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20434,
        20444
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x630FF600"
    },
    "8421": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20416,
        20431
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8422": {
      "branch": 313,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20416,
        20444
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8423": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20412,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8424": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20412,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20FC"
    },
    "8427": {
      "branch": 313,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20412,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8428": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20481,
        20504
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 132,
      "value": "0x1457"
    },
    "8431": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20481,
        20496
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8432": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20501,
        20503
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "8434": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20481,
        20504
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8439": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20481,
        20500
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8442": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20481,
        20504
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8443": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20481,
        20504
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8444": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20412,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8445": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20543,
        20553
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6387EE80"
    },
    "8450": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20525,
        20540
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8451": {
      "branch": 314,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20525,
        20553
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8452": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20521,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8453": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20521,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2119"
    },
    "8456": {
      "branch": 314,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20521,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8457": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20590,
        20613
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 133,
      "value": "0x1457"
    },
    "8460": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20590,
        20605
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8461": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20610,
        20612
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB"
    },
    "8463": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20590,
        20613
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8468": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20590,
        20609
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8471": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20590,
        20613
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8472": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20590,
        20613
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8473": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20521,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8474": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20652,
        20662
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x63FE9580"
    },
    "8479": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20634,
        20649
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8480": {
      "branch": 315,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20634,
        20662
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8481": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20630,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8482": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20630,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2136"
    },
    "8485": {
      "branch": 315,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20630,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8486": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20699,
        20722
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 134,
      "value": "0x1457"
    },
    "8489": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20699,
        20714
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8490": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20719,
        20721
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "8492": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20699,
        20722
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8497": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20699,
        20718
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8500": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20699,
        20722
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8501": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20699,
        20722
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8502": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20630,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8503": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20761,
        20771
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x644F0100"
    },
    "8508": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20743,
        20758
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8509": {
      "branch": 316,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20743,
        20771
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8510": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20739,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8511": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20739,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2153"
    },
    "8514": {
      "branch": 316,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20739,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8515": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20808,
        20831
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 135,
      "value": "0x1457"
    },
    "8518": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20808,
        20823
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8519": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20828,
        20830
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD"
    },
    "8521": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20808,
        20831
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8526": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20808,
        20827
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8529": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20808,
        20831
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8530": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20808,
        20831
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8531": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20739,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8532": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20870,
        20880
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x649F6C80"
    },
    "8537": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20852,
        20867
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8538": {
      "branch": 317,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20852,
        20880
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8539": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20848,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8540": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20848,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2170"
    },
    "8543": {
      "branch": 317,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20848,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8544": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20917,
        20940
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 136,
      "value": "0x1457"
    },
    "8547": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20917,
        20932
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8548": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20937,
        20939
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE"
    },
    "8550": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20917,
        20940
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8555": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20917,
        20936
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8558": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20917,
        20940
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8559": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        20917,
        20940
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8560": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20848,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8561": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20979,
        20989
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6518B680"
    },
    "8566": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20961,
        20976
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8567": {
      "branch": 318,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20961,
        20989
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8568": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20957,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8569": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20957,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x218D"
    },
    "8572": {
      "branch": 318,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20957,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8573": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21026,
        21049
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 137,
      "value": "0x1457"
    },
    "8576": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21026,
        21041
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8577": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21046,
        21048
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF"
    },
    "8579": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21026,
        21049
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8584": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21026,
        21045
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8587": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21026,
        21049
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8588": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        21026,
        21049
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8589": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        20957,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8590": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21088,
        21098
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x65692200"
    },
    "8595": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21070,
        21085
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8596": {
      "branch": 319,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21070,
        21098
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "8597": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21066,
        21225
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8598": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21066,
        21225
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x21AA"
    },
    "8601": {
      "branch": 319,
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21066,
        21225
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8602": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21135,
        21158
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 138,
      "value": "0x1457"
    },
    "8605": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21135,
        21150
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8606": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21155,
        21157
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x10"
    },
    "8608": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21135,
        21158
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8613": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21135,
        21154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "8616": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21135,
        21158
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8617": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "jump": "i",
      "offset": [
        21135,
        21158
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8618": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21066,
        21225
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8619": {
      "op": "POP"
    },
    "8620": {
      "op": "POP"
    },
    "8621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8627": {
      "op": "SHL"
    },
    "8628": {
      "op": "SUB"
    },
    "8629": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol",
      "statement": 139
    },
    "8630": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8631": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "8633": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8634": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8635": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8636": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21206
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13"
    },
    "8638": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "8640": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8641": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "8643": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8644": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8645": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21196,
        21214
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8646": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21189,
        21214
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1309"
    },
    "8649": {
      "fn": "IsinaToken.get_available_seed_bonus",
      "offset": [
        21189,
        21214
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8650": {
      "offset": [
        900,
        931
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8651": {
      "offset": [
        900,
        931
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "8653": {
      "offset": [
        900,
        931
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8654": {
      "offset": [
        900,
        931
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8655": {
      "jump": "o",
      "offset": [
        900,
        931
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8656": {
      "fn": "Ownable.owner",
      "offset": [
        815,
        892
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "8657": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 140,
      "value": "0x5"
    },
    "8659": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "8660": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x100"
    },
    "8663": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "8664": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8671": {
      "op": "SHL"
    },
    "8672": {
      "op": "SUB"
    },
    "8673": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "8674": {
      "fn": "Ownable.owner",
      "offset": [
        879,
        885
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "8675": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        815,
        892
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "8676": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8677": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7593,
        7600
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "8679": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7616,
        7641
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol",
      "statement": 141
    },
    "8680": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7644,
        7661
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x21F0"
    },
    "8683": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7654,
        7660
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "8684": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7644,
        7653
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x132E"
    },
    "8687": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        7644,
        7661
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8688": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7644,
        7661
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8689": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7685,
        7689
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xD"
    },
    "8691": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7685,
        7689
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8692": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7616,
        7661
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8693": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7616,
        7661
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8694": {
      "op": "POP"
    },
    "8695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8701": {
      "op": "SHL"
    },
    "8702": {
      "op": "SUB"
    },
    "8703": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7675,
        7689
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "8704": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7675,
        7689
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8705": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7675,
        7689
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8706": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7685,
        7689
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8707": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7685,
        7689
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8708": {
      "branch": 320,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7675,
        7689
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "8709": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7671,
        7872
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8710": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7671,
        7872
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2236"
    },
    "8713": {
      "branch": 320,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7671,
        7872
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8714": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7725,
        7861
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 142,
      "value": "0x2233"
    },
    "8717": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7764,
        7847
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2226"
    },
    "8720": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7801,
        7829
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2217"
    },
    "8723": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7801,
        7827
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x900"
    },
    "8726": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        7801,
        7829
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8727": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7801,
        7829
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8728": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7764,
        7775
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "8730": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7764,
        7775
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8731": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7764,
        7775
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8732": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7764,
        7847
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8737": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7764,
        7779
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "8740": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7764,
        7847
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8741": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        7764,
        7847
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8742": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7764,
        7847
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8743": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7725,
        7742
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "8744": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7725,
        7742
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8745": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7725,
        7861
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8750": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7725,
        7746
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "8753": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7725,
        7861
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8754": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        7725,
        7861
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8755": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7725,
        7861
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8756": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7705,
        7861
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8757": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7705,
        7861
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "8758": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7671,
        7872
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8759": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7895,
        7904
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xE"
    },
    "8761": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7895,
        7904
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8768": {
      "op": "SHL"
    },
    "8769": {
      "op": "SUB"
    },
    "8770": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7885,
        7904
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "8771": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7885,
        7904
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8772": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7885,
        7904
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8773": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7895,
        7904
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8774": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7895,
        7904
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8775": {
      "branch": 321,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7885,
        7904
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "8776": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7881,
        8097
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8777": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7881,
        8097
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x226C"
    },
    "8780": {
      "branch": 321,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7881,
        8097
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8781": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7940,
        8086
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 143,
      "value": "0x2269"
    },
    "8784": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7979,
        8072
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2226"
    },
    "8787": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8021,
        8054
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x225A"
    },
    "8790": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8021,
        8052
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1A5B"
    },
    "8793": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8021,
        8054
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8794": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8021,
        8054
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8795": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7979,
        7995
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x7"
    },
    "8797": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7979,
        7995
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8798": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7979,
        7995
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8799": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7979,
        8072
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8804": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7979,
        7999
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "8807": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7979,
        8072
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8808": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        7979,
        8072
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8809": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7940,
        8086
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8810": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7920,
        8086
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8811": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7920,
        8086
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "8812": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7881,
        8097
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8813": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8120,
        8127
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF"
    },
    "8815": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8120,
        8127
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8822": {
      "op": "SHL"
    },
    "8823": {
      "op": "SUB"
    },
    "8824": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8110,
        8127
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "8825": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8110,
        8127
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8826": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8110,
        8127
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8827": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8120,
        8127
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8828": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8120,
        8127
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8829": {
      "branch": 322,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8110,
        8127
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "8830": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8106,
        8328
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8831": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8106,
        8328
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x22A2"
    },
    "8834": {
      "branch": 322,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8106,
        8328
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8835": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8163,
        8317
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 144,
      "value": "0x229F"
    },
    "8838": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8206,
        8303
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2226"
    },
    "8841": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8250,
        8281
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2290"
    },
    "8844": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8250,
        8279
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2687"
    },
    "8847": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8250,
        8281
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8848": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8250,
        8281
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8849": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8206,
        8220
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "8851": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8206,
        8220
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8852": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8206,
        8220
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8853": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8206,
        8303
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8858": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8206,
        8224
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "8861": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8206,
        8303
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8862": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8206,
        8303
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8863": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8163,
        8317
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8864": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8143,
        8317
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8865": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8143,
        8317
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "8866": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8106,
        8328
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8873": {
      "op": "SHL"
    },
    "8874": {
      "op": "SUB"
    },
    "8875": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "8876": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8877": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "8879": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8880": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8881": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8882": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8352
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x15"
    },
    "8884": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "8886": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8887": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "8889": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8890": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8891": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8892": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFF"
    },
    "8894": {
      "branch": 323,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8341,
        8360
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8895": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8337,
        8739
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "8896": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8337,
        8739
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2330"
    },
    "8899": {
      "branch": 323,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8337,
        8739
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "8900": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8396,
        8547
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 145,
      "value": "0x22F7"
    },
    "8903": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8533
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2226"
    },
    "8906": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8481,
        8515
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x22D2"
    },
    "8909": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8508,
        8514
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "8910": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8481,
        8507
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1656"
    },
    "8913": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8481,
        8515
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8914": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8481,
        8515
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8921": {
      "op": "SHL"
    },
    "8922": {
      "op": "SUB"
    },
    "8923": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "DUP7",
      "path": "contracts/IsinaToken.sol"
    },
    "8924": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8925": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "8927": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8928": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8929": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8930": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8447
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x11"
    },
    "8932": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "8934": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8935": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "8937": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8938": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8939": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8940": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8455
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8941": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8533
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "8946": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8459
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "8949": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8435,
        8533
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8950": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8435,
        8533
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8951": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8396,
        8547
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8952": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8376,
        8547
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8953": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8376,
        8547
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "8954": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8581,
        8728
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 146,
      "value": "0x232D"
    },
    "8957": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8714
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2226"
    },
    "8960": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8664,
        8696
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2308"
    },
    "8963": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8689,
        8695
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "8964": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8664,
        8688
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1FA0"
    },
    "8967": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8664,
        8696
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "8968": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8664,
        8696
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "8969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8975": {
      "op": "SHL"
    },
    "8976": {
      "op": "SUB"
    },
    "8977": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "DUP7",
      "path": "contracts/IsinaToken.sol"
    },
    "8978": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "8979": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "8981": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8982": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "8983": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8984": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8630
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13"
    },
    "8986": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "8988": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "8989": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "8991": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8992": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "8993": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "8994": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8638
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "8995": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8714
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "9000": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8642
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "9003": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8620,
        8714
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9004": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8620,
        8714
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9005": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8581,
        8728
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9006": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8561,
        8728
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9007": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8561,
        8728
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "9008": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8337,
        8739
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9015": {
      "op": "SHL"
    },
    "9016": {
      "op": "SUB"
    },
    "9017": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "9018": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9019": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9021": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9022": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9023": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9024": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8766
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x16"
    },
    "9026": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9028": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9029": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9031": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9032": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "9033": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9034": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFF"
    },
    "9036": {
      "branch": 324,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8752,
        8774
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9037": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8748,
        9165
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "9038": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8748,
        9165
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x23BE"
    },
    "9041": {
      "branch": 324,
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8748,
        9165
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "9042": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8810,
        8967
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 147,
      "value": "0x2385"
    },
    "9045": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8953
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2226"
    },
    "9048": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8898,
        8935
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2360"
    },
    "9051": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8928,
        8934
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "9052": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8898,
        8927
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xEC4"
    },
    "9055": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8898,
        8935
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9056": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8898,
        8935
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9063": {
      "op": "SHL"
    },
    "9064": {
      "op": "SUB"
    },
    "9065": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "DUP7",
      "path": "contracts/IsinaToken.sol"
    },
    "9066": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9067": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9069": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9070": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9071": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9072": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8864
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "9074": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9076": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9077": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9079": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9080": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "9081": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9082": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8872
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9083": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8953
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "9088": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8876
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "9091": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8849,
        8953
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9092": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        8849,
        8953
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9093": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8810,
        8967
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9094": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8790,
        8967
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9095": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8790,
        8967
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "9096": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9001,
        9154
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 148,
      "value": "0x23BB"
    },
    "9099": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9140
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2226"
    },
    "9102": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9087,
        9122
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2396"
    },
    "9105": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9115,
        9121
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "9106": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9087,
        9114
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x13E3"
    },
    "9109": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        9087,
        9122
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9110": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9087,
        9122
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9117": {
      "op": "SHL"
    },
    "9118": {
      "op": "SUB"
    },
    "9119": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "DUP7",
      "path": "contracts/IsinaToken.sol"
    },
    "9120": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9121": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9123": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9124": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9125": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9126": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9053
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "9128": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9130": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9131": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9133": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9134": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "9135": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9136": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9061
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9137": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9140
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "9142": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9065
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "9145": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9040,
        9140
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9146": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        9040,
        9140
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9147": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9001,
        9154
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9148": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8981,
        9154
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9149": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8981,
        9154
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "9150": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        8748,
        9165
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9157": {
      "op": "SHL"
    },
    "9158": {
      "op": "SUB"
    },
    "9159": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol",
      "statement": 149
    },
    "9160": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9161": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9163": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9164": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9165": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9166": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9231
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "9168": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9170": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9171": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9173": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9174": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "9175": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9216,
        9239
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9176": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9194,
        9240
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x23E8"
    },
    "9179": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9194,
        9240
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9180": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9194,
        9211
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9181": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9194,
        9211
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9182": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9194,
        9240
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "9187": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9194,
        9215
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "9190": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9194,
        9240
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9191": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "i",
      "offset": [
        9194,
        9240
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9192": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9194,
        9240
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9193": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        9174,
        9240
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "9194": {
      "fn": "IsinaToken.get_available_balance",
      "offset": [
        7487,
        9283
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9195": {
      "op": "POP"
    },
    "9196": {
      "op": "POP"
    },
    "9197": {
      "op": "POP"
    },
    "9198": {
      "fn": "IsinaToken.get_available_balance",
      "jump": "o",
      "offset": [
        7487,
        9283
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9199": {
      "fn": "Ownable.isOwner",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9200": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 150,
      "value": "0x5"
    },
    "9202": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9203": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x100"
    },
    "9206": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9207": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9214": {
      "op": "SHL"
    },
    "9215": {
      "op": "SUB"
    },
    "9216": {
      "fn": "Ownable.isOwner",
      "offset": [
        1243,
        1249
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9217": {
      "fn": "Ownable.isOwner",
      "offset": [
        1229,
        1239
      ],
      "op": "CALLER",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9218": {
      "fn": "Ownable.isOwner",
      "offset": [
        1229,
        1249
      ],
      "op": "EQ",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9219": {
      "fn": "Ownable.isOwner",
      "offset": [
        1229,
        1249
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9220": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9221": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9222": {
      "offset": [
        1019,
        1028
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x240D"
    },
    "9225": {
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x23EF"
    },
    "9228": {
      "jump": "i",
      "offset": [
        1019,
        1028
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9229": {
      "offset": [
        1019,
        1028
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9230": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x244F"
    },
    "9233": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9234": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "9236": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9237": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9242": {
      "op": "SHL"
    },
    "9243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9247": {
      "op": "MUL"
    },
    "9248": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9249": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9250": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "9252": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "9254": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9255": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9256": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9257": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9258": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9259": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x24"
    },
    "9261": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9262": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9263": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9266": {
      "op": "DUP1"
    },
    "9267": {
      "op": "MLOAD"
    },
    "9268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9270": {
      "op": "PUSH2",
      "value": "0x342A"
    },
    "9273": {
      "op": "DUP4"
    },
    "9274": {
      "op": "CODECOPY"
    },
    "9275": {
      "op": "DUP2"
    },
    "9276": {
      "op": "MLOAD"
    },
    "9277": {
      "op": "SWAP2"
    },
    "9278": {
      "op": "MSTORE"
    },
    "9279": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x44"
    },
    "9281": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9282": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9283": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9284": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9285": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9286": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9287": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9288": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9289": {
      "offset": [
        1011,
        1065
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9290": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x64"
    },
    "9292": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9293": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9294": {
      "offset": [
        1011,
        1065
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9295": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "9296": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        3020,
        3024
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 151,
      "value": "0x10"
    },
    "9298": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        3020,
        3024
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9299": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2996,
        3045
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2466"
    },
    "9302": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2996,
        3045
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9309": {
      "op": "SHL"
    },
    "9310": {
      "op": "SUB"
    },
    "9311": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        3020,
        3024
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9312": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        3027,
        3036
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "9313": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        3038,
        3044
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "9314": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2996,
        3011
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x317A"
    },
    "9317": {
      "fn": "IsinaToken.transfer_from_bank",
      "jump": "i",
      "offset": [
        2996,
        3045
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9318": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2996,
        3045
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9319": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "9320": {
      "fn": "IsinaToken.transfer_from_bank",
      "offset": [
        2862,
        3052
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "9321": {
      "fn": "IsinaToken.transfer_from_bank",
      "jump": "o",
      "offset": [
        2862,
        3052
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9322": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        838,
        923
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9323": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "statement": 152,
      "value": "0x4"
    },
    "9325": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9326": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9327": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x40"
    },
    "9329": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9330": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9331": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "9333": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1F"
    },
    "9335": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x2"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9339": {
      "op": "NOT"
    },
    "9340": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x100"
    },
    "9343": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1"
    },
    "9345": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP9",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9346": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9347": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9348": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9349": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9350": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9351": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9352": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9353": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9354": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9355": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9356": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9357": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9358": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9359": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9360": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9361": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9362": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9363": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9364": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9365": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9366": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9367": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9368": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9369": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9370": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9371": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9372": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9373": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9374": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9375": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        877,
        890
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x60"
    },
    "9377": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        877,
        890
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9378": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9379": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9380": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9381": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9382": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9383": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9384": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        909,
        916
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9385": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9386": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9387": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9388": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xBB8"
    },
    "9391": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9392": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9393": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x1F"
    },
    "9395": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9396": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xB8D"
    },
    "9399": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9400": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x100"
    },
    "9403": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9404": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9405": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9406": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9407": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9408": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9409": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9410": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9411": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0x20"
    },
    "9413": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9414": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9415": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol",
      "value": "0xBB8"
    },
    "9418": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol"
    },
    "9419": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7101,
        7481
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9420": {
      "offset": [
        1670,
        1683
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "9422": {
      "offset": [
        1670,
        1683
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9423": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7248,
        7252
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9425": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7248,
        7252
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9432": {
      "op": "SHL"
    },
    "9433": {
      "op": "SUB"
    },
    "9434": {
      "offset": [
        1670,
        1683
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9435": {
      "offset": [
        1656,
        1666
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "9436": {
      "offset": [
        1656,
        1683
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "9437": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x251E"
    },
    "9440": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "9441": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9443": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9444": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9449": {
      "op": "SHL"
    },
    "9450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9454": {
      "op": "MUL"
    },
    "9455": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9456": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9457": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9459": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "9461": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9462": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9463": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9464": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "9466": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "9468": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9469": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9470": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9473": {
      "op": "DUP1"
    },
    "9474": {
      "op": "MLOAD"
    },
    "9475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9477": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "9480": {
      "op": "DUP4"
    },
    "9481": {
      "op": "CODECOPY"
    },
    "9482": {
      "op": "DUP2"
    },
    "9483": {
      "op": "MLOAD"
    },
    "9484": {
      "op": "SWAP2"
    },
    "9485": {
      "op": "MSTORE"
    },
    "9486": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "9488": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9489": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9490": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9491": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9492": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9493": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9494": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9495": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9496": {
      "offset": [
        1635,
        1739
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "9497": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "9499": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9500": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9501": {
      "offset": [
        1635,
        1739
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "9502": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9503": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7308,
        7309
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 153,
      "value": "0x0"
    },
    "9505": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7289,
        7305
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB"
    },
    "9507": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7289,
        7305
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9508": {
      "branch": 325,
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7289,
        7309
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "9509": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2578"
    },
    "9512": {
      "branch": 325,
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "9513": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9515": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9516": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9521": {
      "op": "SHL"
    },
    "9522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9526": {
      "op": "MUL"
    },
    "9527": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9528": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9529": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9531": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "9533": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9534": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9535": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9536": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9537": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9538": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "9540": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9541": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9542": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9543": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "PUSH32",
      "path": "contracts/IsinaToken.sol",
      "value": "0x546F6B656E7320617265206F766572206F722073616C6520697320656E646564"
    },
    "9576": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "9578": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9579": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9580": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9581": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9582": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9583": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9584": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9585": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9586": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "9587": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "9589": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9590": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9591": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "9592": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7268,
        7367
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9593": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7396,
        7412
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 154,
      "value": "0xB"
    },
    "9595": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7396,
        7412
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9596": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7396,
        7424
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x258B"
    },
    "9599": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7396,
        7424
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9600": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7417,
        7423
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "9601": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7396,
        7424
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "9606": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7396,
        7416
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "9609": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7396,
        7424
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9610": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "jump": "i",
      "offset": [
        7396,
        7424
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9611": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7396,
        7424
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9612": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7377,
        7393
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB"
    },
    "9614": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7377,
        7424
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9615": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7441,
        7474
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 155,
      "value": "0x23E8"
    },
    "9618": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7456,
        7465
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "9619": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7467,
        7473
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "9620": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "offset": [
        7441,
        7455
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x25D4"
    },
    "9623": {
      "fn": "IsinaToken.send_launchpad_tokens",
      "jump": "i",
      "offset": [
        7441,
        7474
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9624": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4392,
        4605
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9625": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4502,
        4512
      ],
      "op": "CALLER",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 156
    },
    "9626": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4477,
        4481
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "9628": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9629": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9630": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9631": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4534
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x1"
    },
    "9633": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "9635": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9636": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9637": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9638": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "9640": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9641": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9642": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4546
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9649": {
      "op": "SHL"
    },
    "9650": {
      "op": "SUB"
    },
    "9651": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "DUP8",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9652": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9653": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9654": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9655": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9656": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9657": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9658": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9659": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9660": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4555
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9661": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4477,
        4481
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9662": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4477,
        4481
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9663": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4493,
        4577
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xBCF"
    },
    "9666": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4493,
        4577
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9667": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4514,
        4521
      ],
      "op": "DUP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9668": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4514,
        4521
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9669": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4576
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xC2F"
    },
    "9672": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4576
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9673": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4560,
        4575
      ],
      "op": "DUP7",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9674": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4576
      ],
      "op": "PUSH4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xFFFFFFFF"
    },
    "9679": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4559
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2FE1"
    },
    "9682": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4523,
        4576
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9683": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4523,
        4576
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "9684": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5234,
        5429
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9685": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5341,
        5345
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9687": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5361,
        5401
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 157,
      "value": "0xBCF"
    },
    "9690": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5371,
        5381
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "9691": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5383,
        5392
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "9692": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5394,
        5400
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "9693": {
      "fn": "IsinaToken.transfer",
      "offset": [
        5361,
        5370
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D7A"
    },
    "9696": {
      "fn": "IsinaToken.transfer",
      "jump": "i",
      "offset": [
        5361,
        5401
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9697": {
      "offset": [
        1077,
        1105
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9698": {
      "offset": [
        1077,
        1105
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "9700": {
      "offset": [
        1077,
        1105
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9707": {
      "op": "SHL"
    },
    "9708": {
      "op": "SUB"
    },
    "9709": {
      "offset": [
        1077,
        1105
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9710": {
      "offset": [
        1077,
        1105
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9711": {
      "jump": "o",
      "offset": [
        1077,
        1105
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9712": {
      "offset": [
        1538,
        1588
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9713": {
      "offset": [
        1538,
        1588
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "9715": {
      "offset": [
        1538,
        1588
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9717": {
      "offset": [
        1538,
        1588
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9718": {
      "offset": [
        1538,
        1588
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9720": {
      "offset": [
        1538,
        1588
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9721": {
      "offset": [
        1538,
        1588
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9722": {
      "offset": [
        1538,
        1588
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9723": {
      "offset": [
        1538,
        1588
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9725": {
      "offset": [
        1538,
        1588
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9726": {
      "offset": [
        1538,
        1588
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "9727": {
      "offset": [
        1538,
        1588
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9728": {
      "offset": [
        1538,
        1588
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9729": {
      "jump": "o",
      "offset": [
        1538,
        1588
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9730": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        4962,
        5108
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9731": {
      "offset": [
        1670,
        1683
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "9733": {
      "offset": [
        1670,
        1683
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9740": {
      "op": "SHL"
    },
    "9741": {
      "op": "SUB"
    },
    "9742": {
      "offset": [
        1670,
        1683
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9743": {
      "offset": [
        1656,
        1666
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "9744": {
      "offset": [
        1656,
        1683
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "9745": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2652"
    },
    "9748": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "9749": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9751": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9752": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9757": {
      "op": "SHL"
    },
    "9758": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9762": {
      "op": "MUL"
    },
    "9763": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9764": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9765": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9767": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "9769": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9770": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9771": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9772": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "9774": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "9776": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9777": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9778": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9781": {
      "op": "DUP1"
    },
    "9782": {
      "op": "MLOAD"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9785": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "9788": {
      "op": "DUP4"
    },
    "9789": {
      "op": "CODECOPY"
    },
    "9790": {
      "op": "DUP2"
    },
    "9791": {
      "op": "MLOAD"
    },
    "9792": {
      "op": "SWAP2"
    },
    "9793": {
      "op": "MSTORE"
    },
    "9794": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "9796": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "9797": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9798": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9799": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9800": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9801": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9802": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9803": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9804": {
      "offset": [
        1635,
        1739
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "9805": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "9807": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "9808": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9809": {
      "offset": [
        1635,
        1739
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "9810": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9811": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5039,
        5052
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 158,
      "value": "0xC"
    },
    "9813": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5039,
        5052
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9814": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5054,
        5070
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB"
    },
    "9816": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5054,
        5070
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9817": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5033,
        5071
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x266B"
    },
    "9820": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5033,
        5071
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9827": {
      "op": "SHL"
    },
    "9828": {
      "op": "SUB"
    },
    "9829": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5039,
        5052
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9830": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5039,
        5052
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9831": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5033,
        5038
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x309E"
    },
    "9834": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "jump": "i",
      "offset": [
        5033,
        5071
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9835": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5033,
        5071
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9836": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5100,
        5101
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 159,
      "value": "0x0"
    },
    "9838": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5081,
        5097
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB"
    },
    "9840": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "offset": [
        5081,
        5101
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9841": {
      "fn": "IsinaToken.burn_launchpad_tokens",
      "jump": "o",
      "offset": [
        4962,
        5108
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9842": {
      "offset": [
        1486,
        1532
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9843": {
      "offset": [
        1486,
        1532
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x16"
    },
    "9845": {
      "offset": [
        1486,
        1532
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "9847": {
      "offset": [
        1486,
        1532
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9848": {
      "offset": [
        1486,
        1532
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9850": {
      "offset": [
        1486,
        1532
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9851": {
      "offset": [
        1486,
        1532
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9852": {
      "offset": [
        1486,
        1532
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "9853": {
      "offset": [
        1486,
        1532
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "9855": {
      "offset": [
        1486,
        1532
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9856": {
      "offset": [
        1486,
        1532
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "9857": {
      "offset": [
        1486,
        1532
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9858": {
      "offset": [
        1486,
        1532
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFF"
    },
    "9860": {
      "offset": [
        1486,
        1532
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9861": {
      "offset": [
        1486,
        1532
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9862": {
      "jump": "o",
      "offset": [
        1486,
        1532
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9863": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12705,
        14474
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9864": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12791,
        12798
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "9866": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12836,
        12846
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5F4D8F00"
    },
    "9871": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12818,
        12833
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9872": {
      "branch": 326,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12818,
        12846
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "9873": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12814,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "9874": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12814,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x269D"
    },
    "9877": {
      "branch": 326,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12814,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "9878": {
      "op": "POP"
    },
    "9879": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12883,
        12884
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 160,
      "value": "0x0"
    },
    "9881": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12876,
        12884
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB29"
    },
    "9884": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12876,
        12884
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9885": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12814,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9886": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12923,
        12933
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x608C9A00"
    },
    "9891": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12905,
        12920
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9892": {
      "branch": 327,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12905,
        12933
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "9893": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12901,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "9894": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12901,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x26C4"
    },
    "9897": {
      "branch": 327,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12901,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "9898": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        13001
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 161,
      "value": "0x949"
    },
    "9901": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12997,
        13000
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "9903": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12992
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "9906": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12989,
        12991
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "9908": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12984
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "9910": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12984
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9911": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12988
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "9914": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12988
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9915": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12992
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9916": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12992
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9917": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12992
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "9922": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12970,
        12992
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9923": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        12970,
        12992
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9924": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        12901,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9925": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13040,
        13050
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x612EC280"
    },
    "9930": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13022,
        13037
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9931": {
      "branch": 328,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13022,
        13050
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "9932": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13018,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "9933": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13018,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x26EB"
    },
    "9936": {
      "branch": 328,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13018,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "9937": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13118
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 162,
      "value": "0x949"
    },
    "9940": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13114,
        13117
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "9942": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13109
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "9945": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13106,
        13108
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF"
    },
    "9947": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13101
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "9949": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13101
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9950": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13105
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "9953": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13105
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9954": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13109
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9955": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13109
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9956": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13109
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "9961": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13087,
        13109
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "9962": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        13087,
        13109
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9963": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13018,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "9964": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13157,
        13167
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6296AC00"
    },
    "9969": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13139,
        13154
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "9970": {
      "branch": 329,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13139,
        13167
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "9971": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13135,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "9972": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13135,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2712"
    },
    "9975": {
      "branch": 329,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13135,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "9976": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13235
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 163,
      "value": "0x949"
    },
    "9979": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13231,
        13234
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "9981": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13226
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "9984": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13223,
        13225
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "9986": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13218
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "9988": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13218
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "9989": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13222
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "9992": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13222
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9993": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13226
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "9994": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13226
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "9995": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13226
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10000": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13204,
        13226
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10001": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        13204,
        13226
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10002": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13135,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10003": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13274,
        13284
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x63378300"
    },
    "10008": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13256,
        13271
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10009": {
      "branch": 330,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13256,
        13284
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10010": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13252,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10011": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13252,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2739"
    },
    "10014": {
      "branch": 330,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13252,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10015": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13352
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 164,
      "value": "0x949"
    },
    "10018": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13348,
        13351
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10020": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13343
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10023": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13340,
        13342
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x19"
    },
    "10025": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13335
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10027": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13335
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10028": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13339
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10031": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13339
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10032": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13343
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10033": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13343
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10034": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13343
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10039": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13321,
        13343
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10040": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        13321,
        13343
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10041": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13252,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10042": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13391,
        13401
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x644F0100"
    },
    "10047": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13373,
        13388
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10048": {
      "branch": 331,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13373,
        13401
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10049": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13369,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10050": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13369,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2760"
    },
    "10053": {
      "branch": 331,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13369,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10054": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13469
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 165,
      "value": "0x949"
    },
    "10057": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13465,
        13468
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10059": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13460
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10062": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13457,
        13459
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "10064": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13452
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10066": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13452
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10067": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13456
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10070": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13456
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10071": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13460
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10072": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13460
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10073": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13460
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10078": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13438,
        13460
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10079": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        13438,
        13460
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10080": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13369,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10081": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13508,
        13518
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64C84B00"
    },
    "10086": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13490,
        13505
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10087": {
      "branch": 332,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13490,
        13518
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10088": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13486,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10089": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13486,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2787"
    },
    "10092": {
      "branch": 332,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13486,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10093": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13586
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 166,
      "value": "0x949"
    },
    "10096": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13582,
        13585
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10098": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13577
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10101": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13574,
        13576
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x28"
    },
    "10103": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13569
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10105": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13569
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10106": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13573
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10109": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13573
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10110": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13577
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10111": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13577
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10112": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13577
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10117": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13555,
        13577
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10118": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        13555,
        13577
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10119": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13486,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10120": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13625,
        13635
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x66318600"
    },
    "10125": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13607,
        13622
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10126": {
      "branch": 333,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13607,
        13635
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10127": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13603,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10128": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13603,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x27AE"
    },
    "10131": {
      "branch": 333,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13603,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10132": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13703
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 167,
      "value": "0x949"
    },
    "10135": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13699,
        13702
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10137": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13694
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10140": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13691,
        13693
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "10142": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13686
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10144": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13686
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10145": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13690
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10148": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13690
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10149": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13694
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10150": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13694
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10151": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13694
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10156": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13672,
        13694
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10157": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        13672,
        13694
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10158": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13603,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10159": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13742,
        13752
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6681F180"
    },
    "10164": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13724,
        13739
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10165": {
      "branch": 334,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13724,
        13752
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10166": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13720,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10167": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13720,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x27D5"
    },
    "10170": {
      "branch": 334,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13720,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10171": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13820
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 168,
      "value": "0x949"
    },
    "10174": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13816,
        13819
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10176": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13811
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10179": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13808,
        13810
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x37"
    },
    "10181": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13803
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10183": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13803
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10184": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13807
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10187": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13807
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10188": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13811
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10189": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13811
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10190": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13811
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10195": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13789,
        13811
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10196": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        13789,
        13811
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10197": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13720,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10198": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13859,
        13869
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x66FB3B80"
    },
    "10203": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13841,
        13856
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10204": {
      "branch": 335,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13841,
        13869
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10205": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13837,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10206": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13837,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x27FC"
    },
    "10209": {
      "branch": 335,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13837,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10210": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13937
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 169,
      "value": "0x949"
    },
    "10213": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13933,
        13936
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10215": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13928
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10218": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13925,
        13927
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3C"
    },
    "10220": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13920
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10222": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13920
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10223": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13924
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10226": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13924
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10227": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13928
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10228": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13928
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10229": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13928
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10234": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13906,
        13928
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10235": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        13906,
        13928
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10236": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13837,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10237": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13976,
        13986
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x674BA700"
    },
    "10242": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13958,
        13973
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10243": {
      "branch": 336,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13958,
        13986
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10244": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13954,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10245": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13954,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2823"
    },
    "10248": {
      "branch": 336,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13954,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10249": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14054
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 170,
      "value": "0x949"
    },
    "10252": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14050,
        14053
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10254": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14045
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10257": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14042,
        14044
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x41"
    },
    "10259": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14037
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10261": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14037
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10262": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14041
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10265": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14041
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10266": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14045
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10267": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14045
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10268": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14045
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10273": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14023,
        14045
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10274": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        14023,
        14045
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10275": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        13954,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10276": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14093,
        14103
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6812B980"
    },
    "10281": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14075,
        14090
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10282": {
      "branch": 337,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14075,
        14103
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10283": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14071,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10284": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14071,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x284A"
    },
    "10287": {
      "branch": 337,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14071,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10288": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14171
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 171,
      "value": "0x949"
    },
    "10291": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14167,
        14170
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10293": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14162
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10296": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14159,
        14161
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x46"
    },
    "10298": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14154
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10300": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14154
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10301": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14158
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10304": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14158
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10305": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14162
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10306": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14162
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10307": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14162
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10312": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14140,
        14162
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10313": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        14140,
        14162
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10314": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14071,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10315": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14210,
        14220
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x68B4E200"
    },
    "10320": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14192,
        14207
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10321": {
      "branch": 338,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14192,
        14220
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10322": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14188,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10323": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14188,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2871"
    },
    "10326": {
      "branch": 338,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14188,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10327": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14288
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 172,
      "value": "0x949"
    },
    "10330": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14284,
        14287
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10332": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14279
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10335": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14276,
        14278
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x50"
    },
    "10337": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14271
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10339": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14271
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10340": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14275
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10343": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14275
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10344": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14279
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10345": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14279
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10346": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14279
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10351": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14257,
        14279
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10352": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        14257,
        14279
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10353": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14188,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10354": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14327,
        14337
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x692CDA80"
    },
    "10359": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14309,
        14324
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10360": {
      "branch": 339,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14309,
        14337
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "10361": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14305,
        14468
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "10362": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14305,
        14468
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2898"
    },
    "10365": {
      "branch": 339,
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14305,
        14468
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10366": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14405
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 173,
      "value": "0x949"
    },
    "10369": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14401,
        14404
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10371": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14396
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "10374": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14393,
        14395
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x5A"
    },
    "10376": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14388
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x8"
    },
    "10378": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14388
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10379": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14392
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "10382": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14392
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10383": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14396
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10384": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14396
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10385": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14396
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "10390": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14374,
        14396
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10391": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "jump": "i",
      "offset": [
        14374,
        14396
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10392": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14305,
        14468
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10393": {
      "op": "POP"
    },
    "10394": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14443,
        14457
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 174,
      "value": "0x8"
    },
    "10396": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14443,
        14457
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10397": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14436,
        14457
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB29"
    },
    "10400": {
      "fn": "IsinaToken.get_available_reserve_balance",
      "offset": [
        14436,
        14457
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10401": {
      "offset": [
        1166,
        1188
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10402": {
      "offset": [
        1166,
        1188
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xF"
    },
    "10404": {
      "offset": [
        1166,
        1188
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10411": {
      "op": "SHL"
    },
    "10412": {
      "op": "SUB"
    },
    "10413": {
      "offset": [
        1166,
        1188
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10414": {
      "offset": [
        1166,
        1188
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10415": {
      "jump": "o",
      "offset": [
        1166,
        1188
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10416": {
      "offset": [
        1039,
        1070
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10417": {
      "offset": [
        1039,
        1070
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xB"
    },
    "10419": {
      "offset": [
        1039,
        1070
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10420": {
      "offset": [
        1039,
        1070
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10421": {
      "jump": "o",
      "offset": [
        1039,
        1070
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10422": {
      "offset": [
        868,
        894
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10423": {
      "offset": [
        868,
        894
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x6"
    },
    "10425": {
      "offset": [
        868,
        894
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10426": {
      "offset": [
        868,
        894
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10427": {
      "jump": "o",
      "offset": [
        868,
        894
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10428": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5114,
        5228
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10429": {
      "offset": [
        1019,
        1028
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x28C4"
    },
    "10432": {
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x23EF"
    },
    "10435": {
      "jump": "i",
      "offset": [
        1019,
        1028
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10436": {
      "offset": [
        1019,
        1028
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10437": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x2906"
    },
    "10440": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10441": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "10443": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10444": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10449": {
      "op": "SHL"
    },
    "10450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10454": {
      "op": "MUL"
    },
    "10455": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10456": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10457": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "10459": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "10461": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10462": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10463": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10464": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10465": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10466": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x24"
    },
    "10468": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10469": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10470": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10473": {
      "op": "DUP1"
    },
    "10474": {
      "op": "MLOAD"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10477": {
      "op": "PUSH2",
      "value": "0x342A"
    },
    "10480": {
      "op": "DUP4"
    },
    "10481": {
      "op": "CODECOPY"
    },
    "10482": {
      "op": "DUP2"
    },
    "10483": {
      "op": "MLOAD"
    },
    "10484": {
      "op": "SWAP2"
    },
    "10485": {
      "op": "MSTORE"
    },
    "10486": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x44"
    },
    "10488": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10489": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10490": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10491": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10492": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10493": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10494": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10495": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10496": {
      "offset": [
        1011,
        1065
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10497": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x64"
    },
    "10499": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10500": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10501": {
      "offset": [
        1011,
        1065
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10502": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10503": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5195
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 175,
      "value": "0x10"
    },
    "10505": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10506": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10513": {
      "op": "SHL"
    },
    "10514": {
      "op": "SUB"
    },
    "10515": {
      "op": "NOT"
    },
    "10516": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10523": {
      "op": "SHL"
    },
    "10524": {
      "op": "SUB"
    },
    "10525": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10526": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10527": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10528": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10529": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10530": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10531": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10532": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "OR",
      "path": "contracts/IsinaToken.sol"
    },
    "10533": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10534": {
      "fn": "IsinaToken.set_bank",
      "offset": [
        5191,
        5221
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10535": {
      "fn": "IsinaToken.set_bank",
      "jump": "o",
      "offset": [
        5114,
        5228
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10536": {
      "fn": "ERC20.allowance",
      "offset": [
        2183,
        2315
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10543": {
      "op": "SHL"
    },
    "10544": {
      "op": "SUB"
    },
    "10545": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 176
    },
    "10546": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10547": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10548": {
      "fn": "ERC20.allowance",
      "offset": [
        2255,
        2262
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "10550": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10551": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10552": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10553": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2292
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x1"
    },
    "10555": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "10557": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10558": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10559": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10560": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "10562": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10563": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10564": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2299
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10565": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10566": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10567": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10568": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10569": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10570": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10571": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10572": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10573": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10574": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10575": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10576": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10577": {
      "fn": "ERC20.allowance",
      "offset": [
        2281,
        2308
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10578": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2183,
        2315
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "10579": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4816,
        4956
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10580": {
      "offset": [
        1670,
        1683
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "10582": {
      "offset": [
        1670,
        1683
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10589": {
      "op": "SHL"
    },
    "10590": {
      "op": "SUB"
    },
    "10591": {
      "offset": [
        1670,
        1683
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10592": {
      "offset": [
        1656,
        1666
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "10593": {
      "offset": [
        1656,
        1683
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "10594": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x29A3"
    },
    "10597": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10598": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "10600": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10601": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10606": {
      "op": "SHL"
    },
    "10607": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10611": {
      "op": "MUL"
    },
    "10612": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10613": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10614": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "10616": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "10618": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10619": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10620": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10621": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "10623": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "10625": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10626": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10627": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10630": {
      "op": "DUP1"
    },
    "10631": {
      "op": "MLOAD"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10634": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "10637": {
      "op": "DUP4"
    },
    "10638": {
      "op": "CODECOPY"
    },
    "10639": {
      "op": "DUP2"
    },
    "10640": {
      "op": "MLOAD"
    },
    "10641": {
      "op": "SWAP2"
    },
    "10642": {
      "op": "MSTORE"
    },
    "10643": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "10645": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10646": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10647": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10648": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10649": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10650": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10651": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10652": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10653": {
      "offset": [
        1635,
        1739
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "10654": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10656": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10657": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10658": {
      "offset": [
        1635,
        1739
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "10659": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10660": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4891,
        4904
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 177,
      "value": "0xC"
    },
    "10662": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4891,
        4904
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10663": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4906,
        4920
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "10665": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4906,
        4920
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10666": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4885,
        4921
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x29BC"
    },
    "10669": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4885,
        4921
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10676": {
      "op": "SHL"
    },
    "10677": {
      "op": "SUB"
    },
    "10678": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4891,
        4904
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10679": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4891,
        4904
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10680": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4885,
        4890
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x309E"
    },
    "10683": {
      "fn": "IsinaToken.burn_private_tokens",
      "jump": "i",
      "offset": [
        4885,
        4921
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10684": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4885,
        4921
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10685": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4948,
        4949
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 178,
      "value": "0x0"
    },
    "10687": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4931,
        4945
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "10689": {
      "fn": "IsinaToken.burn_private_tokens",
      "offset": [
        4931,
        4949
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10690": {
      "fn": "IsinaToken.burn_private_tokens",
      "jump": "o",
      "offset": [
        4816,
        4956
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10691": {
      "offset": [
        1383,
        1431
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10692": {
      "offset": [
        1383,
        1431
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "10694": {
      "offset": [
        1383,
        1431
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "10696": {
      "offset": [
        1383,
        1431
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10697": {
      "offset": [
        1383,
        1431
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "10699": {
      "offset": [
        1383,
        1431
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10700": {
      "offset": [
        1383,
        1431
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10701": {
      "offset": [
        1383,
        1431
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10702": {
      "offset": [
        1383,
        1431
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "10704": {
      "offset": [
        1383,
        1431
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10705": {
      "offset": [
        1383,
        1431
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "10706": {
      "offset": [
        1383,
        1431
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10707": {
      "offset": [
        1383,
        1431
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10708": {
      "jump": "o",
      "offset": [
        1383,
        1431
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "10709": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10710": {
      "offset": [
        1019,
        1028
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x29DD"
    },
    "10713": {
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x23EF"
    },
    "10716": {
      "jump": "i",
      "offset": [
        1019,
        1028
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10717": {
      "offset": [
        1019,
        1028
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10718": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x2A1F"
    },
    "10721": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10722": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "10724": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10725": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10730": {
      "op": "SHL"
    },
    "10731": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10735": {
      "op": "MUL"
    },
    "10736": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10737": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10738": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "10740": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "10742": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10743": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10744": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10745": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10746": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10747": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x24"
    },
    "10749": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10750": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10751": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10754": {
      "op": "DUP1"
    },
    "10755": {
      "op": "MLOAD"
    },
    "10756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10758": {
      "op": "PUSH2",
      "value": "0x342A"
    },
    "10761": {
      "op": "DUP4"
    },
    "10762": {
      "op": "CODECOPY"
    },
    "10763": {
      "op": "DUP2"
    },
    "10764": {
      "op": "MLOAD"
    },
    "10765": {
      "op": "SWAP2"
    },
    "10766": {
      "op": "MSTORE"
    },
    "10767": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x44"
    },
    "10769": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10770": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10771": {
      "offset": [
        1011,
        1065
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10772": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10773": {
      "offset": [
        1011,
        1065
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10774": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10775": {
      "offset": [
        1011,
        1065
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10776": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10777": {
      "offset": [
        1011,
        1065
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10778": {
      "offset": [
        1011,
        1065
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x64"
    },
    "10780": {
      "offset": [
        1011,
        1065
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10781": {
      "offset": [
        1011,
        1065
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10782": {
      "offset": [
        1011,
        1065
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10783": {
      "offset": [
        1011,
        1065
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1958,
        1986
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 179,
      "value": "0x2A28"
    },
    "10787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1977,
        1985
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1958,
        1976
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x32C2"
    },
    "10791": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1958,
        1986
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1958,
        1986
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1886,
        1993
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10794": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1886,
        1993
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "10795": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6432,
        7095
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10796": {
      "offset": [
        1670,
        1683
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "10798": {
      "offset": [
        1670,
        1683
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10799": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6577,
        6581
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "10801": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6577,
        6581
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10808": {
      "op": "SHL"
    },
    "10809": {
      "op": "SUB"
    },
    "10810": {
      "offset": [
        1670,
        1683
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10811": {
      "offset": [
        1656,
        1666
      ],
      "op": "CALLER",
      "path": "contracts/IsinaToken.sol"
    },
    "10812": {
      "offset": [
        1656,
        1683
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "10813": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2A7E"
    },
    "10816": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10817": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "10819": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10820": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10823": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10825": {
      "op": "SHL"
    },
    "10826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10830": {
      "op": "MUL"
    },
    "10831": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10832": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10833": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "10835": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "10837": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10838": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10839": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10840": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1E"
    },
    "10842": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "10844": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10845": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10846": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10849": {
      "op": "DUP1"
    },
    "10850": {
      "op": "MLOAD"
    },
    "10851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10853": {
      "op": "PUSH2",
      "value": "0x34BD"
    },
    "10856": {
      "op": "DUP4"
    },
    "10857": {
      "op": "CODECOPY"
    },
    "10858": {
      "op": "DUP2"
    },
    "10859": {
      "op": "MLOAD"
    },
    "10860": {
      "op": "SWAP2"
    },
    "10861": {
      "op": "MSTORE"
    },
    "10862": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "10864": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10865": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10866": {
      "offset": [
        1635,
        1739
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10867": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10868": {
      "offset": [
        1635,
        1739
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10869": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10870": {
      "offset": [
        1635,
        1739
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10871": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10872": {
      "offset": [
        1635,
        1739
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "10873": {
      "offset": [
        1635,
        1739
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10875": {
      "offset": [
        1635,
        1739
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10876": {
      "offset": [
        1635,
        1739
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10877": {
      "offset": [
        1635,
        1739
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "10878": {
      "offset": [
        1635,
        1739
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10879": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6635,
        6636
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 180,
      "value": "0x0"
    },
    "10881": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6618,
        6632
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "10883": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6618,
        6632
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10884": {
      "branch": 340,
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6618,
        6636
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "10885": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2AD8"
    },
    "10888": {
      "branch": 340,
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "10889": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "10891": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10892": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10895": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10897": {
      "op": "SHL"
    },
    "10898": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10902": {
      "op": "MUL"
    },
    "10903": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10904": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10905": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "10907": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "10909": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10910": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10911": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10912": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10913": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10914": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "10916": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10917": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10918": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10919": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "PUSH32",
      "path": "contracts/IsinaToken.sol",
      "value": "0x546F6B656E7320617265206F766572206F722073616C6520697320656E646564"
    },
    "10952": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "10954": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "10955": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10956": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10957": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10958": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10959": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10960": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10961": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10962": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "10963": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "10965": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "10966": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10967": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "10968": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6597,
        6694
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "10969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10975": {
      "op": "SHL"
    },
    "10976": {
      "op": "SUB"
    },
    "10977": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol",
      "statement": 181
    },
    "10978": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "10979": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "10981": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10982": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "10983": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10984": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6748
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "10986": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "10988": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "10989": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "10991": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10992": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "10993": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6759
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "10994": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6771
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2B01"
    },
    "10997": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6771
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "10998": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6764,
        6770
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "10999": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6771
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "11004": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6763
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3041"
    },
    "11007": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6771
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11008": {
      "fn": "IsinaToken.send_private_tokens",
      "jump": "i",
      "offset": [
        6733,
        6771
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "11009": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6733,
        6771
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "11010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11016": {
      "op": "SHL"
    },
    "11017": {
      "op": "SUB"
    },
    "11018": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "11019": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11020": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "11022": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11023": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11024": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11025": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6719
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x12"
    },
    "11027": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "11029": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11030": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11032": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11033": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6730
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "11034": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6771
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11035": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6771
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11036": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6771
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11037": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6704,
        6771
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11038": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6804,
        6828
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 182,
      "value": "0x2B34"
    },
    "11041": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6823,
        6827
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3E8"
    },
    "11044": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6804,
        6818
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x93D"
    },
    "11047": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6804,
        6810
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "11048": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6815,
        6817
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x63"
    },
    "11050": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6804,
        6818
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "11055": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6804,
        6814
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BBF"
    },
    "11058": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6804,
        6818
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11059": {
      "fn": "IsinaToken.send_private_tokens",
      "jump": "i",
      "offset": [
        6804,
        6818
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "11060": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6804,
        6828
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "11061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11067": {
      "op": "SHL"
    },
    "11068": {
      "op": "SUB"
    },
    "11069": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol",
      "statement": 183
    },
    "11070": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11071": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "11073": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11074": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11075": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11076": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6878
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "11078": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "11080": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11081": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11083": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11084": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "11085": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6889
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11086": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6781,
        6828
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11087": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6781,
        6828
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11088": {
      "op": "POP"
    },
    "11089": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6907
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2B60"
    },
    "11092": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6907
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11093": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6781,
        6828
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11094": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6907
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "11099": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6893
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3041"
    },
    "11102": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6907
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11103": {
      "fn": "IsinaToken.send_private_tokens",
      "jump": "i",
      "offset": [
        6865,
        6907
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "11104": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6865,
        6907
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "11105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11111": {
      "op": "SHL"
    },
    "11112": {
      "op": "SUB"
    },
    "11113": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "11114": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11115": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "11117": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11118": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11119": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11120": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6851
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "11122": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "11124": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11125": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11126": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11127": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11129": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11130": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "11131": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6862
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "11132": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6907
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "11133": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6907
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11134": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6907
      ],
      "op": "SWAP4",
      "path": "contracts/IsinaToken.sol"
    },
    "11135": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6838,
        6907
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11136": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6931
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 184,
      "value": "0x16"
    },
    "11138": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6942
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11139": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6942
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11140": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6942
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "11141": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6949
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11142": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6949
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11145": {
      "op": "NOT"
    },
    "11146": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6949
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11147": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6945,
        6949
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1"
    },
    "11149": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6949
      ],
      "op": "OR",
      "path": "contracts/IsinaToken.sol"
    },
    "11150": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6949
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11151": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6917,
        6949
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11152": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        6990
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 185,
      "value": "0xA"
    },
    "11154": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        6990
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11155": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        7020
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2BA8"
    },
    "11158": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        7020
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11159": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7007,
        7019
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11160": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7007,
        7019
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11161": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        7002
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC23"
    },
    "11164": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        7002
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11165": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6995,
        7001
      ],
      "op": "DUP7",
      "path": "contracts/IsinaToken.sol"
    },
    "11166": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        7002
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "11171": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        6994
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "11174": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        7002
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11175": {
      "fn": "IsinaToken.send_private_tokens",
      "jump": "i",
      "offset": [
        6976,
        7002
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "11176": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6976,
        7020
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "11177": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6959,
        6973
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xA"
    },
    "11179": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        6959,
        7020
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11180": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7037,
        7088
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 186,
      "value": "0x1DE8"
    },
    "11183": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7052,
        7061
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "11184": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7063,
        7087
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x1DE3"
    },
    "11187": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7063,
        7069
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "11188": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7074,
        7086
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "11189": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7063,
        7087
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "11194": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7063,
        7073
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x3041"
    },
    "11197": {
      "fn": "IsinaToken.send_private_tokens",
      "offset": [
        7063,
        7087
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11198": {
      "fn": "IsinaToken.send_private_tokens",
      "jump": "i",
      "offset": [
        7063,
        7087
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "11199": {
      "fn": "SafeMath.mul",
      "offset": [
        1693,
        2151
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11200": {
      "fn": "SafeMath.mul",
      "offset": [
        1751,
        1758
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x0"
    },
    "11202": {
      "branch": 352,
      "fn": "SafeMath.mul",
      "offset": [
        1991,
        1997
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11203": {
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x2BCE"
    },
    "11206": {
      "branch": 352,
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11207": {
      "op": "POP"
    },
    "11208": {
      "fn": "SafeMath.mul",
      "offset": [
        2020,
        2021
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 187,
      "value": "0x0"
    },
    "11210": {
      "fn": "SafeMath.mul",
      "offset": [
        2013,
        2021
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0xBD3"
    },
    "11213": {
      "fn": "SafeMath.mul",
      "offset": [
        2013,
        2021
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11214": {
      "fn": "SafeMath.mul",
      "offset": [
        1987,
        2032
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11215": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 188
    },
    "11216": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11217": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11218": {
      "fn": "SafeMath.mul",
      "offset": [
        2058,
        2059
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11219": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2055
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11220": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2059
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11221": {
      "fn": "SafeMath.mul",
      "offset": [
        2054,
        2055
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11222": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 189,
      "value": "0x2BDB"
    },
    "11225": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11226": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "INVALID",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11227": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11228": {
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2082
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11229": {
      "branch": 353,
      "fn": "SafeMath.mul",
      "offset": [
        2077,
        2087
      ],
      "op": "EQ",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11230": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x23E8"
    },
    "11233": {
      "branch": 353,
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11234": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "11236": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11239": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11241": {
      "op": "SHL"
    },
    "11242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11246": {
      "op": "MUL"
    },
    "11247": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11248": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11249": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x4"
    },
    "11251": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11252": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11253": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11254": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "11256": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11257": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11258": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11259": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11260": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11261": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11262": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x21"
    },
    "11264": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11265": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11266": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "11268": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11269": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11270": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x3409"
    },
    "11273": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x21"
    },
    "11275": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11276": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11277": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "11279": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11280": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11281": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11282": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11283": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "11285": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11286": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11287": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11288": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11289": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11290": {
      "fn": "SafeMath.mul",
      "offset": [
        2069,
        2125
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11291": {
      "fn": "SafeMath.div",
      "offset": [
        2606,
        2932
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11292": {
      "fn": "SafeMath.div",
      "offset": [
        2664,
        2671
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x0"
    },
    "11294": {
      "fn": "SafeMath.div",
      "offset": [
        2761,
        2762
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 190
    },
    "11295": {
      "fn": "SafeMath.div",
      "offset": [
        2757,
        2758
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11296": {
      "branch": 354,
      "fn": "SafeMath.div",
      "offset": [
        2757,
        2762
      ],
      "op": "GT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11297": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x2C74"
    },
    "11300": {
      "branch": 354,
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11301": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "11303": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11304": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11307": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11309": {
      "op": "SHL"
    },
    "11310": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11314": {
      "op": "MUL"
    },
    "11315": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11316": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11317": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "11319": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x4"
    },
    "11321": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11322": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11323": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11324": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x1A"
    },
    "11326": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x24"
    },
    "11328": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11329": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11330": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11331": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "11364": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x44"
    },
    "11366": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11367": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11368": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11369": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11370": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11371": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11372": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11373": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11374": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11375": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x64"
    },
    "11377": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11378": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11379": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11380": {
      "fn": "SafeMath.div",
      "offset": [
        2749,
        2793
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11381": {
      "fn": "SafeMath.div",
      "offset": [
        2803,
        2812
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 191,
      "value": "0x0"
    },
    "11383": {
      "fn": "SafeMath.div",
      "offset": [
        2819,
        2820
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11384": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2816
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11385": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11386": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x2C7F"
    },
    "11389": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11390": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "INVALID",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11391": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11392": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11393": {
      "fn": "SafeMath.div",
      "offset": [
        2815,
        2820
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11394": {
      "fn": "SafeMath.div",
      "offset": [
        2606,
        2932
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11395": {
      "op": "POP"
    },
    "11396": {
      "op": "POP"
    },
    "11397": {
      "op": "POP"
    },
    "11398": {
      "op": "POP"
    },
    "11399": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        2606,
        2932
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "11400": {
      "fn": "ERC20._approve",
      "offset": [
        7117,
        7446
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11407": {
      "op": "SHL"
    },
    "11408": {
      "op": "SUB"
    },
    "11409": {
      "fn": "ERC20._approve",
      "offset": [
        7209,
        7228
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 192
    },
    "11410": {
      "branch": 347,
      "fn": "ERC20._approve",
      "offset": [
        7209,
        7228
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11411": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2CD0"
    },
    "11414": {
      "branch": 347,
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11415": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "11417": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11422": {
      "op": "SHL"
    },
    "11423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11427": {
      "op": "MUL"
    },
    "11428": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11429": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11430": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "11432": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11433": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11434": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11435": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "11437": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11438": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11439": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11440": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11441": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11442": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11443": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x24"
    },
    "11445": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11446": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11447": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "11449": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11450": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11451": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x34DD"
    },
    "11454": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x24"
    },
    "11456": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11457": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11458": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "11460": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11461": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11462": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11463": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11464": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "11466": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11467": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11468": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11469": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11470": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11471": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11472": {
      "fn": "ERC20._approve",
      "offset": [
        7201,
        7269
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11479": {
      "op": "SHL"
    },
    "11480": {
      "op": "SUB"
    },
    "11481": {
      "fn": "ERC20._approve",
      "offset": [
        7287,
        7308
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 193
    },
    "11482": {
      "branch": 348,
      "fn": "ERC20._approve",
      "offset": [
        7287,
        7308
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11483": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2D18"
    },
    "11486": {
      "branch": 348,
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11487": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "11489": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11492": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11494": {
      "op": "SHL"
    },
    "11495": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11499": {
      "op": "MUL"
    },
    "11500": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11501": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11502": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "11504": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11505": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11506": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11507": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "11509": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11510": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11511": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11512": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11513": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11514": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11515": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x22"
    },
    "11517": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11518": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11519": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "11521": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11522": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11523": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x33E7"
    },
    "11526": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x22"
    },
    "11528": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11529": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11530": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "11532": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11533": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11534": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11535": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11536": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "11538": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11539": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11540": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11541": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11542": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11543": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11544": {
      "fn": "ERC20._approve",
      "offset": [
        7279,
        7347
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11551": {
      "op": "SHL"
    },
    "11552": {
      "op": "SUB"
    },
    "11553": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 194
    },
    "11554": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11555": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11556": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "11558": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11559": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11560": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11561": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7369
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x1"
    },
    "11563": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "11565": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11566": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11567": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11568": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "11570": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11571": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11572": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7376
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11573": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11574": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "DUP8",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11575": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11576": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11577": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11578": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11579": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11580": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11581": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11582": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11583": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11584": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11585": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7385
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11586": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7393
      ],
      "op": "DUP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11587": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7393
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11588": {
      "fn": "ERC20._approve",
      "offset": [
        7358,
        7393
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11589": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 195
    },
    "11590": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11591": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "DUP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11592": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11593": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11594": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11595": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11596": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "11629": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11630": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11631": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11632": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11633": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11634": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11635": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11636": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11637": {
      "fn": "ERC20._approve",
      "offset": [
        7408,
        7439
      ],
      "op": "LOG3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11638": {
      "fn": "ERC20._approve",
      "offset": [
        7117,
        7446
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11639": {
      "fn": "ERC20._approve",
      "offset": [
        7117,
        7446
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11640": {
      "fn": "ERC20._approve",
      "offset": [
        7117,
        7446
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11641": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        7117,
        7446
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "11642": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23426,
        24546
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "11643": {
      "offset": [
        780,
        790
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x692CDA80"
    },
    "11648": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23561,
        23576
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol"
    },
    "11649": {
      "branch": 341,
      "fn": "IsinaToken._transfer",
      "offset": [
        23561,
        23598
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "11650": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23557,
        24488
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "11651": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23557,
        24488
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FD1"
    },
    "11654": {
      "branch": 341,
      "fn": "IsinaToken._transfer",
      "offset": [
        23557,
        24488
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "11655": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23639,
        23643
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x10"
    },
    "11657": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23639,
        23643
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11664": {
      "op": "SHL"
    },
    "11665": {
      "op": "SUB"
    },
    "11666": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23618,
        23644
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "11667": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23618,
        23644
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11668": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23618,
        23644
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11669": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23639,
        23643
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11670": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23639,
        23643
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11671": {
      "branch": 342,
      "fn": "IsinaToken._transfer",
      "offset": [
        23618,
        23644
      ],
      "op": "EQ",
      "path": "contracts/IsinaToken.sol"
    },
    "11672": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23614,
        24478
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "11673": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23614,
        24478
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2F71"
    },
    "11676": {
      "branch": 342,
      "fn": "IsinaToken._transfer",
      "offset": [
        23614,
        24478
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "11677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11683": {
      "op": "SHL"
    },
    "11684": {
      "op": "SUB"
    },
    "11685": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol",
      "statement": 196
    },
    "11686": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11687": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "11689": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11690": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11691": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11692": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23708
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "11694": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "11696": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11697": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11699": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11700": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "11701": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23716
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11702": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23726
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11703": {
      "op": "GT"
    },
    "11704": {
      "branch": 343,
      "fn": "IsinaToken._transfer",
      "offset": [
        23693,
        23726
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "11705": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2E0C"
    },
    "11708": {
      "branch": 343,
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "11709": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11711": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11712": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11715": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11717": {
      "op": "SHL"
    },
    "11718": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11722": {
      "op": "MUL"
    },
    "11723": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11724": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11725": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "11727": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "11729": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11730": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11731": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11732": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "11734": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "11736": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11737": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11738": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11739": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH32",
      "path": "contracts/IsinaToken.sol",
      "value": "0x546F6B656E73206D75737420626520756E6C6F636B6564000000000000000000"
    },
    "11772": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "11774": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11775": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11776": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11777": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11778": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11779": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11780": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11781": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11782": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "11783": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "11785": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11786": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11787": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "11788": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23664,
        23791
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "11789": {
      "offset": [
        851,
        861
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x692CDA80"
    },
    "11794": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23838,
        23853
      ],
      "op": "TIMESTAMP",
      "path": "contracts/IsinaToken.sol",
      "statement": 197
    },
    "11795": {
      "branch": 344,
      "fn": "IsinaToken._transfer",
      "offset": [
        23838,
        23870
      ],
      "op": "LT",
      "path": "contracts/IsinaToken.sol"
    },
    "11796": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2E51"
    },
    "11799": {
      "branch": 344,
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "11800": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11802": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11807": {
      "op": "SHL"
    },
    "11808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11812": {
      "op": "MUL"
    },
    "11813": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11814": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11815": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "11817": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11818": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11819": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11820": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "11822": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11823": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11824": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11825": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "11826": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11827": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11828": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "11830": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11831": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11832": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "11834": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11835": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11836": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x344A"
    },
    "11839": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2D"
    },
    "11841": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11842": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "CODECOPY",
      "path": "contracts/IsinaToken.sol"
    },
    "11843": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11845": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11846": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11847": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "11848": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "11849": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11851": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11852": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11853": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11854": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "11855": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11856": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "11857": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23809,
        23957
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "11858": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "statement": 198,
      "value": "0x10"
    },
    "11860": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11861": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11863": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11864": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11867": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "11869": {
      "op": "SHL"
    },
    "11870": {
      "op": "PUSH4",
      "value": "0x9444B13"
    },
    "11875": {
      "op": "MUL"
    },
    "11876": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11877": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11884": {
      "op": "SHL"
    },
    "11885": {
      "op": "SUB"
    },
    "11886": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP7",
      "path": "contracts/IsinaToken.sol"
    },
    "11887": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11888": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11889": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "11891": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "11892": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11893": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11894": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "11896": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11897": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11898": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP6",
      "path": "contracts/IsinaToken.sol"
    },
    "11899": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11900": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "11901": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11902": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11903": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11904": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11905": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11906": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "11907": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11908": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24019
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4A225898"
    },
    "11913": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24019
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11914": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "11916": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11917": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "11918": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11919": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11920": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "11922": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "SWAP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11923": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "SWAP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11924": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11925": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "11926": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11927": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "11928": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "11929": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "11930": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "11932": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24008
      ],
      "op": "DUP8",
      "path": "contracts/IsinaToken.sol"
    },
    "11933": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11934": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "EXTCODESIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "11935": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "11936": {
      "op": "DUP1"
    },
    "11937": {
      "op": "ISZERO"
    },
    "11938": {
      "op": "PUSH2",
      "value": "0x2EAA"
    },
    "11941": {
      "op": "JUMPI"
    },
    "11942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11944": {
      "op": "DUP1"
    },
    "11945": {
      "op": "REVERT"
    },
    "11946": {
      "op": "JUMPDEST"
    },
    "11947": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "11948": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "GAS",
      "path": "contracts/IsinaToken.sol"
    },
    "11949": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "CALL",
      "path": "contracts/IsinaToken.sol"
    },
    "11950": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "11951": {
      "op": "DUP1"
    },
    "11952": {
      "op": "ISZERO"
    },
    "11953": {
      "op": "PUSH2",
      "value": "0x2EBE"
    },
    "11956": {
      "op": "JUMPI"
    },
    "11957": {
      "op": "RETURNDATASIZE"
    },
    "11958": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11960": {
      "op": "DUP1"
    },
    "11961": {
      "op": "RETURNDATACOPY"
    },
    "11962": {
      "op": "RETURNDATASIZE"
    },
    "11963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11965": {
      "op": "REVERT"
    },
    "11966": {
      "op": "JUMPDEST"
    },
    "11967": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "11968": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "11969": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "11970": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "11971": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11973": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11974": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "RETURNDATASIZE",
      "path": "contracts/IsinaToken.sol"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11977": {
      "op": "DUP2"
    },
    "11978": {
      "op": "LT"
    },
    "11979": {
      "op": "ISZERO"
    },
    "11980": {
      "op": "PUSH2",
      "value": "0x2ED4"
    },
    "11983": {
      "op": "JUMPI"
    },
    "11984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11986": {
      "op": "DUP1"
    },
    "11987": {
      "op": "REVERT"
    },
    "11988": {
      "op": "JUMPDEST"
    },
    "11989": {
      "op": "POP"
    },
    "11990": {
      "branch": 345,
      "fn": "IsinaToken._transfer",
      "offset": [
        24004,
        24123
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11991": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2F2A"
    },
    "11994": {
      "branch": 345,
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "11995": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "11997": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "11998": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "11999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12003": {
      "op": "SHL"
    },
    "12004": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12008": {
      "op": "MUL"
    },
    "12009": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "12010": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12011": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "12013": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "12015": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "12016": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "12017": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12018": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0xC"
    },
    "12020": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "12022": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "12023": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "12024": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12025": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH32",
      "path": "contracts/IsinaToken.sol",
      "value": "0x42616E6B2070726F626C656D0000000000000000000000000000000000000000"
    },
    "12058": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "12060": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "12061": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "12062": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12063": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12064": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "12065": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12066": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "12067": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12068": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "12069": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "12071": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "12072": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12073": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "12074": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23975,
        24177
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "12075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12081": {
      "op": "SHL"
    },
    "12082": {
      "op": "SUB"
    },
    "12083": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol",
      "statement": 199
    },
    "12084": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "12085": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "12087": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12088": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "12089": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12090": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24236
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "12092": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "12094": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12095": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "12097": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12098": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "12099": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24244
      ],
      "op": "SLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "12100": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24294
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2F53"
    },
    "12103": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24294
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12104": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24270,
        24276
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "12105": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24294
      ],
      "op": "PUSH4",
      "path": "contracts/IsinaToken.sol",
      "value": "0xFFFFFFFF"
    },
    "12110": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24248
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FE1"
    },
    "12113": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24294
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "12114": {
      "fn": "IsinaToken._transfer",
      "jump": "i",
      "offset": [
        24221,
        24294
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "12115": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24221,
        24294
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "12116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12122": {
      "op": "SHL"
    },
    "12123": {
      "op": "SUB"
    },
    "12124": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "DUP5",
      "path": "contracts/IsinaToken.sol"
    },
    "12125": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "AND",
      "path": "contracts/IsinaToken.sol"
    },
    "12126": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x0"
    },
    "12128": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12129": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "12130": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12131": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24210
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x17"
    },
    "12133": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "12135": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12136": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "12138": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12139": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24218
      ],
      "op": "KECCAK256",
      "path": "contracts/IsinaToken.sol"
    },
    "12140": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24195,
        24294
      ],
      "op": "SSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12141": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23614,
        24478
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FD1"
    },
    "12144": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23614,
        24478
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "12145": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23614,
        24478
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "12146": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24372,
        24401
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 200,
      "value": "0x2F7A"
    },
    "12149": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24394,
        24400
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "12150": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24372,
        24393
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x21E4"
    },
    "12153": {
      "fn": "IsinaToken._transfer",
      "jump": "i",
      "offset": [
        24372,
        24401
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "12154": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24372,
        24401
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "12155": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24362,
        24368
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "12156": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24362,
        24401
      ],
      "op": "GT",
      "path": "contracts/IsinaToken.sol"
    },
    "12157": {
      "branch": 346,
      "fn": "IsinaToken._transfer",
      "offset": [
        24362,
        24401
      ],
      "op": "ISZERO",
      "path": "contracts/IsinaToken.sol"
    },
    "12158": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x2FD1"
    },
    "12161": {
      "branch": 346,
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "JUMPI",
      "path": "contracts/IsinaToken.sol"
    },
    "12162": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x40"
    },
    "12164": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "DUP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12165": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "12166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12168": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12170": {
      "op": "SHL"
    },
    "12171": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12175": {
      "op": "MUL"
    },
    "12176": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "12177": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12178": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x20"
    },
    "12180": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4"
    },
    "12182": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "12183": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "12184": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12185": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x14"
    },
    "12187": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x24"
    },
    "12189": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "12190": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "12191": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12192": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH32",
      "path": "contracts/IsinaToken.sol",
      "value": "0x4E6F20617661696C61626C652062616C616E6365000000000000000000000000"
    },
    "12225": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x44"
    },
    "12227": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "DUP3",
      "path": "contracts/IsinaToken.sol"
    },
    "12228": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "12229": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "MSTORE",
      "path": "contracts/IsinaToken.sol"
    },
    "12230": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12231": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "MLOAD",
      "path": "contracts/IsinaToken.sol"
    },
    "12232": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12233": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "DUP2",
      "path": "contracts/IsinaToken.sol"
    },
    "12234": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12235": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "SUB",
      "path": "contracts/IsinaToken.sol"
    },
    "12236": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "PUSH1",
      "path": "contracts/IsinaToken.sol",
      "value": "0x64"
    },
    "12238": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "ADD",
      "path": "contracts/IsinaToken.sol"
    },
    "12239": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "SWAP1",
      "path": "contracts/IsinaToken.sol"
    },
    "12240": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "REVERT",
      "path": "contracts/IsinaToken.sol"
    },
    "12241": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24333,
        24463
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "12242": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24497,
        24539
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "statement": 201,
      "value": "0x2FDC"
    },
    "12245": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24513,
        24519
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "12246": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24521,
        24530
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "12247": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24532,
        24538
      ],
      "op": "DUP4",
      "path": "contracts/IsinaToken.sol"
    },
    "12248": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24497,
        24512
      ],
      "op": "PUSH2",
      "path": "contracts/IsinaToken.sol",
      "value": "0x317A"
    },
    "12251": {
      "fn": "IsinaToken._transfer",
      "jump": "i",
      "offset": [
        24497,
        24539
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "12252": {
      "fn": "IsinaToken._transfer",
      "offset": [
        24497,
        24539
      ],
      "op": "JUMPDEST",
      "path": "contracts/IsinaToken.sol"
    },
    "12253": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23426,
        24546
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "12254": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23426,
        24546
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "12255": {
      "fn": "IsinaToken._transfer",
      "offset": [
        23426,
        24546
      ],
      "op": "POP",
      "path": "contracts/IsinaToken.sol"
    },
    "12256": {
      "fn": "IsinaToken._transfer",
      "jump": "o",
      "offset": [
        23426,
        24546
      ],
      "op": "JUMP",
      "path": "contracts/IsinaToken.sol"
    },
    "12257": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1453
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12258": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x0"
    },
    "12260": {
      "fn": "SafeMath.sub",
      "offset": [
        1364,
        1365
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 202
    },
    "12261": {
      "fn": "SafeMath.sub",
      "offset": [
        1359,
        1360
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12262": {
      "fn": "SafeMath.sub",
      "offset": [
        1359,
        1365
      ],
      "op": "GT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12263": {
      "branch": 355,
      "fn": "SafeMath.sub",
      "offset": [
        1359,
        1365
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12264": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x303B"
    },
    "12267": {
      "branch": 355,
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12268": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "12270": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12271": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12274": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12276": {
      "op": "SHL"
    },
    "12277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12281": {
      "op": "MUL"
    },
    "12282": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12283": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12284": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "12286": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x4"
    },
    "12288": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12289": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12290": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12291": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x1E"
    },
    "12293": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x24"
    },
    "12295": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12296": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12297": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12298": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "12331": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x44"
    },
    "12333": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12334": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12335": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12336": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12337": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12338": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12339": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12340": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12341": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12342": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x64"
    },
    "12344": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12345": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12346": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12347": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1400
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12348": {
      "op": "POP"
    },
    "12349": {
      "fn": "SafeMath.sub",
      "offset": [
        1422,
        1427
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 203
    },
    "12350": {
      "fn": "SafeMath.sub",
      "offset": [
        1422,
        1427
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12351": {
      "fn": "SafeMath.sub",
      "offset": [
        1422,
        1427
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12352": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1453
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12353": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12354": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x0"
    },
    "12356": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 204
    },
    "12357": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12358": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12359": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "statement": 205
    },
    "12360": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12361": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12362": {
      "branch": 356,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12363": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x23E8"
    },
    "12366": {
      "branch": 356,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12367": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x40"
    },
    "12369": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12370": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12375": {
      "op": "SHL"
    },
    "12376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12380": {
      "op": "MUL"
    },
    "12381": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12382": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12383": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x20"
    },
    "12385": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x4"
    },
    "12387": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12388": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12389": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12390": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x1B"
    },
    "12392": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x24"
    },
    "12394": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12395": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12396": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12397": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "12430": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x44"
    },
    "12432": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12433": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12434": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12435": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12436": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12437": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12438": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12439": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12440": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12441": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol",
      "value": "0x64"
    },
    "12443": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12444": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12445": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/math/SafeMath.sol"
    },
    "12446": {
      "fn": "ERC20._burn",
      "offset": [
        6392,
        6692
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12453": {
      "op": "SHL"
    },
    "12454": {
      "op": "SUB"
    },
    "12455": {
      "fn": "ERC20._burn",
      "offset": [
        6466,
        6487
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 206
    },
    "12456": {
      "branch": 349,
      "fn": "ERC20._burn",
      "offset": [
        6466,
        6487
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12457": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x30E6"
    },
    "12460": {
      "branch": 349,
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12461": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12463": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12468": {
      "op": "SHL"
    },
    "12469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12473": {
      "op": "MUL"
    },
    "12474": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12475": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12476": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "12478": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12479": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12480": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12481": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12483": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12484": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12485": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12486": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12487": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12488": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12489": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x21"
    },
    "12491": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12492": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12493": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12495": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12496": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12497": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x3477"
    },
    "12500": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x21"
    },
    "12502": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12503": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12504": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12506": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12507": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12508": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12509": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12510": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12512": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12513": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12514": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12515": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12516": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12517": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12518": {
      "fn": "ERC20._burn",
      "offset": [
        6458,
        6525
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12519": {
      "fn": "ERC20._burn",
      "offset": [
        6551,
        6563
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 207,
      "value": "0x2"
    },
    "12521": {
      "fn": "ERC20._burn",
      "offset": [
        6551,
        6563
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12522": {
      "fn": "ERC20._burn",
      "offset": [
        6551,
        6574
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x30F9"
    },
    "12525": {
      "fn": "ERC20._burn",
      "offset": [
        6551,
        6574
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12526": {
      "fn": "ERC20._burn",
      "offset": [
        6568,
        6573
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12527": {
      "fn": "ERC20._burn",
      "offset": [
        6551,
        6574
      ],
      "op": "PUSH4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xFFFFFFFF"
    },
    "12532": {
      "fn": "ERC20._burn",
      "offset": [
        6551,
        6567
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2FE1"
    },
    "12535": {
      "fn": "ERC20._burn",
      "offset": [
        6551,
        6574
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12536": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6551,
        6574
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12537": {
      "fn": "ERC20._burn",
      "offset": [
        6551,
        6574
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12538": {
      "fn": "ERC20._burn",
      "offset": [
        6536,
        6548
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2"
    },
    "12540": {
      "fn": "ERC20._burn",
      "offset": [
        6536,
        6574
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12547": {
      "op": "SHL"
    },
    "12548": {
      "op": "SUB"
    },
    "12549": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 208
    },
    "12550": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12551": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6614
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "12553": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12554": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12555": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12556": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12558": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12559": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12560": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12561": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12563": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12564": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12565": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6623
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12566": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6634
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x3125"
    },
    "12569": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6634
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12570": {
      "fn": "ERC20._burn",
      "offset": [
        6628,
        6633
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12571": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6634
      ],
      "op": "PUSH4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xFFFFFFFF"
    },
    "12576": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6627
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2FE1"
    },
    "12579": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6634
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12580": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        6605,
        6634
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12581": {
      "fn": "ERC20._burn",
      "offset": [
        6605,
        6634
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12588": {
      "op": "SHL"
    },
    "12589": {
      "op": "SUB"
    },
    "12590": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12591": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12592": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6593
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "12594": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12595": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12596": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12597": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12599": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12600": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12601": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12602": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12604": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12605": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12606": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6602
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12607": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6634
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12608": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6634
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12609": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6634
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12610": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6634
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12611": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 209
    },
    "12612": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12613": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "DUP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12614": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12615": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12616": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12617": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12618": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6593
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12619": {
      "fn": "ERC20._burn",
      "offset": [
        6584,
        6593
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12620": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12653": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12654": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12655": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12656": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12657": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12658": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12659": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12660": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12661": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12662": {
      "fn": "ERC20._burn",
      "offset": [
        6649,
        6685
      ],
      "op": "LOG3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12663": {
      "fn": "ERC20._burn",
      "offset": [
        6392,
        6692
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12664": {
      "fn": "ERC20._burn",
      "offset": [
        6392,
        6692
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12665": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        6392,
        6692
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12666": {
      "fn": "ERC20._transfer",
      "offset": [
        5079,
        5501
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12673": {
      "op": "SHL"
    },
    "12674": {
      "op": "SUB"
    },
    "12675": {
      "fn": "ERC20._transfer",
      "offset": [
        5176,
        5196
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 210
    },
    "12676": {
      "branch": 350,
      "fn": "ERC20._transfer",
      "offset": [
        5176,
        5196
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12677": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x31C2"
    },
    "12680": {
      "branch": 350,
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12681": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12683": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12688": {
      "op": "SHL"
    },
    "12689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12693": {
      "op": "MUL"
    },
    "12694": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12695": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12696": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "12698": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12699": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12700": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12701": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12703": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12704": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12705": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12706": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12707": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12708": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12709": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x25"
    },
    "12711": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12712": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12713": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12715": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12716": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12717": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x3498"
    },
    "12720": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x25"
    },
    "12722": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12723": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12724": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12726": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12727": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12728": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12729": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12730": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12732": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12733": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12734": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12735": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12736": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12737": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12738": {
      "fn": "ERC20._transfer",
      "offset": [
        5168,
        5238
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12745": {
      "op": "SHL"
    },
    "12746": {
      "op": "SUB"
    },
    "12747": {
      "fn": "ERC20._transfer",
      "offset": [
        5256,
        5279
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 211
    },
    "12748": {
      "branch": 351,
      "fn": "ERC20._transfer",
      "offset": [
        5256,
        5279
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12749": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x320A"
    },
    "12752": {
      "branch": 351,
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12753": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12755": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12758": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12760": {
      "op": "SHL"
    },
    "12761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12765": {
      "op": "MUL"
    },
    "12766": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12767": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12768": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x4"
    },
    "12770": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12771": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12772": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12773": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12775": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12776": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12777": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12778": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12779": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12780": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12781": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x23"
    },
    "12783": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12784": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12785": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12787": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12788": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12789": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x3372"
    },
    "12792": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x23"
    },
    "12794": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12795": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12796": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12798": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12799": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12800": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12801": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12802": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12804": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12805": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12806": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12807": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12808": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12809": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12810": {
      "fn": "ERC20._transfer",
      "offset": [
        5248,
        5319
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12817": {
      "op": "SHL"
    },
    "12818": {
      "op": "SUB"
    },
    "12819": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "DUP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 212
    },
    "12820": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12821": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5359
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "12823": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12824": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12825": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12826": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12828": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12829": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12830": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12831": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12833": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12834": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12835": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5367
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12836": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5379
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x3233"
    },
    "12839": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5379
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12840": {
      "fn": "ERC20._transfer",
      "offset": [
        5372,
        5378
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12841": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5379
      ],
      "op": "PUSH4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xFFFFFFFF"
    },
    "12846": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5371
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x2FE1"
    },
    "12849": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5379
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12850": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5350,
        5379
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12851": {
      "fn": "ERC20._transfer",
      "offset": [
        5350,
        5379
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12858": {
      "op": "SHL"
    },
    "12859": {
      "op": "SUB"
    },
    "12860": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12861": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "DUP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12862": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12863": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5339
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "12865": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12866": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12867": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12868": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12870": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12871": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12872": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12873": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12875": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12876": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12877": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5347
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12878": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5379
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12879": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5379
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12880": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5379
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12881": {
      "fn": "ERC20._transfer",
      "offset": [
        5330,
        5379
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12882": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5432
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 213
    },
    "12883": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5432
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12884": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5432
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12885": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5432
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12886": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5432
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12887": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5432
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12888": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5432
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12889": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5444
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x3268"
    },
    "12892": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5444
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12893": {
      "fn": "ERC20._transfer",
      "offset": [
        5437,
        5443
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12894": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5444
      ],
      "op": "PUSH4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xFFFFFFFF"
    },
    "12899": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5436
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x3041"
    },
    "12902": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5444
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12903": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5412,
        5444
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12904": {
      "fn": "ERC20._transfer",
      "offset": [
        5412,
        5444
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12911": {
      "op": "SHL"
    },
    "12912": {
      "op": "SUB"
    },
    "12913": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12914": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12915": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12916": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5398
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x0"
    },
    "12918": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12919": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12920": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12921": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x20"
    },
    "12923": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12924": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12925": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12926": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0x40"
    },
    "12928": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12929": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12930": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12931": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "KECCAK256",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12932": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5444
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12933": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5444
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12934": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5444
      ],
      "op": "SWAP5",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12935": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5444
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12936": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "statement": 214
    },
    "12937": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12938": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "DUP6",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12939": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12940": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12941": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12942": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12943": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12944": {
      "fn": "ERC20._transfer",
      "offset": [
        5389,
        5409
      ],
      "op": "SWAP4",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12945": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12946": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "DUP8",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12947": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12948": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12949": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12982": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12983": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12984": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12985": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12986": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12987": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12988": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12989": {
      "fn": "ERC20._transfer",
      "offset": [
        5459,
        5494
      ],
      "op": "LOG3",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12990": {
      "fn": "ERC20._transfer",
      "offset": [
        5079,
        5501
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12991": {
      "fn": "ERC20._transfer",
      "offset": [
        5079,
        5501
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12992": {
      "fn": "ERC20._transfer",
      "offset": [
        5079,
        5501
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12993": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        5079,
        5501
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol"
    },
    "12994": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2094,
        2319
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "12995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12999": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13001": {
      "op": "SHL"
    },
    "13002": {
      "op": "SUB"
    },
    "13003": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2167,
        2189
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 215
    },
    "13004": {
      "branch": 357,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2167,
        2189
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13005": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x330A"
    },
    "13008": {
      "branch": 357,
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "JUMPI",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13009": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "13011": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13016": {
      "op": "SHL"
    },
    "13017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13021": {
      "op": "MUL"
    },
    "13022": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13023": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13024": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x4"
    },
    "13026": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13027": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13028": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13029": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "13031": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13032": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13033": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13034": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13035": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13036": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13037": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x26"
    },
    "13039": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13040": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13041": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x20"
    },
    "13043": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13044": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13045": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x33C1"
    },
    "13048": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x26"
    },
    "13050": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13051": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "CODECOPY",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13052": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "13054": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "ADD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13055": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13056": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13057": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "POP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13058": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "13060": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13061": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13062": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13063": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SUB",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13064": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13065": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "REVERT",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13066": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2159,
        2232
      ],
      "op": "JUMPDEST",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13067": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 216,
      "value": "0x5"
    },
    "13069": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13070": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x40"
    },
    "13072": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "MLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13079": {
      "op": "SHL"
    },
    "13080": {
      "op": "SUB"
    },
    "13081": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13082": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "DUP5",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13083": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13084": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13085": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x100"
    },
    "13088": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13089": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "DIV",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13090": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13091": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2268,
        2274
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13092": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "PUSH32",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "13125": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13126": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x0"
    },
    "13128": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13129": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2247,
        2285
      ],
      "op": "LOG3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13130": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2301
      ],
      "op": "PUSH1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "statement": 217,
      "value": "0x5"
    },
    "13132": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "DUP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13133": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SLOAD",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13140": {
      "op": "SHL"
    },
    "13141": {
      "op": "SUB"
    },
    "13142": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13143": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13144": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13145": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "PUSH2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol",
      "value": "0x100"
    },
    "13148": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "MUL",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13149": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13154": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "13156": {
      "op": "SHL"
    },
    "13157": {
      "op": "SUB"
    },
    "13158": {
      "op": "NOT"
    },
    "13159": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13160": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP3",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13161": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "AND",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13162": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13163": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13164": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP2",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13165": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "OR",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13166": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SWAP1",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13167": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2295,
        2312
      ],
      "op": "SSTORE",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    },
    "13168": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2094,
        2319
      ],
      "op": "JUMP",
      "path": "contracts/open-zeppelin/contracts/ownership/Ownable.sol"
    }
  },
  "sha1": "ee020695c60275daeddbd1f6647249b629915c1a",
  "source": "pragma solidity^0.5.0;\n\n// import \"https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20.sol\";\n// import \"https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/token/ERC20/ERC20Detailed.sol\";\n//import \"https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\";\nimport \"contracts/open-zeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"contracts/open-zeppelin/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"contracts/open-zeppelin/contracts/ownership/Ownable.sol\";\nimport \"./IsinaBank.sol\";\n\ncontract IsinaToken is ERC20, ERC20Detailed, Ownable {\n    using SafeMath for uint256;\n\n    uint256 constant public UNLOCK_TIME = 1;\n    uint256 constant public STOP_ALL_LOCKS_TIME = 1764547200; // 01.12.2025\n    uint256 constant public STOP_SELL_TIME = 1764547200;\n\n    uint256 public team_tokens;\n    uint256 public marketing_tokens;\n    uint256 public reserve_tokens;\n    uint256 public seed_tokens;\n    uint256 public private_tokens;\n    uint256 public launchpad_tokens;\n\n    address public tokens_holder;\n    address public team;\n    address public marketing;\n    address public reserve;\n\n    IsinaBank public bank;\n\n    mapping(address => uint256) public seed_balance;\n    mapping(address => uint256) public private_balance;\n    mapping(address => uint256) public seed_bonus;\n    mapping(address => uint256) public private_bonus;\n    mapping(address => bool) public seed_locked;\n    mapping(address => bool) public private_locked;\n    mapping(address => uint256) public tokens_for_sell;\n\n    modifier only_tokens_holder() {\n        require(\n            msg.sender == tokens_holder,\n            \"Sender must be a tokens holder\"\n        );\n        _;\n    }\n\n    modifier after_unlock_time() {\n        require(\n            block.timestamp >= UNLOCK_TIME,\n            \"The time must be longer than the unlock time\"\n        );\n        _;\n    }\n\n    constructor(\n        address _tokens_holder,\n        address _team,\n        address _marketing,\n        address _reserve\n    )\n        public\n        ERC20Detailed(\"Isina Token\", \"ISN\", 18)\n    {\n        tokens_holder = _tokens_holder;\n        seed_tokens = 102203100 * (10 ** uint256(decimals()));\n        private_tokens = 163524960 * (10 ** uint256(decimals()));\n        launchpad_tokens = 81762480 * (10 ** uint256(decimals()));\n        _mint(tokens_holder, seed_tokens + private_tokens + launchpad_tokens);\n        team = _team;\n        team_tokens = 28616868 * (10 ** uint256(decimals()));\n        _mint(team, team_tokens);\n        marketing = _marketing;\n        marketing_tokens = 4088124 * (10 ** uint256(decimals()));\n        _mint(marketing, marketing_tokens);\n        reserve = _reserve;\n        reserve_tokens = 28616868 * (10 ** uint256(decimals()));\n        _mint(reserve, reserve_tokens);\n    }\n\n    function transfer_from_bank(\n        address recipient,\n        uint256 amount\n    )\n        external\n        onlyOwner\n    {\n        super._transfer(address(bank), recipient, amount);\n    }\n\n    function unlock_seed() external after_unlock_time {\n        require(\n            seed_locked[msg.sender],\n            \"Tokens must be unlocked\"\n        );\n        require(\n            block.timestamp < STOP_SELL_TIME,\n            \"The time must be less than the stop sell time\"\n        );\n        seed_locked[msg.sender] = false;\n        tokens_for_sell[msg.sender] = tokens_for_sell[msg.sender].add(\n            seed_balance[msg.sender].sub(\n                get_available_seed_balance(msg.sender)\n            )\n        );\n        seed_balance[msg.sender] = 0;\n        tokens_for_sell[msg.sender] = tokens_for_sell[msg.sender].add(\n            seed_bonus[msg.sender].sub(\n                get_available_seed_bonus(msg.sender)\n            )\n        );\n        seed_bonus[msg.sender] = 0;\n    }\n\n    function unlock_private() external after_unlock_time {\n        require(\n            private_locked[msg.sender],\n            \"Tokens must be unlocked\"\n        );\n        require(\n            block.timestamp < STOP_SELL_TIME,\n            \"The time must be less than the stop sell time\"\n        );\n        private_locked[msg.sender] = false;\n        tokens_for_sell[msg.sender] = tokens_for_sell[msg.sender].add(\n            private_balance[msg.sender].sub(\n                get_available_private_balance(msg.sender)\n            )\n        );\n        private_balance[msg.sender] = 0;\n        tokens_for_sell[msg.sender] = tokens_for_sell[msg.sender].add(\n            private_bonus[msg.sender].sub(\n                get_available_private_bonus(msg.sender)\n            )\n        );\n        private_bonus[msg.sender] = 0;\n    }\n\n    function burn_seed_tokens() external only_tokens_holder {\n        _burn(tokens_holder, seed_tokens);\n        seed_tokens = 0;\n    }\n\n    function burn_private_tokens() external only_tokens_holder {\n        _burn(tokens_holder, private_tokens);\n        private_tokens = 0;\n    }\n\n    function burn_launchpad_tokens() external only_tokens_holder {\n        _burn(tokens_holder, launchpad_tokens);\n        launchpad_tokens = 0;\n    }\n\n    function set_bank(address payable bank_address) external onlyOwner {\n        bank = IsinaBank(bank_address);\n    }\n\n    function transfer(\n        address recipient,\n        uint256 amount\n    )\n        public\n        returns (bool)\n    {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    )\n        public\n        returns (bool)\n    {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            msg.sender,\n            allowance(sender, msg.sender).sub(amount)\n        );\n        return true;\n    }\n\n    function send_seed_tokens(\n        address recipient,\n        uint256 amount\n    )\n        public\n        only_tokens_holder\n        returns (bool)\n    {\n        require(\n            seed_tokens > 0,\n            \"Tokens are over or sale is ended\"\n        );\n        seed_balance[recipient] = seed_balance[recipient].add(amount);\n        uint256 bonus_amount = amount.mul(1496).div(10000);\n        seed_bonus[recipient] = seed_bonus[recipient].add(bonus_amount);\n        seed_locked[recipient] = true;\n        seed_tokens = seed_tokens.sub(amount).sub(bonus_amount);\n        return super.transfer(recipient, amount.add(bonus_amount));\n    }\n\n    function send_private_tokens(\n        address recipient,\n        uint256 amount\n    )\n        public\n        only_tokens_holder\n        returns (bool)\n    {\n        require(\n            private_tokens > 0,\n            \"Tokens are over or sale is ended\"\n        );\n        private_balance[recipient] = private_balance[recipient].add(amount);\n        uint256 bonus_amount = amount.mul(99).div(1000);\n        private_bonus[recipient] = private_bonus[recipient].add(bonus_amount);\n        private_locked[recipient] = true;\n        private_tokens = private_tokens.sub(amount).sub(bonus_amount);\n        return super.transfer(recipient, amount.add(bonus_amount));\n    }\n\n    function send_launchpad_tokens(\n        address recipient,\n        uint256 amount\n    )\n        public\n        only_tokens_holder\n        returns (bool)\n    {\n        require(\n            launchpad_tokens > 0,\n            \"Tokens are over or sale is ended\"\n        );\n        launchpad_tokens = launchpad_tokens.sub(amount);\n        return super.transfer(recipient, amount);\n    }\n\n    function get_available_balance(\n        address sender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        uint256 available_balance = balanceOf(sender);\n        if (sender == team) {\n            available_balance = available_balance.sub(\n                team_tokens.sub(\n                    get_available_team_balance()\n                )\n            );\n        }\n        if (sender == marketing) {\n            available_balance = available_balance.sub(\n                marketing_tokens.sub(\n                    get_available_marketing_balance()\n                )\n            );\n        }\n        if (sender == reserve) {\n            available_balance = available_balance.sub(\n                    reserve_tokens.sub(\n                        get_available_reserve_balance()\n                    )\n            );\n        }\n        if (seed_locked[sender]) {\n            available_balance = available_balance.sub(\n                seed_balance[sender].sub(\n                    get_available_seed_balance(sender)\n                )\n            );\n            available_balance = available_balance.sub(\n                seed_bonus[sender].sub(\n                    get_available_seed_bonus(sender)\n                )\n            );\n        }\n        if (private_locked[sender]) {\n            available_balance = available_balance.sub(\n                private_balance[sender].sub(\n                    get_available_private_balance(sender)\n                )\n            );\n            available_balance = available_balance.sub(\n                private_bonus[sender].sub(\n                    get_available_private_bonus(sender)\n                )\n            );\n        }\n        available_balance = available_balance.sub(tokens_for_sell[sender]);\n        return (available_balance);\n    }\n\n    function get_available_team_balance()\n        public\n        view\n        returns (uint256)\n    {\n        if (block.timestamp < 1590969600) { // 01.06.2020\n            return 0;\n        } else if (block.timestamp < 1614556800) { // 01.03.2021\n            return team_tokens.mul(10).div(100);\n        } else if (block.timestamp < 1646092800) { // 01.03.2022\n            return team_tokens.mul(20).div(100);\n        } else if (block.timestamp < 1669852800) { // 01.12.2022\n            return team_tokens.mul(30).div(100);\n        } else if (block.timestamp < 1677628800) { // 01.03.2023\n            return team_tokens.mul(35).div(100);\n        } else if (block.timestamp < 1690848000) { // 01.08.2023\n            return team_tokens.mul(40).div(100);\n        } else if (block.timestamp < 1706745600) { // 01.02.2024\n            return team_tokens.mul(45).div(100);\n        } else if (block.timestamp < 1711929600) { // 01.04.2024\n            return team_tokens.mul(50).div(100);\n        } else if (block.timestamp < 1722470400) { // 01.08.2024\n            return team_tokens.mul(55).div(100);\n        } else if (block.timestamp < 1727740800) { // 01.10.2024\n            return team_tokens.mul(60).div(100);\n        } else if (block.timestamp < 1733011200) { // 01.12.2024\n            return team_tokens.mul(65).div(100);\n        } else if (block.timestamp < 1740787200) { // 01.03.2025\n            return team_tokens.mul(70).div(100);\n        } else if (block.timestamp < 1751328000) { // 01.07.2025\n            return team_tokens.mul(80).div(100);\n        } else if (block.timestamp < 1764547200) { // 01.12.2025\n            return team_tokens.mul(90).div(100);\n        } else {\n            return team_tokens;\n        }\n    }\n\n    function get_available_marketing_balance()\n        public\n        view\n        returns (uint256)\n    {\n        if (block.timestamp < 1588291200) { // 01.05.2020\n            return 0;\n        } else if (block.timestamp < 1614556800) { // 01.03.2021\n            return marketing_tokens.mul(10).div(100);\n        } else if (block.timestamp < 1648771200) { // 01.04.2022\n            return marketing_tokens.mul(20).div(100);\n        } else if (block.timestamp < 1656633600) { // 01.07.2022\n            return marketing_tokens.mul(30).div(100);\n        } else if (block.timestamp < 1669852800) { // 01.12.2022\n            return marketing_tokens.mul(35).div(100);\n        } else if (block.timestamp < 1682899200) { // 01.05.2023\n            return marketing_tokens.mul(40).div(100);\n        } else if (block.timestamp < 1690848000) { // 01.08.2023\n            return marketing_tokens.mul(50).div(100);\n        } else if (block.timestamp < 1711929600) { // 01.04.2024\n            return marketing_tokens.mul(55).div(100);\n        } else if (block.timestamp < 1722470400) { // 01.08.2024\n            return marketing_tokens.mul(60).div(100);\n        } else if (block.timestamp < 1733011200) { // 01.12.2024\n            return marketing_tokens.mul(65).div(100);\n        } else if (block.timestamp < 1743465600) { // 01.04.2025\n            return marketing_tokens.mul(70).div(100);\n        } else if (block.timestamp < 1754006400) { // 01.08.2025\n            return marketing_tokens.mul(80).div(100);\n        } else if (block.timestamp < 1764547200) { // 01.12.2025\n            return marketing_tokens.mul(90).div(100);\n        } else {\n            return marketing_tokens;\n        }\n    }\n\n    function get_available_reserve_balance()\n        public\n        view\n        returns (uint256)\n    {\n        if (block.timestamp < 1598918400) { // 01.09.2020\n            return 0;\n        } else if (block.timestamp < 1619827200) { // 01.05.2021\n            return reserve_tokens.mul(10).div(100);\n        } else if (block.timestamp < 1630454400) { // 01.09.2021\n            return reserve_tokens.mul(15).div(100);\n        } else if (block.timestamp < 1654041600) { // 01.06.2022\n            return reserve_tokens.mul(20).div(100);\n        } else if (block.timestamp < 1664582400) { // 01.10.2022\n            return reserve_tokens.mul(25).div(100);\n        } else if (block.timestamp < 1682899200) { // 01.05.2023\n            return reserve_tokens.mul(30).div(100);\n        } else if (block.timestamp < 1690848000) { // 01.08.2023\n            return reserve_tokens.mul(40).div(100);\n        } else if (block.timestamp < 1714521600) { // 01.05.2024\n            return reserve_tokens.mul(45).div(100);\n        } else if (block.timestamp < 1719792000) { // 01.07.2024\n            return reserve_tokens.mul(55).div(100);\n        } else if (block.timestamp < 1727740800) { // 01.10.2024\n            return reserve_tokens.mul(60).div(100);\n        } else if (block.timestamp < 1733011200) { // 01.12.2024\n            return reserve_tokens.mul(65).div(100);\n        } else if (block.timestamp < 1746057600) { // 01.05.2025\n            return reserve_tokens.mul(70).div(100);\n        } else if (block.timestamp < 1756684800) { // 01.09.2025\n            return reserve_tokens.mul(80).div(100);\n        } else if (block.timestamp < 1764547200) { // 01.12.2025\n            return reserve_tokens.mul(90).div(100);\n        } else {\n            return reserve_tokens;\n        }\n    }\n\n    function get_available_seed_balance(\n        address sender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        if (block.timestamp < 1575158400) { // 01.12.2019\n            return 0;\n        } else if (block.timestamp < 1583020800) { // 01.03.2020\n            return seed_balance[sender].mul(20).div(100);\n        } else if (block.timestamp < 1593561600) { // 01.07.2020\n            return seed_balance[sender].mul(25).div(100);\n        } else if (block.timestamp < 1606780800) { // 01.12.2020\n            return seed_balance[sender].mul(30).div(100);\n        } else if (block.timestamp < 1617235200) { // 01.04.2021\n            return seed_balance[sender].mul(35).div(100);\n        } else if (block.timestamp < 1625097600) { // 01.07.2021\n            return seed_balance[sender].mul(40).div(100);\n        } else if (block.timestamp < 1633046400) { // 01.10.2021\n            return seed_balance[sender].mul(45).div(100);\n        } else if (block.timestamp < 1638316800) { // 01.12.2021\n            return seed_balance[sender].mul(50).div(100);\n        } else if (block.timestamp < 1646092800) { // 01.03.2022\n            return seed_balance[sender].mul(55).div(100);\n        } else if (block.timestamp < 1654041600) { // 01.06.2022\n            return seed_balance[sender].mul(60).div(100);\n        } else if (block.timestamp < 1661990400) { // 01.09.2022\n            return seed_balance[sender].mul(65).div(100);\n        } else if (block.timestamp < 1669852800) { // 01.12.2022\n            return seed_balance[sender].mul(70).div(100);\n        } else if (block.timestamp < 1677628800) { // 01.03.2023\n            return seed_balance[sender].mul(75).div(100);\n        } else if (block.timestamp < 1682899200) { // 01.05.2023\n            return seed_balance[sender].mul(80).div(100);\n        } else if (block.timestamp < 1688169600) { // 01.07.2023\n            return seed_balance[sender].mul(85).div(100);\n        } else if (block.timestamp < 1696118400) { // 01.10.2023\n            return seed_balance[sender].mul(90).div(100);\n        } else if (block.timestamp < 1701388800) { // 01.12.2023\n            return seed_balance[sender].mul(95).div(100);\n        } else {\n            return seed_balance[sender];\n        }\n    }\n\n    function get_available_private_balance(\n        address sender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        if (block.timestamp < 1575158400) { // 01.12.2019\n            return 0;\n        } else if (block.timestamp < 1580515200) { // 01.02.2020\n            return private_balance[sender].mul(15).div(100);\n        } else if (block.timestamp < 1588291200) { // 01.05.2020\n            return private_balance[sender].mul(20).div(100);\n        } else if (block.timestamp < 1606780800) { // 01.12.2020\n            return private_balance[sender].mul(25).div(100);\n        } else if (block.timestamp < 1617235200) { // 01.04.2021\n            return private_balance[sender].mul(30).div(100);\n        } else if (block.timestamp < 1619827200) { // 01.05.2021\n            return private_balance[sender].mul(35).div(100);\n        } else if (block.timestamp < 1627776000) { // 01.08.2021\n            return private_balance[sender].mul(40).div(100);\n        } else if (block.timestamp < 1638316800) { // 01.12.2021\n            return private_balance[sender].mul(45).div(100);\n        } else if (block.timestamp < 1646092800) { // 01.03.2022\n            return private_balance[sender].mul(50).div(100);\n        } else if (block.timestamp < 1656633600) { // 01.07.2022\n            return private_balance[sender].mul(55).div(100);\n        } else if (block.timestamp < 1664582400) { // 01.10.2022\n            return private_balance[sender].mul(60).div(100);\n        } else if (block.timestamp < 1669852800) { // 01.12.2022\n            return private_balance[sender].mul(65).div(100);\n        } else if (block.timestamp < 1680307200) { // 01.04.2023\n            return private_balance[sender].mul(70).div(100);\n        } else if (block.timestamp < 1688169600) { // 01.07.2023\n            return private_balance[sender].mul(75).div(100);\n        } else if (block.timestamp < 1696118400) { // 01.10.2023\n            return private_balance[sender].mul(80).div(100);\n        } else if (block.timestamp < 1701388800) { // 01.12.2023\n            return private_balance[sender].mul(85).div(100);\n        } else if (block.timestamp < 1709251200) { // 01.03.2024\n            return private_balance[sender].mul(90).div(100);\n        } else if (block.timestamp < 1719792000) { // 01.07.2024\n            return private_balance[sender].mul(95).div(100);\n        } else {\n            return private_balance[sender];\n        }\n    }\n\n    function get_available_seed_bonus(\n        address sender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        uint256 available_bonus = seed_bonus[sender].div(17);\n        if (block.timestamp < 1575158400) { // 01.12.2019\n            return 0;\n        } else if (block.timestamp < 1583020800) { // 01.03.2020\n            return available_bonus;\n        } else if (block.timestamp < 1593561600) { // 01.07.2020\n            return available_bonus.mul(2);\n        } else if (block.timestamp < 1606780800) { // 01.12.2020\n            return available_bonus.mul(3);\n        } else if (block.timestamp < 1617235200) { // 01.04.2021\n            return available_bonus.mul(4);\n        } else if (block.timestamp < 1625097600) { // 01.07.2021\n            return available_bonus.mul(5);\n        } else if (block.timestamp < 1633046400) { // 01.10.2021\n            return available_bonus.mul(6);\n        } else if (block.timestamp < 1638316800) { // 01.12.2021\n            return available_bonus.mul(7);\n        } else if (block.timestamp < 1646092800) { // 01.03.2022\n            return available_bonus.mul(8);\n        } else if (block.timestamp < 1654041600) { // 01.06.2022\n            return available_bonus.mul(9);\n        } else if (block.timestamp < 1661990400) { // 01.09.2022\n            return available_bonus.mul(10);\n        } else if (block.timestamp < 1669852800) { // 01.12.2022\n            return available_bonus.mul(11);\n        } else if (block.timestamp < 1677628800) { // 01.03.2023\n            return available_bonus.mul(12);\n        } else if (block.timestamp < 1682899200) { // 01.05.2023\n            return available_bonus.mul(13);\n        } else if (block.timestamp < 1688169600) { // 01.07.2023\n            return available_bonus.mul(14);\n        } else if (block.timestamp < 1696118400) { // 01.10.2023\n            return available_bonus.mul(15);\n        } else if (block.timestamp < 1701388800) { // 01.12.2023\n            return available_bonus.mul(16);\n        } else {\n            return seed_bonus[sender];\n        }\n    }\n\n    function get_available_private_bonus(\n        address sender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        uint256 available_bonus = private_bonus[sender].div(18);\n        if (block.timestamp < 1575158400) { // 01.12.2019\n            return 0;\n        } else if (block.timestamp < 1580515200) { // 01.02.2020\n            return available_bonus;\n        } else if (block.timestamp < 1588291200) { // 01.05.2020\n            return available_bonus.mul(2);\n        } else if (block.timestamp < 1606780800) { // 01.12.2020\n            return available_bonus.mul(3);\n        } else if (block.timestamp < 1617235200) { // 01.04.2021\n            return available_bonus.mul(4);\n        } else if (block.timestamp < 1619827200) { // 01.05.2021\n            return available_bonus.mul(5);\n        } else if (block.timestamp < 1627776000) { // 01.08.2021\n            return available_bonus.mul(6);\n        } else if (block.timestamp < 1638316800) { // 01.12.2021\n            return available_bonus.mul(7);\n        } else if (block.timestamp < 1646092800) { // 01.03.2022\n            return available_bonus.mul(8);\n        } else if (block.timestamp < 1656633600) { // 01.07.2022\n            return available_bonus.mul(9);\n        } else if (block.timestamp < 1664582400) { // 01.10.2022\n            return available_bonus.mul(10);\n        } else if (block.timestamp < 1669852800) { // 01.12.2022\n            return available_bonus.mul(11);\n        } else if (block.timestamp < 1680307200) { // 01.04.2023\n            return available_bonus.mul(12);\n        } else if (block.timestamp < 1688169600) { // 01.07.2023\n            return available_bonus.mul(13);\n        } else if (block.timestamp < 1696118400) { // 01.10.2023\n            return available_bonus.mul(14);\n        } else if (block.timestamp < 1701388800) { // 01.12.2023\n            return available_bonus.mul(15);\n        } else if (block.timestamp < 1709251200) { // 01.03.2024\n            return available_bonus.mul(16);\n        } else if (block.timestamp < 1719792000) { // 01.07.2024\n            return available_bonus.mul(17);\n        } else {\n            return private_bonus[sender];\n        }\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    )\n        internal\n    {\n        if (block.timestamp < STOP_ALL_LOCKS_TIME) {\n            if (recipient == address(bank)) {\n                require(\n                    tokens_for_sell[sender] >= amount,\n                    \"Tokens must be unlocked\"\n                );\n                require(\n                    block.timestamp < STOP_SELL_TIME,\n                    \"The time must be less than the stop sell time\"\n                );\n                require(\n                    bank.send_ether(\n                        address(uint160(sender)),\n                        amount\n                    ),\n                    \"Bank problem\"\n                );\n                tokens_for_sell[sender] = tokens_for_sell[sender].sub(\n                    amount\n                );\n            } else {\n                require(\n                    amount <= get_available_balance(sender),\n                    \"No available balance\"\n                );\n            }\n        }\n        super._transfer(sender, recipient, amount);\n    }\n}\n",
  "sourceMap": "597:23951:1:-;;;1947:909;8:9:-1;5:2;;;30:1;27;20:12;5:2;1947:909:1;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1947:909:1;;;;;;;;;;;;;;;;;416:163:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;504:12;;1947:909:1;;;;;;;;416:163:5;;;2133:2:1;;504:12:5;;416:163;504:12;:::i;:::-;-1:-1:-1;526:16:5;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:5;:20;;-1:-1:-1;;552:20:5;;;;;;;;;;-1:-1:-1;;;;;;658:19:3;552:20:5;667:10:3;658:19;;;;;;;;;;692:40;;-1:-1:-1;;;;;725:6:3;;;;;;-1:-1:-1;;;;692:40:3;;-1:-1:-1;;692:40:3;2151:13:1;:30;;-1:-1:-1;;;;;;2151:30:1;-1:-1:-1;;;;;2151:30:1;;;;;2232:10;:8;;;;;:10;;:::i;:::-;2224:19;;2218:2;:25;2205:9;:39;2191:11;:53;;;;2298:10;:8;;;:10;;:::i;:::-;2290:19;;2284:2;:25;2271:9;:39;2254:14;:56;;;;2365:10;:8;;;:10;;:::i;:::-;2357:19;;2351:2;:25;2339:8;:38;2320:16;:57;;;;2387:69;2393:13;;;;;;;;;-1:-1:-1;;;;;2393:13:1;2439:16;;2422:14;;2408:11;;:28;:47;2387:5;;;:69;;:::i;:::-;2466:4;:12;;-1:-1:-1;;;;;;2466:12:1;-1:-1:-1;;;;;2466:12:1;;;;;2528:10;:8;;;;;:10;;:::i;:::-;2520:19;;2514:2;:25;2502:8;:38;2488:11;:52;;;2556:4;;2550:24;;-1:-1:-1;;;;;2556:4:1;;;;2550:5;;;;;:24;;:::i;:::-;2584:9;:22;;-1:-1:-1;;;;;;2584:22:1;-1:-1:-1;;;;;2584:22:1;;;;;2660:10;:8;;;;;:10;;:::i;:::-;2652:19;;2646:2;:25;2635:7;:37;2616:16;:56;;;2688:9;;2682:34;;-1:-1:-1;;;;;2688:9:1;;;;2682:5;;;;;:34;;:::i;:::-;2726:7;:18;;-1:-1:-1;;;;;;2726:18:1;-1:-1:-1;;;;;2726:18:1;;;;;2797:10;:8;;;;;:10;;:::i;:::-;2789:19;;2783:2;:25;2771:8;:38;2754:14;:55;;;2825:7;;2819:30;;-1:-1:-1;;;;;2825:7:1;;;;2819:5;;;;;:30;;:::i;:::-;1947:909;;;;597:23951;;1478:81:5;1543:9;;;;1478:81;;:::o;5771:302:4:-;-1:-1:-1;;;;;5846:21:4;;5838:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:24;5946:6;5929:12;;:16;;;;;;:24;;;;:::i;:::-;5914:12;:39;-1:-1:-1;;;;;5984:18:4;;:9;:18;;;;;;;;;;;;:30;;6007:6;;5984:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;5963:18:4;;:9;:18;;;;;;;;;;;:51;;;;6029:37;;;;;;;5963:18;;:9;;6029:37;;;;;;;;;;5771:302;;:::o;834:176:2:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:2:o;597:23951:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;597:23951:1;;;-1:-1:-1;597:23951:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/IsinaToken.sol",
  "type": "contract"
}